/**
 * Created by anl on 4/3/2019.
 */


(function (angular) {
	'use strict';

	var moduleName = 'productionplanning.accounting';

	var cloudCommonModule = 'cloud.common';
	var basicsCostCodeModule = 'basics.costcodes';
	var basicsCustomizeModule = 'basics.customize';
	var platform = 'platform';
	var basicsMaterialModule = 'basics.material';
	var ppsCommonModule = 'productionplanning.common';
	var ppsFormulaConfigModule = 'productionplanning.formulaconfiguration';
	//var PpsDrawingModule = 'productionplanning.drawing';

	angular.module(moduleName).factory('productionplanningAccountingTranslationService', AccountingTranslationService);

	AccountingTranslationService.$inject = ['platformTranslationUtilitiesService'];

	function AccountingTranslationService(platformTranslationUtilitiesService) {
		var service = {};

		var data = {
			toTranslate: {},
			translate: null,
			updateCallback: null,
			allUsedModules: [moduleName, cloudCommonModule, basicsCostCodeModule, basicsCustomizeModule,
				platform, basicsMaterialModule, ppsCommonModule, ppsFormulaConfigModule]
		};

		data.words = {
			baseGroup: {location: platform, identifier: 'baseGroup', initial: '*Basic Data'},
			ComponentTypeFk: {location: moduleName, identifier: 'result.componentTypeFk', initial: '*Component Type'},
			MaterialFk: {location: basicsMaterialModule, identifier: 'record.material', initial: '*Material'},
			CostCodeFk: {location: basicsCostCodeModule, identifier: 'costCodes', initial: '*Cost Codes'},
			MaterialGroupFk: {
				location: basicsMaterialModule,
				identifier: 'record.materialGroup',
				initial: '*Material Group'
			},
			UomFk: {location: cloudCommonModule, identifier: 'entityUoM', initial: '*Uom'},
			QuantityFormula: {location: moduleName, identifier: 'result.quantityFormula', initial: '*Quantity Formula'},
			IsLive: {location: basicsCustomizeModule, identifier: 'islive', initial: '*Is Live'},
			Remark: {location: basicsCustomizeModule, identifier: 'remark', initial: '*Remark'},
			Result: {location: moduleName, identifier: 'result.result', initial: '*Result'},

			Description: {location: cloudCommonModule, identifier: 'description', initial: '*Description'},
			RuleSetFk: {location: moduleName, identifier: 'entityRuleSet', initial: '*Rule Set'},
			RuleTypeFk: {location: moduleName, identifier: 'rule.ruleTypeFk', initial: '*Rule Type'},
			ImportFormatFk: {location: moduleName, identifier: 'rule.importFormatFk', initial: '*Import Format'},
			MatchFieldFk: {location: moduleName, identifier: 'rule.matchFieldFk', initial: '*Match Field'},
			MatchPattern: {location: moduleName, identifier: 'rule.matchPattern', initial: '*Match Pattern'},

			Comment: {location: cloudCommonModule, identifier: 'entityComment', initial: '*Comments'},
			AutoGenerated: {location: moduleName, identifier: 'ruleSet.autoGenerated', initial: '*Auto Generated'},

			Uom2Fk: {location: moduleName, identifier: 'result.uom2', initial: '*Uom2'},
			Uom3Fk: {location: moduleName, identifier: 'result.uom3', initial: '*Uom3'},
			QuantityFormula2: {
				location: moduleName,
				identifier: 'result.quantityFormula2',
				initial: '*Quantity Formula2'
			},
			QuantityFormula3: {
				location: moduleName,
				identifier: 'result.quantityFormula3',
				initial: '*Quantity Formula3'
			},

			updatePropertyGroup: {
				location: moduleName,
				identifier: 'result.updatePropertyGroup',
				initial: '*Update Property'
			},

			UpdActive: {location: moduleName, identifier: 'result.updActive', initial: '*UPD Active'},
			PpsEntityFk: {location: moduleName, identifier: 'result.ppsEntityFk', initial: '*Pps Entity'},
			Property: {location: moduleName, identifier: 'result.property', initial: '*Property'},
			OverrideUom: {location: moduleName, identifier: 'result.overrideUom', initial: '*Override Uom'},
			Formulas: {location: moduleName, identifier: 'result.formulas', initial: '*Formulas'},
			upstreamItemGroup:  {location: moduleName, identifier: 'result.upstreamItemGroup', initial: '*Upstream Requirement'},
			UpstreamItemTarget:  {location: moduleName, identifier: 'result.upstreamItemTarget', initial: '*Upstream Requirement Target'},
			UpstreamItemTemplateFk:  {location: moduleName, identifier: 'result.upstreamItemTemplateFk', initial: '*Upstream Requirement Template'}
		};

		//Get some predefined packages of words used in project
		platformTranslationUtilitiesService.addHistoryTranslation(data.words);
		platformTranslationUtilitiesService.addCloudCommonBasicWords(data.words);


		//Convert word list into a format used by platform translation service
		data.toTranslate = platformTranslationUtilitiesService.initializeTranslation(data.allUsedModules, data.words);

		//Prepare interface of service and load translations
		platformTranslationUtilitiesService.addTranslationServiceInterface(service, data);
		platformTranslationUtilitiesService.loadModuleTranslation(data);
		platformTranslationUtilitiesService.registerModules(data);

		return service;
	}
})(angular);