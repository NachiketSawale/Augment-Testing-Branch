{
	"sales": {
		"contract": {
			"frameworkWicCatalog": {
				"createSuccessfully": "Create successfully!",
				"entityClerkFk": "Responsible",
				"validationErrMsg": "ValidTo should be greater then ValidFrom",
				"entityPaymentTermFk": "Payment Term",
				"entityValidFrom": "Valid From",
				"entityValidTo": "Valid To",
				"targetWicBoq": "Target WIC BoQ",
				"wicGroup": "WIC Group",
				"generatePaymentSchedule": "Generate Payment Schedule",
				"createWicCatalog": "Create Framework WIC Catalog",
				"errorNoSelectOneContract": "Please Select one Contract record first.",
				"isCallOff": "It Is CallOff Select Other Contract",
				"isChangeOrder": "It Is ChangeOrder Select Other Contract",
				"referenceOtherContract": "Reference Selected Other Contract",
				"noContract": "Contract record not found!",
				"noBoq": "There is no BoQ existed!",
				"boqLimit": "There are more than one BoQ existed and not allow to create WIC catalog!",
				"infoMsgAlreadyFrameworkContract": "Cannot execute the wizard since already exists WIC Catalog with reference to this contract.",
				"createUpdateWicCatalog": "Create/Update Framework WIC Catalog",
				"updateSuccessfully": "WIC Catalog Updated Successfully!"
			},
			"isFramework": "Is Framework",
			"isFreeItemsAllowed": "New Items Allowed",
			"frameworkCallOffRestrictedHeader": "Cannot Create Framework Contract Call-Off",
			"isBillOptionalItems": "Bill altern. / opt. items",
			"frameworkCallOffRestrictedMsg": "The referenced framework contract on the selected WIC catalog has not yet been approved. Please check the status of the framework contract",
			"entityFwBoqWicCatFk": "Framework WIC Group",
			"wicCatBoqFk": "Framework WIC BoQ",
			"containerTitleContracts": "Contracts",
			"containerTitleContractsForm": "Contract Details",
			"containerTitleTotals": "Totals",
			"containerBillingschema": "Billing Schema",
			"relatedWips": "Related WIPs",
			"relatedBills": "Related Bills",
			"documentsProject": "Documents Project",
			"documentsRevision": "Documents Revision",
			"documentsProjectForm": "Documents Project Details",
			"documentsRevisionDetail": "Documents Revision Details",
			"generalSettingsData": "General Settings for WIPs",
			"deliveryRequirements": "Delivery Requirements",
			"dirtyRecalculate": "Recalculate",
			"goToSalesContract": "Open Contract",
			"entityContractTypeFk": "Type",
			"entityDocumentType": "Sales Order",
			"docTypeSalesOrder": "Sales Order",
			"docTypeCallOffOrder": "Call-Off Order",
			"docTypeChangeOrder": "Change Order",
			"docTypeFrameworkContract": "Framework Contract",
			"docTypeFrameworkContractCallOff": "Framework Contract Call Off",
			"entityOrdStatusFk": "Contract Status",
			"entityOrderDate": "Order Date",
			"entityBidHeaderFk": "Bid",
			"entityEstHeaderFk": "Estimate",
			"entityOrdHeaderFk": "Main Contract",
			"entityOrdHeaderCode": "Main Contract-Code",
			"entityOrdHeaderDescription": "Main Contract-Description",
			"entityFrameworkContractFk": "Framework Contract",
			"entityOrderNoCustomer": "OrderNo Customer",
			"entityProjectNoCustomer": "Project No Customer",
			"createContractTitle": "Create A Contract",
			"containerContractBoqsTitle": "BoQs",
			"wizardCWCreateBill": "Create Bill from Contract",
			"wizardCWTransferContractQuantity": "Contract Quantity as Bill Quantity",
			"wizardCWCreateBillInProgress": "Bill creation in progress...",
			"wizardCWUpdateBillInProgress": "Bill update in progress...",
			"wizardCWCreateWip": "Create WIP from Contract",
			"wizardCWUpdateWip": "Update WIP from Contract",
			"wizardCWCreateWipInProgress": "WIP creation in progress...",
			"wizardCWUpdateWipInProgress": "WIP update in progress...",
			"wizardCWGenerateType": "Generate Type",
			"wizardCWCreate": "Create",
			"wizardCWUpdate": "Update",
			"wizardCWCreateWipAlreadyExistsConfirm": "The WIP you want to create already exists. Do you want to continue?",
			"wizardCWCreateWipContractsGridLabel": "Contracts",
			"wizardCWCreateWipContractsGridLoading": "Loading contracts...",
			"wizardCWCreateWipContractsCollectiveWIPOption": "CollectiveWIP",
			"wizardCWCreateBillConfirmDlg": "Bill will be created.",
			"wizardCWCreateWipConfirmDlg": "WIP will be created.",
			"noCurrentContractSelection": "Please select a contract at first.",
			"wizardCWCreateBillNotOrderedWarning": "The selected contract is not ordered yet. Check the contract status first.",
			"wizardCWCreateBillContractFinallyBilled": "The selected contract is finally billed. The bill cannot be created.",
			"wizardCWCreateWipContractFinallyBilled": "The selected contract is finally billed. The WIP cannot be created.",
			"wizardCWCreateRevenue": "Transfer Revenue to Estimate",
			"wizardCWCreateRevenueInProgress": "Revenue transfer in progress...",
			"wizardCWCreateRevenueNotOrderedWarning": "The selected contract is not ordered yet. Check the contract status first.",
			"revenueCostCodeFk": "Revenue Cost Code",
			"disCountCostCodeFk": "Discount Cost Code",
			"wizardCSChangeOrdStatus": "Change Contract Status",
			"wizardCSChangeOrdPsStatus": "Change Payment Schedule Status",
			"errorCodeMustBeUnique": "Code should be unique in a project!",
			"entityWipTypeFk": "WIP Type",
			"entityRevisionApplicable": "Revision Applicable",
			"entityWipFirst": "WIP First",
			"entityWipDuration": "WIP Duration",
			"entityIsDays": "Is Days",
			"entityWipCurrent": "WIP Current",
			"entityWipFrom": "WIP From",
			"entityWipUntil": "WIP Until",
			"entityIsWarrenty": "Is Warrenty",
			"entityWarrantyAmount": "Warrenty Amount",
			"entityOrdWarrentyTypeFk": "Warrenty Type",
			"contractSelectionMissing": "No contract selected",
			"noContractHeaderSelected": "There is no contract selected! Please select one!",
			"contractIsReadOnly": "The selected contract is readonly!",
			"assignBidStatusInfo": "Only bids with status '{{statuslist}}' are displayed.",
			"errorNoStatusForSelectedCategory": "There is no contract status for the selected rubric category!",
			"errorReferenceToContractNotSet": "Reference to contract must be set!",
			"errorReferenceToContractNotSetIfPrjChangeSet": "Reference to contract must be set, if project change is set!",
			"clerk": {
				"entityClerk": "Contract Clerk",
				"entityClerkForm": "Contract Clerk Details"
			},
			"entityDateDeliveryFrom": "Date Delivery From",
			"entityBoqHeader": "BoQ Header",
			"entityBoqItem": "BoQ Item",
			"noNewTransactionGenerated": "There is no new new transaction generated, please check amount or status!",
			"entityAdvanceType": "Advance Type",
			"entityAdvanceStatus": "Advance Status",
			"entityReductionRule": "Reduction Rule",
			"entityReductionValue": "Reduction Value",
			"entityIndividualPerformance": "Individual Performance",
			"entityStart": "Start",
			"entityEnd": "End",
			"generateBillFromPaymentSchedule": "Generate Bill From Payment Schedule",
			"generateBillFromPaymentScheduleInProgress": "Generating...",
			"generateBillFromPSSelectedPaymentSchedule": "Selected payment schedule",
			"generateBillFromPSLumpsumFromContract": "Generate lumpsum bill from contract(with lumpsum BoQ)",
			"generateBillFromPSQtyBaseFromWIP": "Generate quantity-based bill from WIP(Ignore Amount from Payment Schedule)",
			"noCurrentContractPaymentScheduleSelection": "Please select a payment schedule at first.",
			"noCurrentValidContractPaymentScheduleSelection": "Please select a valid payment schedule at first.",
			"noCurrentValidContractPaymentScheduleSelectionStatus": "Failed! Please check The Selected Payment Schedule has a valid status to generated a Billing.",
			"assignedPsBillHeaderMsg": "Bill already exists for the selected Payment Schedule line.",
			"entityBillTypeFk": "Bill Type",
			"existBoq": "Existed BoQ",
			"wip": "WIP",
			"paymenetScheduleDescription": "Payment Schedule",
			"updateEstimateWizard": {
				"title": "Update Estimate",
				"selectContractScope": "Select Contract Header Scope",
				"highlightedContractItems": "Selected Contract Header Items",
				"entireContracts": "Entire Contracts",
				"updateEstimateSuccess": "The Estimate updated Successfully!"
			},
			"entityQtoHeaderFk": "Qto",
			"entityQtoCode": "Qto",
			"entityQtoDescription": "Qto Description",
			"ordPsSortingSamllerThan2147483647": "Sorting need to be samller than 2147483647",
			"onlyFinalLineCanSetFinalItem": "Cannot set final item but final line",
			"distributeBasedOn": "Distribute based on",
			"IsNotAccrualPrr": "Is Not Accrual",
			"isDiverseDebitorsAllowed": "Is diverse debitors allowed",
			"generatePaymentScheduleFromSchedule": {
				"title": "Generate Payment Schedule From Schedule",
				"haveIsDoneItemsCannotGenerate": "There is payment schedule which is done. Cannot generate!",
				"sumOfEstLineItemsRevenueIsZero": "Sum of Estimate Line Items'revenue is 0. Cannot generate payment schedules!",
				"schedule": "Schedule",
				"project": "Project",
				"days": "days",
				"daysOffset": "Days Offset",
				"after": "After",
				"before": "Before",
				"plannedFinish": "Planned Finish",
				"plannedStart": "Planned Start",
				"actualFinish": "Actual Finish",
				"actualStart": "Actual Start",
				"currentFinish": "Current Finish",
				"currentStart": "Current Start",
				"plannedDuration": "Planned Duration",
				"dateTypeIsEmpty": "{{datetype}} of activities {{codestr}} is empty, these activities cannot generate payment schedules.",
				"RevenueOfAvtitiesIsZero": "Estimate Line Items'revenue of activities {{codestr}} is 0, these activities cannot generate payment schedules.",
				"doYouWantToContinue": "Do you want to continue?",
				"notes": "Notes",
				"takeEstLineItemRevenueAaAmount": "Linked Estimate line item's revenue will be taken as amount",
				"activityAndChildrenCannotChosenSameTime": "Summary activity and its children cannot be chosen at the same time",
				"optionNoteFromActivityOnly": "For option 'From Activity Only', Summary Activity's linked Estimate Line Item's revenue would be ignored regardless summary activity is checked or not.",
				"optionNoteFromSummaryOnly": "For option 'From Summary Only', all sub activity's respective revenue will be summarized.",
				"optionNoteFromSummaryActivity": "For option 'From Summary & Activity', revenue from respective line items could be double counted and date will be disordered. User has to use in cautious.",
				"generateOptions": "Generate Options:",
				"fromActivityOnly": "From Activity Only",
				"fromSummaryOnly": "From Summary Only",
				"fromSummary&Activity": "From Summary & Activity",
				"error_HasError": "Exists already call off contract which would be out of range.",
				"entityChangeSalesContractConfig": "Change Contract Type/Configuration"
			},
			"generateBillFromAdvanceLineTitle": "Generate Bill From Advance Line",
			"generateBillFromPSSelectedAdvanceLine": "Selected advance line",
			"noCurrentContractAdvanceLineSelection": "Please select an advance line at first.",
			"billFromAdvanceCreatedSuccess": "Create Bill Successfully! Open Created Bill?",
			"generalError": "An error occurred while processing the request. Please try again later.",
			"wizardCSChangeAdvanceLineStatusTitle": "Change Advance Line Status",
			"entityStatusContarcted":  "Contracted"
		}
	}
}
