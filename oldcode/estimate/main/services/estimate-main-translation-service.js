/*
 * $Id$
 * Copyright (c) RIB Software SE
 */

(function () {

	'use strict';

	let estimateMainModule = 'estimate.main';
	let estimateCommonModule = 'estimate.common';
	let salesBidModule = 'sales.bid';
	let salesCommonModule = 'sales.common';
	let estimateProjectModule = 'estimate.project';
	let estimateRuleModule = 'estimate.rule';
	let cloudCommonModule = 'cloud.common';
	let basicsCostCodesModule = 'basics.costcodes';
	let basicsMaterialModule = 'basics.material';
	let estimateParamModule = 'estimate.parameter';
	let projectMainModule = 'project.main';
	let prjLocation = 'project.location';
	let modelMainModule = 'model.main';
	let basicsCommonModule = 'basics.common';
	let basicsCustomizeModule = 'basics.customize';
	let constructionSystemMainModule = 'constructionsystem.main';
	let projectStructuresModule = 'project.structures';
	let projectCostcodesModule = 'project.costcodes';
	let boqMainModule = 'boq.main';
	let basicsUnitModule = 'basics.unit';
	let basicsClerkModule = 'basics.clerk';
	let basicsAssetMasterModule = 'basics.assetmaster';
	let basicsCostGroupsModule = 'basics.costgroups';
	let qtoMainModule = 'qto.main';
	let assemblyModule = 'estimate.assemblies';
	let estimateParamter = 'estimate.parameter';
	let constructionsystemCommon = 'constructionsystem.common';
	let schedulingMainModule = 'scheduling.main';
	let schedulingScheduleModule = 'scheduling.schedule';
	let basicsPrc = 'basics.procurementstructure';
	let basicsRiskRegisterModule = 'basics.riskregister';
	let mtwoControlTowerModule = 'mtwo.controltower';
	let projectPlantAssemblyModule = 'project.plantassembly';

	/**
	 * @ngdoc service
	 * @name estimateMainTranslationService
	 * @description provides translation for estimate main module
	 */
	/* jshint -W106 */ // Variable name is according usage in translation json
	angular.module(estimateMainModule).service('estimateMainTranslationService', ['platformUIBaseTranslationService', 'platformTranslationUtilitiesService',
		'modelViewerTranslationModules',

		function (platformUIBaseTranslationService, platformTranslationUtilitiesService,
			modelViewerTranslationModules) {

			let estimateMainTranslations = {
				translationInfos: {
					'extraModules': [estimateMainModule, estimateCommonModule, estimateProjectModule, cloudCommonModule, basicsCostCodesModule, basicsMaterialModule,
						estimateRuleModule, estimateParamModule, salesBidModule, salesCommonModule, projectMainModule,
						basicsCommonModule, basicsCustomizeModule, constructionSystemMainModule, projectStructuresModule, projectCostcodesModule, boqMainModule, basicsUnitModule,
						basicsClerkModule, basicsAssetMasterModule, basicsCostGroupsModule, qtoMainModule, assemblyModule, prjLocation, estimateParamter, constructionsystemCommon,
						schedulingMainModule, schedulingScheduleModule, basicsPrc, basicsRiskRegisterModule, mtwoControlTowerModule, projectPlantAssemblyModule].concat(modelViewerTranslationModules),
					'extraWords': {
						currencies: {location:estimateMainModule,identifier:'currencies',initial:'Currencies'},
						references : {location: estimateMainModule, identifier: 'references', initial: 'References' },
						ruleAndParam : {location: estimateMainModule, identifier: 'ruleAndParam', initial: 'Rule/Parameter' },
						itemQuantity : {location: estimateMainModule, identifier: 'itemQuantity', initial: 'Item Quantity' },
						quantityRelation : {location: estimateMainModule, identifier: 'quantityRelation', initial: 'Quantity Relation' },
						quantiyAndFactors : {location: estimateMainModule, identifier: 'quantityAndFactors', initial: 'Quantiy/Factors' },
						costFactors : {location: estimateMainModule, identifier: 'costFactors', initial: 'Cost Factors' },
						costAndHours : {location: estimateMainModule, identifier: 'costAndHours', initial: 'Cost/Hours' },
						directIndCost : {location: estimateMainModule, identifier: 'directIndCost', initial: 'Direct/Indirect Cost' },
						flags : {location: estimateMainModule, identifier: 'flags', initial: 'Flags' },
						assignments : {location: estimateMainModule, identifier: 'assignments', initial: 'Assignments' },
						sortCodes : {location: estimateMainModule, identifier: 'sortCodes', initial: 'Sort Codes' },
						packageAndCos : {location: estimateMainModule, identifier: 'packageAndCos', initial: 'Package/COS' },
						duration : {location: estimateMainModule, identifier: 'duration', initial: 'Duration' },
						userDefText: { location: cloudCommonModule, identifier: 'UserdefTexts', initial: 'User Defined Text' },
						ruleInfo:{location: estimateMainModule, identifier: 'ruleInfo', initial: 'Rules' },
						package:{location: cloudCommonModule, identifier: 'entityPackage', initial: 'Package' },
						PackageAssignments:{location: cloudCommonModule, identifier: 'entityPackage', initial: 'Package' },
						comment :{ location: estimateMainModule, identifier: 'comment', initial: 'Comment' },

						ProjectNo: {location: estimateMainModule, identifier: 'projectNo', initial: 'Project-Number'},
						ProjectName: {location: estimateMainModule, identifier: 'projectName', initial: 'Project-Name'},
						EstimationCode: { location: estimateMainModule, identifier: 'entityEstimationHeader', initial: 'Estimate Code' },
						EstimationDescription: { location: estimateMainModule, identifier: 'entityEstimationDesc', initial: 'Estimate Desc.' },

						Id:{ location: estimateMainModule, identifier: 'id', initial: 'Id' },
						CompareFlag:{ location: estimateMainModule, identifier: 'compareFlag', initial: 'Compare Flag' },
						Info:{ location: estimateMainModule, identifier: 'info', initial: 'Info' },
						Rule:{location: estimateRuleModule, identifier: 'rules', initial: 'Rules' },
						Param:{location: estimateParamModule, identifier: 'params', initial: 'Params' },

						Filter:{location: estimateMainModule, identifier: 'filter', initial: 'Filter' },

						Reference: { location: cloudCommonModule, identifier: 'entityReference', initial: 'Reference' },
						Reference2: { location: boqMainModule, identifier: 'Reference2', initial: 'Reference No. 2' },
						BoqDivisionTypeFk: { location: boqMainModule, identifier: 'BoqDivisionTypeFk', initial: 'Division Type' },
						BriefInfo: { location: cloudCommonModule, identifier: 'entityBriefInfo', initial: 'Outline Specification' },

						BasUomFk: { location: cloudCommonModule, identifier: 'entityUoM', initial: 'UoM' },
						BasCurrencyFk: { location: cloudCommonModule, identifier: 'entityCurrency', initial: 'Currency' },
						BasUomTargetFk:{ location: estimateMainModule, identifier: 'basUomTargetFk', initial: 'UoM Target' },

						UoMFk: { location: cloudCommonModule, identifier: 'entityUoM', initial: 'UoM' },
						UomFk: { location: cloudCommonModule, identifier: 'entityUoM', initial: 'UoM' },
						QuantityUoMFk: { location: cloudCommonModule, identifier: 'entityUoM', initial: 'UoM' },
						TotalOf: { location: estimateMainModule, identifier: 'totalOf', initial: 'Total of' },
						Total: { location: estimateMainModule, identifier: 'total', initial: 'Total' },
						CurUoM: { location: estimateMainModule, identifier: 'curOrUoM', initial: 'Cur/UoM' },
						Estimate: { location: estimateMainModule, identifier: 'estimate', initial: 'Estimate' },
						UoM: { location: cloudCommonModule, identifier: 'entityUoM', initial: 'UoM' },
						Currency: { location: cloudCommonModule, identifier: 'entityCurrency', initial: 'Currency' },

						QuantityDetail:{ location: estimateMainModule, identifier: 'quantityDetail', initial: 'Quantity Detail' },
						Quantity:{ location: cloudCommonModule, identifier: 'entityQuantity', initial: 'Quantity' },
						QuantityTarget:{ location: estimateMainModule, identifier: 'aqQuantityTarget', initial: 'AQ Quantity Item' },
						QuantityTargetDetail:{ location: estimateMainModule, identifier: 'aqQuantityTargetDetail', initial: 'AQ Quantity Target Detail' },
						WqQuantityTarget:{ location: estimateMainModule, identifier: 'wqQuantityTarget', initial: ' Wq Quantity Item' },
						WqQuantityTargetDetail:{ location: estimateMainModule, identifier: 'wqQuantityTargetDetail', initial: 'Wq Quantity Target Detail' },

						QuantityUnitTarget:{ location: estimateMainModule, identifier: 'quantityUnitTarget', initial: 'QuantityUnitTarget' },
						QuantityTotal:{ location: estimateMainModule, identifier: 'quantityTotal', initial: 'QuantityTotal' },
						QuantityOriginal:{ location: estimateMainModule, identifier: 'quantityOriginal', initial: 'QuantityOriginal' },
						QuantityFactorDetail1:{ location: estimateMainModule, identifier: 'quantityFactorDetail1', initial: 'QuantityFactorDetail1' },
						QuantityFactor1:{ location: estimateMainModule, identifier: 'quantityFactor1', initial: 'QuantityFactor1' },
						QuantityFactorDetail2:{ location: estimateMainModule, identifier: 'quantityFactorDetail2', initial: 'QuantityFactorDetail2' },
						QuantityFactor2:{ location: estimateMainModule, identifier: 'quantityFactor2', initial: 'QuantityFactor2' },
						QuantityFactor3:{ location: estimateMainModule, identifier: 'quantityFactor3', initial: 'QuantityFactor3' },
						QuantityFactor4:{ location: estimateMainModule, identifier: 'quantityFactor4', initial: 'QuantityFactor4' },
						QuantityFactorCc:{ location: estimateMainModule, identifier: 'quantityFactorCc', initial: 'QuantityFactorCc' },
						OverrideFactor:{ location: estimateMainModule, identifier: 'overrideFactor', initial: 'OverrideFactor' },

						ProductivityFactorDetail:{ location: estimateMainModule, identifier: 'productivityFactorDetail', initial: 'ProductivityFactorDetail' },
						ProductivityFactor:{ location: estimateMainModule, identifier: 'productivityFactor', initial: 'ProductivityFactor' },

						CostUnit:{ location: estimateMainModule, identifier: 'costUnit', initial: 'CostUnit' },
						CostUnitTarget:{ location: estimateMainModule, identifier: 'costUnitTarget', initial: 'CostUnitTarget' },
						CostUnitOriginal:{ location: estimateMainModule, identifier: 'costUnitOriginal', initial: 'CostUnitOriginal' },
						CostTotal:{ location: estimateMainModule, identifier: 'costTotal', initial: 'CostTotal' },
						CostTotalOc:{ location: estimateMainModule, identifier: 'costTotalOc', initial: 'CostTotalOC' },
						CostTotalCurrency:{ location: estimateMainModule, identifier: 'costTotalCurrency', initial: 'CostTotalCurrency' },
						CostFactorDetail1:{ location: estimateMainModule, identifier: 'costFactorDetail1', initial: 'CostFactorDetail1' },
						CostFactor1:{ location: estimateMainModule, identifier: 'costFactor1', initial: 'CostFactor1' },
						CostFactorDetail2:{ location: estimateMainModule, identifier: 'costFactorDetail2', initial: 'CostFactorDetail2' },
						CostFactor2:{ location: estimateMainModule, identifier: 'costFactor2', initial: 'CostFactor2' },
						CostFactorCc:{ location: estimateMainModule, identifier: 'costFactorCc', initial: 'CostFactorCc' },
						CostUom:{ location: estimateMainModule, identifier: 'effectiveCostUnit', initial: 'Effective Cost/Unit' },

						HoursUnit:{ location: estimateMainModule, identifier: 'hoursUnit', initial: 'HoursUnit' },
						HoursUnitTarget:{ location: estimateMainModule, identifier: 'hoursUnitTarget', initial: 'HoursUnitTarget' },
						HoursTotal:{ location: estimateMainModule, identifier: 'hoursTotal', initial: 'HoursTotal' },
						HourFactor:{ location: estimateMainModule, identifier: 'hourFactor', initial: 'HourFactor' },

						MdcControllingUnitFk:{ location: estimateMainModule, identifier: 'mdcControllingUnitFk', initial: 'Controlling Unit' },
						BoqRootRef: { location: estimateMainModule, identifier: 'boqRootRef', initial: 'BoQ Root Item Ref. No' },
						BoqHeaderFk:{ location: estimateMainModule, identifier: 'boqHeaderFk', initial: 'BoqHeader' },
						BoqHeaderItemFk:{ location: estimateMainModule, identifier: 'boqRootRef', initial: 'BoQ Root Item Ref. No' },
						BoqItemFk:{ location: estimateMainModule, identifier: 'boqItemFk', initial: 'BoqItem'},
						BoqSplitQuantityFk:{ location: estimateMainModule, identifier: 'boqSplitQuantity', initial: 'Boq Split Quantity'},

						PsdHeaderActivityFk:{ location: estimateMainModule, identifier: 'activitySchedule', initial: 'Activity Schedule' },
						PsdActivitySchedule:{ location: estimateMainModule, identifier: 'activitySchedule', initial: 'Activity Schedule' },
						PlannedStart: { location: schedulingMainModule, identifier: 'plannedStart', initial: 'Planned Start' },
						PlannedFinish: { location: schedulingMainModule, identifier: 'plannedFinish', initial: 'Planned Finish'},
						PlannedDuration: {location: schedulingMainModule, identifier: 'plannedDuration', initial: 'Planned Duration'},
						PercentageCompletion: { location: schedulingMainModule, identifier: 'entityMeasuredPerformance', initial: 'Perf %' },
						SCurveFk:{location: schedulingMainModule, identifier: 'activitySCurve', initial: 'S Curve'},

						PsdActivityFk:{ location: estimateMainModule, identifier: 'psdActivityFk', initial: 'PsdActivity' },
						LicCostGroup1Fk:{ location: estimateMainModule, identifier: 'licCostGroup1Fk', initial: 'LicCostGroup1' },
						LicCostGroup2Fk:{ location: estimateMainModule, identifier: 'licCostGroup2Fk', initial: 'LicCostGroup2' },
						LicCostGroup3Fk:{ location: estimateMainModule, identifier: 'licCostGroup3Fk', initial: 'LicCostGroup3' },
						LicCostGroup4Fk:{ location: estimateMainModule, identifier: 'licCostGroup4Fk', initial: 'LicCostGroup4' },
						LicCostGroup5Fk:{ location: estimateMainModule, identifier: 'licCostGroup5Fk', initial: 'LicCostGroup5' },

						BoqWicCatFk:{ location: estimateMainModule, identifier: 'boqWicCatFk', initial: 'WIC Group Ref.No'},
						WicBoqItemFk:{ location: estimateMainModule, identifier: 'wicBoqItemFk', initial: 'WIC BoQ -Item Ref.No'},
						WicBoqHeaderFk:{ location: estimateMainModule, identifier: 'wicBoqHeaderFk', initial: 'WIC BoQ -Root Item ref.No'},

						WorkContentInfo:{ location: boqMainModule, identifier: 'WorkContentInfo', initial: 'Work Content'},
						Wic2AssemblyQuantity: { location: boqMainModule, identifier: 'wic2AssemblyQuantity', initial: 'Takeover Quantity'},
						WicEstAssembly2WicFlagFk: { location: boqMainModule, identifier: 'WicEstAssembly2WicFlagFk', initial: 'Takeover Mode'},

						PrjCostGroup1Fk:{ location: estimateMainModule, identifier: 'prjCostGroup1Fk', initial: 'PrjCostGroup1' },
						PrjCostGroup2Fk:{ location: estimateMainModule, identifier: 'prjCostGroup2Fk', initial: 'PrjCostGroup2' },
						PrjCostGroup3Fk:{ location: estimateMainModule, identifier: 'prjCostGroup3Fk', initial: 'PrjCostGroup3' },
						PrjCostGroup4Fk:{ location: estimateMainModule, identifier: 'prjCostGroup4Fk', initial: 'PrjCostGroup4' },
						PrjCostGroup5Fk:{ location: estimateMainModule, identifier: 'prjCostGroup5Fk', initial: 'PrjCostGroup5' },

						MdcWorkCategoryFk:{ location: estimateMainModule, identifier: 'mdcWorkCategoryFk', initial: 'MdcWorkCategory' },
						MdcAssetMasterFk:{ location: estimateMainModule, identifier: 'mdcAssetMasterFk', initial: 'MdcAssetMaster' },

						PrjLocationFk:{ location: estimateMainModule, identifier: 'prjLocationFk', initial: 'PrjLocation' },
						UserDefined1: { location: cloudCommonModule, identifier: 'entityUserDefined', param: { p_0: '1' }, initial: 'User Defined 1' },
						UserDefined2: { location: cloudCommonModule, identifier: 'entityUserDefined', param: { p_0: '2' }, initial: 'User Defined 2' },
						UserDefined3: { location: cloudCommonModule, identifier: 'entityUserDefined', param: { p_0: '3' }, initial: 'User Defined 3' },
						UserDefined4: { location: cloudCommonModule, identifier: 'entityUserDefined', param: { p_0: '4' }, initial: 'User Defined 4' },
						UserDefined5: { location: cloudCommonModule, identifier: 'entityUserDefined', param: { p_0: '5' }, initial: 'User Defined 5' },

						IsLumpsum:{ location: estimateMainModule, identifier: 'isLumpSum', initial: 'IsLumpSum' },
						IsDisabled:{ location: estimateMainModule, identifier: 'isDisabled', initial: 'IsDisabled' },
						IsGc:{ location: estimateMainModule, identifier: 'isGc', initial: 'General Cost'},
						IsIncluded:{ location: estimateMainModule, identifier: 'isIncluded', initial: 'Included'},
						NoLeadQuantity:{ location: estimateMainModule, identifier: 'noLeadQuantity', initial: 'No Lead Quantity'},
						IsDurationQuantityActivity:{ location: estimateMainModule, identifier: 'isDurationQuantityActivity', initial: 'Is Duration Quantity Activity'},
						Included:{ location: estimateMainModule, identifier: 'isIncluded', initial: 'Included'},
						LeadQuantityCalc: {location: basicsCostGroupsModule, identifier: 'leadquantitycalc', initial: 'Calculate Lead Quantity'},

						EfficiencyFactorDetail1:{ location: estimateMainModule, identifier: 'efficiencyFactorDetail1', initial: 'EfficiencyFactorDetail1' },
						EfficiencyFactor1:{ location: estimateMainModule, identifier: 'efficiencyFactor1', initial: 'EfficiencyFactor1' },
						EfficiencyFactorDetail2:{ location: estimateMainModule, identifier: 'efficiencyFactorDetail2', initial: 'EfficiencyFactorDetail2' },
						EfficiencyFactor2:{ location: estimateMainModule, identifier: 'efficiencyFactor2', initial: 'EfficiencyFactor2' },

						QuantityReal:{ location: estimateMainModule, identifier: 'quantityReal', initial: 'QuantityReal' },
						QuantityInternal:{ location: estimateMainModule, identifier: 'quantityInternal', initial: 'QuantityInternal' },
						CostUnitSubItem:{ location: estimateMainModule, identifier: 'costUnitSubItem', initial: 'CostUnitSubItem' },
						CostUnitLineItem:{ location: estimateMainModule, identifier: 'costUnitLineItem', initial: 'CostUnitLineItem' },
						HoursUnitSubItem:{ location: estimateMainModule, identifier: 'hoursUnitSubItem', initial: 'HoursUnitSubItem' },
						HoursUnitLineItem:{ location: estimateMainModule, identifier: 'hoursUnitLineItem', initial: 'HoursUnitLineItem' },

						EstCostRiskFk:{ location: estimateMainModule, identifier: 'estCostRiskFk', initial: 'estCostRisk' },
						EstHeaderFk:{ location: estimateMainModule, identifier: 'estHeaderFk', initial: 'EstHeader' },
						EstLineItemFk:{ location: estimateMainModule, identifier: 'estLineItemFk', initial: 'Line Item Ref.' },
						EstAssemblyFk:{ location: estimateMainModule, identifier: 'estAssemblyFk', initial: 'Assembly Template' },
						EstResourceFk:{ location: estimateMainModule, identifier: 'estResourceFk', initial: 'EstResource' },
						EstResourceTypeFk:{ location: estimateMainModule, identifier: 'estResourceTypeFk', initial: 'Resource Type' },
						// spec property
						EstResourceTypeFkExtend:{ location: estimateMainModule, identifier: 'estResourceTypeFk', initial: 'Resource Type' },
						EstResourceTypeFkExtended:{ location: basicsRiskRegisterModule, identifier: 'estResourceTypeFk', initial: 'Resource Type' },
						EstResourceTypeShortKey:{ location: estimateMainModule, identifier: 'estResourceTypeFk', initial: 'Resource Type' },

						MdcCostCodeFk:{ location: estimateMainModule, identifier: 'mdcCostCodeFk', initial: 'MdcCostCode' },
						MdcMaterialFk:{ location: estimateMainModule, identifier: 'mdcMaterialFk', initial: 'MdcMaterial' },
						PrcPackageFk:{ location: estimateMainModule, identifier: 'prcPackageFk', initial: 'PrcPackage' },
						PrcPackage2HeaderFk:{ location: estimateMainModule, identifier: 'prcPackage2HeaderFk', initial: 'PrcPackage2HeaderFk' },
						PrcPackageStatusFk: { location: basicsCustomizeModule, identifier: 'packagestatus', initial: 'Package Status' },
						PrcStructureFk:{ location: estimateMainModule, identifier: 'prcStructureFk', initial: 'PrcStructure' },

						EstQtyRelBoqFk:{ location: estimateMainModule, identifier: 'estQtyRelBoq', initial: 'Boq Qty Relation' },
						EstQtyRelActFk:{ location: estimateMainModule, identifier: 'estQtyRelAct', initial: 'Act Qty Relation' },
						EstQtyRelGtuFk:{ location: estimateMainModule, identifier: 'estQtyRelGtu', initial: 'Ctu Qty Relation' },
						EstQtyTelAotFk:{ location: estimateMainModule, identifier: 'estQtyRelAot', initial: 'Aot Qty Relation' },

						CosInstanceCode:{ location: estimateMainModule, identifier: 'cosInstanceCode', initial: 'COS Instance C' },
						CosInstanceDescription:{ location: estimateMainModule, identifier: 'cosInstanceDescription', initial: 'COS Instance Desc' },

						CosMasterHeaderCode:{ location: constructionSystemMainModule, identifier: 'masterHeaderCode', initial: 'Master Header Code' },
						CosMasterHeaderDescription:{ location: constructionSystemMainModule, identifier: 'masterHeaderDescription', initial: 'Master Header Description' },

						CommentText:{ location: estimateMainModule, identifier: 'comment', initial: 'Comment' },
						CalculateQuantitySplitting: { location: boqMainModule, identifier: 'CalculateQuantitySplitting', initial: 'Calculate Quantity Splitting'},

						// Multi Currency Spec
						CostExchangeRate1:{location: estimateMainModule,identifier: 'costExchangeRate1',initial:'Cost Foreign Total 1'},
						CostExchangeRate2:{location: estimateMainModule,identifier: 'costExchangeRate2',initial:'Cost Foreign Total 2'},
						Currency1Fk:{location: estimateMainModule,identifier: 'currency1Fk', initial: 'Foreign Currency 1'},
						Currency2Fk:{location: estimateMainModule,identifier: 'currency2Fk', initial: 'Foreign Currency 2'},
						LocalCurrencyDescription:{location: estimateMainModule,identifier: 'localCurrencyDescription',initial:'Local Currency Description'},
						ForeignBudget1:{location: estimateMainModule,identifier:'foreignBudget1',initial:'Foreign Budget 1'},
						ForeignBudget2:{location: estimateMainModule,identifier:'foreignBudget2',initial:'Foreign Budget 2'},
						IsRate:{ location: estimateMainModule, identifier: 'isRate', initial: 'Fix' },
						IsLabour:{ location: estimateMainModule, identifier: 'isLabour', initial: 'Labour' },
						PrjChangeFk : { location: estimateMainModule, identifier: 'prjChange', initial: 'Project Change'},
						PrjChangeStatusFk : { location: estimateMainModule, identifier: 'prjChangeStatus', initial: 'Project Change Status'},
						OrdHeaderFk : { location: estimateMainModule, identifier: 'ordHeaderFk', initial: 'Change Order'},

						MdlModelFk : { location: modelMainModule, identifier: 'entityModel', initial: 'Model'},
						MdlObjectFk : { location: modelMainModule, identifier: 'entityObject', initial: 'Object'},
						ContainerFk : { location: modelMainModule, identifier: 'entityContainer', initial: 'Container'},
						LocationCode: { location: modelMainModule, identifier: 'locationCode', initial: 'Location Code'},
						LocationDesc: { location: modelMainModule, identifier: 'locationDesc', initial: 'Location Description'},

						EntCostUnit:{ location: estimateMainModule, identifier: 'entCostUnit', initial: 'Ent CostUnit' },
						EntCostUnitTarget:{ location: estimateMainModule, identifier: 'entCostUnitTarget', initial: 'Ent CostUnitTarget' },
						EntCostTotal : { location: estimateMainModule, identifier: 'entCostTotal', initial: 'Ent CostTotal'},
						EntHoursUnit:{ location: estimateMainModule, identifier: 'entHoursUnit', initial: 'Ent HoursUnit' },
						EntHoursUnitTarget:{ location: estimateMainModule, identifier: 'entHoursUnitTarget', initial: 'EntHoursUnitTarget' },
						EntHoursTotal : { location: estimateMainModule, identifier: 'entHoursTotal', initial: 'EntHoursTotal'},

						DruCostUnit:{ location: estimateMainModule, identifier: 'druCostUnit', initial: 'Dru CostUnit' },
						DruCostUnitTarget:{ location: estimateMainModule, identifier: 'druCostUnitTarget', initial: 'Dru CostUnitTarget' },
						DruCostTotal : { location: estimateMainModule, identifier: 'druCostTotal', initial: 'Dru CostTotal'},
						DruHoursUnit:{ location: estimateMainModule, identifier: 'druHoursUnit', initial: 'Dru HoursUnit' },
						DruHoursUnitTarget:{ location: estimateMainModule, identifier: 'druHoursUnitTarget', initial: 'DruHoursUnitTarget' },
						DruHoursTotal : { location: estimateMainModule, identifier: 'druHoursTotal', initial: 'DruHoursTotal'},

						DirCostUnit:{ location: estimateMainModule, identifier: 'dirCostUnit', initial: 'Dir CostUnit' },
						DirCostUnitTarget:{ location: estimateMainModule, identifier: 'dirCostUnitTarget', initial: 'Dir CostUnitTarget' },
						DirCostTotal : { location: estimateMainModule, identifier: 'dirCostTotal', initial: 'Dir CostTotal'},
						DirHoursUnit:{ location: estimateMainModule, identifier: 'dirHoursUnit', initial: 'Dir HoursUnit' },
						DirHoursUnitTarget:{ location: estimateMainModule, identifier: 'dirHoursUnitTarget', initial: 'DirHoursUnitTarget' },
						DirHoursTotal : { location: estimateMainModule, identifier: 'dirHoursTotal', initial: 'DirHoursTotal'},

						IndCostUnit:{ location: estimateMainModule, identifier: 'indCostUnit', initial: 'Ind CostUnit' },
						IndCostUnitTarget:{ location: estimateMainModule, identifier: 'indCostUnitTarget', initial: 'Ind CostUnitTarget' },
						IndCostTotal : { location: estimateMainModule, identifier: 'indCostTotal', initial: 'Ind CostTotal'},
						IndHoursUnit:{ location: estimateMainModule, identifier: 'indHoursUnit', initial: 'Ind HoursUnit' },
						IndHoursUnitTarget:{ location: estimateMainModule, identifier: 'indHoursUnitTarget', initial: 'IndHoursUnitTarget' },
						IndHoursTotal : { location: estimateMainModule, identifier: 'indHoursTotal', initial: 'IndHoursTotal'},

						RuleType:{ location: estimateMainModule, identifier: 'type', initial: 'Type' },
						RuleCode:{ location: estimateMainModule, identifier: 'ruleCode', initial: 'Rule Code' },
						RuleDescription : { location: estimateMainModule, identifier: 'ruleDesc', initial: 'Rule Description'},
						EvalSequenceFk:{location: estimateRuleModule, identifier: 'evaluationSequence', initial: 'Evaluation Sequence'},
						ElementCode:{ location: estimateMainModule, identifier: 'elemCode', initial: 'Element Code' },
						ElementDescription : { location: estimateMainModule, identifier: 'elemDesc', initial: 'Element Description'},
						AssignedStructure : { location: estimateMainModule, identifier: 'assignedStructure', initial: 'Assigned Structure'},

						IsIndirectCost :{location: estimateMainModule, identifier : 'isIndirectCost', initial:'Indirect Cost'},
						Sorting :{location: cloudCommonModule, identifier: 'entitySorting', initial: 'Sorting'},
						EstTypeFk :{location: estimateMainModule, identifier: 'estType', initial: 'Estimate Type'},
						EstStatusFk: {location: cloudCommonModule, identifier: 'entityStatus', initial: 'Status'},
						FromDate :{location: estimateMainModule, identifier: 'fromDate', initial: 'From Date'},
						ToDate :{location: estimateMainModule, identifier: 'toDate', initial: 'To Date'},
						IsActive: {location: projectMainModule, identifier: 'entityIsActive', initial: 'Is Active'},
						LgmJobFk: {location: estimateProjectModule, identifier: 'lgmJobFk', initial: 'Job'},
						IsControlling: {location: estimateProjectModule, identifier: 'isControlling', initial: 'Is Controlling'},
						Duration: {location: estimateProjectModule, identifier: 'duration', initial: 'Duration'},
						VersionNo: {location: estimateProjectModule, identifier: 'versionNo', initial: 'Version No'},
						VersionDescription: {location: estimateProjectModule, identifier: 'versionDesc', initial: 'Version Description'},
						VersionComment: {location: estimateProjectModule, identifier: 'versionComment', initial: 'Version Comment'},
						AdvancedAllowance :{location: estimateMainModule, identifier : 'advancedAllowance', initial:'Advanced Allowance'},

						SortCode01Fk: { location: projectStructuresModule, identifier: 'sortCode01', initial: 'Sort Code 1'},
						SortCode02Fk: { location: projectStructuresModule, identifier: 'sortCode02', initial: 'Sort Code 2'},
						SortCode03Fk: { location: projectStructuresModule, identifier: 'sortCode03', initial: 'Sort Code 3'},
						SortCode04Fk: { location: projectStructuresModule, identifier: 'sortCode04', initial: 'Sort Code 4'},
						SortCode05Fk: { location: projectStructuresModule, identifier: 'sortCode05', initial: 'Sort Code 5'},
						SortCode06Fk: { location: projectStructuresModule, identifier: 'sortCode06', initial: 'Sort Code 6'},
						SortCode07Fk: { location: projectStructuresModule, identifier: 'sortCode07', initial: 'Sort Code 7'},
						SortCode08Fk: { location: projectStructuresModule, identifier: 'sortCode08', initial: 'Sort Code 8'},
						SortCode09Fk: { location: projectStructuresModule, identifier: 'sortCode09', initial: 'Sort Code 9'},
						SortCode10Fk: { location: projectStructuresModule, identifier: 'sortCode10', initial: 'Sort Code 10'},

						SortDesc01Fk: { location: projectStructuresModule, identifier: 'sortDesc01', initial: 'Sort Description 1'},
						SortDesc02Fk: { location: projectStructuresModule, identifier: 'sortDesc02', initial: 'Sort Description 2'},
						SortDesc03Fk: { location: projectStructuresModule, identifier: 'sortDesc03', initial: 'Sort Description 3'},
						SortDesc04Fk: { location: projectStructuresModule, identifier: 'sortDesc04', initial: 'Sort Description 4'},
						SortDesc05Fk: { location: projectStructuresModule, identifier: 'sortDesc05', initial: 'Sort Description 5'},
						SortDesc06Fk: { location: projectStructuresModule, identifier: 'sortDesc06', initial: 'Sort Description 6'},
						SortDesc07Fk: { location: projectStructuresModule, identifier: 'sortDesc07', initial: 'Sort Description 7'},
						SortDesc08Fk: { location: projectStructuresModule, identifier: 'sortDesc08', initial: 'Sort Description 8'},
						SortDesc09Fk: { location: projectStructuresModule, identifier: 'sortDesc09', initial: 'Sort Description 9'},
						SortDesc10Fk: { location: projectStructuresModule, identifier: 'sortDesc10', initial: 'Sort Description 10'},
						CosMatchText: { location: estimateMainModule, identifier: 'cosMatchText', initial: 'COS Match Text'},

						EstCostTypeFk: { location: basicsCostCodesModule, identifier: 'costType', initial: 'Cost Type' },
						QuantityTypeFk: { location: estimateMainModule, identifier: 'quantityType', initial: 'Quantity Type'},

						EstResourceFlagFk: { location: estimateMainModule, identifier: 'resourceFlag', initial: 'Resource Flag'},
						Date: { location: estimateMainModule, identifier: 'date', initial: 'Date'},

						PrjCharacter : {location: boqMainModule, identifier: 'PrjCharacter', initial: 'Project Characteristic' },
						WorkContent : {location: boqMainModule, identifier: 'WorkContent', initial: 'Work Content' },
						BoqItemFlagFk:{location: estimateMainModule, identifier: 'boqItemFlagFk', initial: 'BoQ Item Flag'},
						Hint:{location: estimateMainModule, identifier: 'hint', initial: 'Copy Source'},
						Budget:{location: estimateMainModule, identifier: 'budget', initial: 'Budget'},
						IsNoMarkup:{location: estimateMainModule, identifier: 'isNoMarkup', initial: 'No Markup'},
						IsDisabledPrc:{location: estimateMainModule, identifier: 'isDisabledPrc', initial: 'Disabled Prc'},
						IsGeneratedPrc:{location: estimateMainModule, identifier: 'isGeneratedPrc', initial: 'Generated Prc'},
						BudgetUnit:{location: estimateMainModule, identifier: 'budgetUnit', initial: 'Budget/Unit'},
						IsFixedBudget:{location: estimateMainModule, identifier: 'isFixedBudget', initial: 'Fix Budget'},
						IsFixedBudgetUnit:{location: estimateMainModule, identifier: 'isFixedBudgetUnit', initial: 'Fix Budget/Unit'},
						BudgetDifference:{location: estimateMainModule, identifier: 'budgetDiff', initial: 'Budget Difference'},
						BudgetMargin:{location: estimateMainModule, identifier: 'budgetMargin', initial: 'Budget Margin'},
						Checked:{location: estimateMainModule, identifier: 'checked', initial: 'Checked'},
						Color:{location: estimateMainModule, identifier: 'color', initial: 'Color'},
						IsOptional:{location: estimateMainModule, identifier: 'estIsOptional', initial: 'Optional'},
						IsExecute:{location: estimateMainModule, identifier: 'lineItemSelStatement.isExecute', initial: 'Select'},
						WicCatFk:{location: estimateMainModule, identifier: 'lineItemSelStatement.wicCatFk', initial: 'WIC Group Ref.No.'},
						LoggingMessage:{location: estimateMainModule, identifier: 'loggingMessage', initial: 'Last Execution History'},
						SelectItemRefError:{location: estimateMainModule, identifier: 'selectItemRefError', initial: 'Please select a BoQ Item'},
						UnitRateStrQty:{location: estimateMainModule, identifier: 'unitRateStrQty', initial: 'Unit Rate/Structure Quantity'},
						StructureQty:{location: estimateMainModule, identifier: 'structureQty', initial: 'Structure Quantity'},
						StructureUom:{location: estimateMainModule, identifier: 'structureUom', initial: 'Structure UoM'},
						SelectBoqItemError:{location: qtoMainModule, identifier: 'selectBoqItemError', initial: 'you should not select the BoQ Item'},
						IsDaywork:{location: estimateMainModule, identifier: 'isDaywork', initial: 'Day Work'},

						SelectStatement: {location: estimateMainModule, identifier: 'lineItemSelStatement.selectStatement', initial: 'Select Statement'},
						WicItemFk: {location: estimateMainModule, identifier: 'lineItemSelStatement.wicItemRefNo', initial: 'WIC Item Ref. No.'},
						WicHeaderItemFk :{ location: estimateMainModule, identifier: 'wicBoqHeaderFk', initial: 'WIC BoQ -Root Item ref.No'},
						ProjectFk: {location: estimateMainModule, identifier: 'projectNo', initial: 'Project-Number'},
						ObjectSelectStatement: {location: estimateMainModule, identifier: 'lineItemSelStatement.objectSelectStatement', initial: 'Object Select Statement'},

						BoqLineTypeFk: { location: boqMainModule, identifier: 'BoqLineTypeFk', initial: 'BoQ Line Type' },
						BoqItemReferenceFk: { location: boqMainModule, identifier: 'BoqItemReferenceFk', initial: 'Reference to' },
						BoqItemReferenceDescription: { location: boqMainModule, identifier: 'BoqItemReferenceDescription', initial: 'Reference to Description' },
						BoqItemReferenceDesignDescription: { location: boqMainModule, identifier: 'BoqItemReferenceDesignDescription', initial: 'Reference to Design Description' },
						PrcItemEvaluationFk: { location: boqMainModule, identifier: 'PrcItemEvaluationFk', initial: 'Procurement Item Evaluation' },
						PrcStructureDescription: { location: boqMainModule, identifier: 'prcStructureDescription', initial: 'Procurement Structure Description' },
						MdcTaxCodeFk: { location: cloudCommonModule, identifier: 'entityTaxCode', initial: 'Tax Code' },
						TaxCodeDescription: { location: cloudCommonModule, identifier: 'entityTaxCodeDescription', initial: 'Tax Code Description' },
						BpdAgreementFk: { location: boqMainModule, identifier: 'BpdAgreementFk', initial: 'Agreement' },
						BasItemTypeFk: { location: boqMainModule, identifier: 'BasItemTypeFk', initial: 'Item Type Stand/Opt' },
						BasItemType2Fk: { location: boqMainModule, identifier: 'BasItemType2Fk', initial: 'Item Type Base/Alt' },
						ControllingUnitDescription: { location: cloudCommonModule, identifier: 'entityControllingUnitDesc', initial: 'Controlling Unit Description' },
						LicCostGroup1Description: { location: boqMainModule, identifier: 'costGroup1Description', initial: 'Cost Group 1 Description' },
						LicCostGroup2Description: { location: boqMainModule, identifier: 'costGroup2Description', initial: 'Cost Group 2 Description' },
						LicCostGroup3Description: { location: boqMainModule, identifier: 'costGroup3Description', initial: 'Cost Group 3 Description' },
						LicCostGroup4Description: { location: boqMainModule, identifier: 'costGroup4Description', initial: 'Cost Group 4 Description' },
						LicCostGroup5Description: { location: boqMainModule, identifier: 'costGroup5Description', initial: 'Cost Group 5 Description' },
						PrjCostGroup1Description: { location: estimateMainModule, identifier: 'prjCostGroup1Description', initial: 'Project Cost Group 1 Description' },
						PrjCostGroup2Description: { location: estimateMainModule, identifier: 'prjCostGroup2Description', initial: 'Project Cost Group 2 Description' },
						PrjCostGroup3Description: { location: estimateMainModule, identifier: 'prjCostGroup3Description', initial: 'Project Cost Group 3 Description' },
						PrjCostGroup4Description: { location: estimateMainModule, identifier: 'prjCostGroup4Description', initial: 'Project Cost Group 4 Description' },
						PrjCostGroup5Description: { location: estimateMainModule, identifier: 'prjCostGroup5Description', initial: 'Project Cost Group 5 Description' },
						PrjLocationDescription: { location: boqMainModule, identifier: 'prjLocationDescription', initial: 'Location Description' },

						DesignDescriptionNo: { location: boqMainModule, identifier: 'DesignDescriptionNo', initial: 'Design/Sub-Description No.' },
						WicNumber: { location: boqMainModule, identifier: 'WicNumber', initial: 'WIC No.' },
						FactorDetail: { location: boqMainModule, identifier: 'FactorDetail', initial: 'Factor-Detail' },
						DiscountText: { location: boqMainModule, identifier: 'DiscountText', initial: 'Discount Comment' },
						CommentContractor: { location: boqMainModule, identifier: 'CommentContractor', initial: 'Comment Contractor' },
						CommentClient: { location: boqMainModule, identifier: 'CommentClient', initial: 'Comment Client' },
						Userdefined1: { location: boqMainModule, identifier: 'Userdefined1', initial: 'Userdefined 1' },
						Userdefined2: { location: boqMainModule, identifier: 'Userdefined2', initial: 'Userdefined 2' },
						Userdefined3: { location: boqMainModule, identifier: 'Userdefined3', initial: 'Userdefined 3' },
						Userdefined4: { location: boqMainModule, identifier: 'Userdefined4', initial: 'Userdefined 4' },
						Userdefined5: { location: boqMainModule, identifier: 'Userdefined5', initial: 'Userdefined 5' },
						ExternalCode: { location: boqMainModule, identifier: 'ExternalCode', initial: 'External Code' },
						ExternalUom: {location: boqMainModule, identifier: 'ExternalUom', initial: 'External UoM'},
						AAN: {location: boqMainModule, identifier: 'AAN', initial: 'AAN'},
						AGN: {location: boqMainModule, identifier: 'AGN', initial: 'AGN'},
						Factor: {location: boqMainModule, identifier: 'FactorItem', initial: 'Factor'},
						Cost: {location: boqMainModule, identifier: 'Cost', initial: 'Cost'},
						Correction: {location: boqMainModule, identifier: 'Correction', initial: 'Correction'},
						Price: {location: boqMainModule, identifier: 'Price', initial: 'Unit Rate'},
						DiscountedUnitprice: {location: boqMainModule, identifier: 'DiscountedUnitprice', initial: 'Corrected UR'},
						DiscountedPrice: {location: boqMainModule, identifier: 'DiscountedPrice', initial: 'Discounted Price'},
						Finalprice: {location: boqMainModule, identifier: 'Finalprice', initial: 'Final Price'},
						Finaldiscount: {location: boqMainModule, identifier: 'Finaldiscount', initial: 'Final Discount'},
						Urb1: {location: boqMainModule, identifier: 'Urb1', initial: 'UR Breakdown 1'},
						Urb2: {location: boqMainModule, identifier: 'Urb2', initial: 'UR Breakdown 2'},
						Urb3: {location: boqMainModule, identifier: 'Urb3', initial: 'UR Breakdown 3'},
						Urb4: {location: boqMainModule, identifier: 'Urb4', initial: 'UR Breakdown 4'},
						Urb5: {location: boqMainModule, identifier: 'Urb5', initial: 'UR Breakdown 5'},
						Urb6: {location: boqMainModule, identifier: 'Urb6', initial: 'UR Breakdown 6'},
						UnitRateFrom: {location: boqMainModule, identifier: 'UnitRateFrom', initial: 'UR from'},
						UnitRateTo: {location: boqMainModule, identifier: 'UnitRateTo', initial: 'UR to'},
						LumpsumPrice: {location: boqMainModule, identifier: 'LumpsumPrice', initial: 'Lumpsum Price'},
						Discount: {location: boqMainModule, identifier: 'Discount', initial: 'Discount abs. IT'},
						TotalPrice: {location: boqMainModule, identifier: 'TotalPrice', initial: 'Total Price'},
						QuantityAdj: {location: boqMainModule, identifier: 'QuantityAdj', initial: 'AQ-Quantity'},
						Hours: {location: boqMainModule, identifier: 'Hours', initial: 'Hours'},
						TotalQuantity: {location: boqMainModule, identifier: 'TotalQuantity', initial: 'Total Quantity'},
						DiscountPercent: {location: boqMainModule, identifier: 'DiscountPercent', initial: 'Discount % UR'},
						DiscountPercentIt: {location: boqMainModule, identifier: 'DiscountPercentIt', initial: 'Discount % IT'},
						IsUrb: {location: boqMainModule, identifier: 'IsUrb', initial: 'UR Breakdown'},
						IsNotApplicable: {location: boqMainModule, identifier: 'IsNotApplicable', initial: 'N/A'},
						IsLeadDescription: {location: boqMainModule, identifier: 'IsLeadDescription', initial: 'Lead Description'},
						IsKeyitem: {location: boqMainModule, identifier: 'IsKeyitem', initial: 'Key Item'},
						IsSurcharged: {location: boqMainModule, identifier: 'IsSurcharged', initial: 'Surcharged'},
						IsFreeQuantity: {location: boqMainModule, identifier: 'IsFreeQuantity', initial: 'Free Quantity'},
						IsUrFromSd: {location: boqMainModule, identifier: 'IsUrFromSd', initial: 'UR from Sub-Description'},
						IsFixedPrice: {location: boqMainModule, identifier: 'IsFixedPrice', initial: 'Fixed Price'},
						IsCostItem: {location: boqMainModule, identifier: 'IsCostItem', initial: 'Cost Item'},
						InsertedAt: {location: cloudCommonModule, identifier: 'entityInsertedAt', initial: 'Inserted At'},
						InsertedBy: {location: cloudCommonModule, identifier: 'entityInsertedBy', initial: 'Inserted By'},
						UpdatedAt: {location: cloudCommonModule, identifier: 'entityUpdatedAt', initial: 'Updated At'},
						UpdatedBy: {location: cloudCommonModule, identifier: 'entityUpdatedBy', initial: 'Updated By'},
						WipHeaderFk : {location: estimateMainModule, identifier: 'wipHeaderFk', initial: 'Wip Header'},
						PesHeaderFk : {location: estimateMainModule, identifier: 'pesHeaderFk', initial: 'Pes Header'},
						BilHeaderFk : {location: estimateMainModule, identifier: 'bilHeaderFk', initial: 'Sales Billing Header'},
						WorkOperationTypeFk:{ location: basicsCustomizeModule, identifier: 'workoperationtypefk', initial:'Work Operation Type'},
						// resource summary
						EstimatePrice:{ location: estimateMainModule, identifier: 'estimatePrice', initial: 'Estimate Price' },
						AdjustPrice:{ location: estimateMainModule, identifier: 'adjustPrice', initial: 'Adjust Price' },
						QuantitySummary:{ location: estimateMainModule, identifier: 'quantitySummary', initial: 'Quantity Summary' },
						CostSummary:{ location: estimateMainModule, identifier: 'costSummary', initial: 'Cost Summary' },
						AdjQuantitySummary:{ location: estimateMainModule, identifier: 'adjQuantitySummary', initial: 'Adjust Quantity Summary' },
						AdjCostSummary:{ location: estimateMainModule, identifier: 'adjCostSummary', initial: 'Adjust Cost Summary' },
						EstimateCostUnit:{ location: estimateMainModule, identifier: 'estimateCostUnit', initial: 'Estimate Cost/unit' },
						AdjustCostUnit:{ location: estimateMainModule, identifier: 'adjustCostUnit', initial: 'Adjust Cost/unit' },
						DescriptionInfo1:{ location: estimateMainModule, identifier: 'descriptionInfo1', initial: 'Further Description' },
						DetailsStack:{ location: estimateMainModule, identifier: 'detailsStack', initial: 'Details Stack' },
						LineItemCode:{ location: estimateMainModule, identifier: 'lineItemCode', initial: 'Line Item Code' },
						RefLineItemCode:{ location: estimateMainModule, identifier: 'lineItemCode', initial: 'Line Item Code' },
						RefAssemblyCode:{ location: estimateMainModule, identifier: 'refAssemblyCode', initial: 'Assembly Code' },
						RefAssemblyDescriptionInfo:{ location: estimateMainModule, identifier: 'refAssemblyDes', initial: 'Assembly Description' },
						LineItemDescriptionInfo:{ location: estimateMainModule, identifier: 'lineItemDes', initial: 'Line Item Description' },
						AssemblyCode:{ location: estimateMainModule, identifier: 'assemblyTemplateCode', initial: 'Assembly Template Code' },
						AssemblyDescriptionInfo:{ location: estimateMainModule, identifier: 'assemblyTemplateDes', initial: 'Assembly Template Description' },
						CostCodePortionsFk: { location: estimateMainModule, identifier: 'costCodePortionsfk', initial: 'Cost Code Portions' },
						CostCodeTypeFk: { location: estimateMainModule, identifier: 'costCodeTypefk', initial: 'Cost Code Type' },
						RequisitionFk:{ location: estimateMainModule, identifier: 'requisitionFk', initial: 'Resource Requisition' },

						CostSummaryOriginal:{ location: estimateMainModule, identifier: 'costSummaryOriginal', initial: 'Cost Summary Original' },
						CostUnitDifference:{ location: estimateMainModule, identifier: 'costUnitDifference', initial: 'Adjust Cost/unit - Cost/unit Original Difference' },
						CostSummaryDifference:{ location: estimateMainModule, identifier: 'costSummaryDifference', initial: 'Adjust Cost summary-Cost summary Difference' },
						CostSummaryOriginalDifference:{ location: estimateMainModule, identifier: 'costSummaryOriginalDifference', initial: 'Adjust Cost summary-Cost summary Original Difference' },

						OrdQuantity:{ location: boqMainModule, identifier: 'OrdQuantity', initial: 'Contract Quantity' },
						PrevQuantity:{ location: boqMainModule, identifier: 'PrevQuantity', initial: 'Previous Quantity' },
						RemQuantity:{ location: boqMainModule, identifier: 'RemQuantity', initial: 'Remaining Quantity' },
						Revenue:{location: estimateMainModule, identifier: 'revenue', initial: 'Revenue'},
						RubricCategoryFk: {location: cloudCommonModule, identifier: 'entityBasRubricCategoryFk', initial: 'Rubric Category'},
						FormFk: {location: estimateMainModule, identifier: 'formFk', initial: 'User Form'},
						Remark :{ location: cloudCommonModule, identifier: 'remark', initial: 'Remark' },
						EstLineItemStatusFk: {location: cloudCommonModule, identifier: 'entityStatus', initial: 'Status'},
						RevenueUnit:{location: estimateMainModule, identifier: 'revenueUnit', initial: 'Revenue/Unit'},
						BusinessPartner:{location: estimateMainModule,identifier: 'createMaterialPackageWizard.businessPartner',initial:'Business Partner'},
						IsCost :{location: estimateMainModule, identifier : 'isCost', initial:'Is Cost'},
						IsBudget :{location: estimateMainModule, identifier : 'isBudget', initial:'Is Budget'},
						// Escalation
						ScurveFk:{location: estimateMainModule,identifier: 'scurveFk',initial:'S-Curve'},
						LevelFk:{location: estimateMainModule,identifier: 'levelfk',initial:'Level'},
						EscResultsCostTotal:{location: estimateMainModule,identifier: 'costTotal',initial:'CostTotal'},
						IsEstimateCostCode :{location: estimateMainModule, identifier : 'isEstimateCostcode', initial:'Is Estimate Costcode'},
						IsRuleMarkupCostCode :{location: estimateMainModule, identifier : 'isRuleMarkupCostcode', initial:'Is Rule Markup Costcode'},
						Margin1 :{location: estimateMainModule, identifier : 'margin1', initial:'Margin1(Revenue-CostTotal)'},
						Margin2 :{location: estimateMainModule, identifier : 'margin2', initial:'Margin2(Revenue-GrandTotal)'},
						MarkupCostUnit :{location: estimateMainModule, identifier : 'markupCostUnit', initial:'Markup Cost/Unit'},
						MarkupCostUnitTarget :{location: estimateMainModule, identifier : 'markupCostUnitTarget', initial:'Markup Cost/Unit Item'},
						MarkupCostTotal :{location: estimateMainModule, identifier : 'markupCostTotal', initial:'Markup Cost Total'},
						GrandTotal :{location: estimateMainModule, identifier : 'grandTotal', initial:'Grand Total'},
						GrandCostUnit :{location: estimateMainModule, identifier : 'grandCostUnit', initial:'Grand Cost/Unit'},
						GrandCostUnitTarget :{location: estimateMainModule, identifier : 'grandCostUnitTarget', initial:'Grand Cost/Unit Item'},

						AQCostTotal :{location: estimateMainModule, identifier : 'aQCostTotal', initial:'Total(AQ)'},
						WQCostTotal :{location: estimateMainModule, identifier : 'wQCostTotal', initial:'Total(WQ)'},
						AQBudget :{location: estimateMainModule, identifier : 'aQBudget', initial:'Budget(AQ)'},
						WQBudget :{location: estimateMainModule, identifier : 'wQBudget', initial:'Budget(WQ)'},
						AQRevenue :{location: estimateMainModule, identifier : 'aQRevenue', initial:'Revenue(AQ)'},
						WQRevenue :{location: estimateMainModule, identifier : 'wQRevenue', initial:'Revenue(WQ)'},
						AQMargin :{location: estimateMainModule, identifier : 'aQMargin', initial:'Margin(AQ)'},
						WQMargin :{location: estimateMainModule, identifier : 'wQMargin', initial:'Margin(WQ)'},

						// Escalation
						EscalationCostTotal:{location: estimateMainModule,identifier : 'escalationCostTotal', initial: 'Escalation Cost Total'},
						EscalationCostUnit:{location: estimateMainModule,identifier : 'escalationCostUnit', initial: 'Escalation Cost/Unit'},
						IsNoEscalation:{location: estimateMainModule,identifier : 'isNoEscalation', initial: 'No Escalation'},
						SpendPeriod:{location: estimateMainModule,identifier : 'spendPeriod', initial: 'Spend Period'},
						EscAmt:{location: estimateMainModule,identifier : 'escAmt', initial: 'Escalation Amount'},
						EscAmtTotal:{location: estimateMainModule,identifier : 'escAmtTotal', initial: 'Escalation Amount Total'},
						EscResourceCostUnit:{location: estimateMainModule,identifier : 'escResourceCostUnit', initial: 'Escalation Cost/Unit'},
						EscResourceCostTotal:{location: estimateMainModule,identifier : 'escResourceCostTotal', initial: 'Escalation Cost Total'},

						// Risk Register
						WeightedValue: {location: basicsRiskRegisterModule,identifier : 'weightedValue', initial: 'Weighted Value'},
						RiskCostTotal: {location: estimateMainModule, identifier: 'costRiskTotal',initial:'Risk Cost Total'},
						RiskCostUnit: {location: estimateMainModule, identifier: 'costRiskUnit',initial:'Risk Cost/Unit'},
						EstimateFilterType : {location: estimateMainModule, identifier: 'estimateFilterType',initial:'EstimateFilterType'},
						ProjectId : {location: estimateMainModule, identifier: 'projectId',initial:'Project'},
						AssemblyCategoryId : {location: estimateMainModule, identifier: 'assemblyCategoryId',initial:'Assembly Category'},
						EstHeaderId : {location: estimateMainModule, identifier: 'estHeaderId',initial:'Estimate Header'},
						filterOptions : {location: estimateMainModule, identifier: 'filterOptions',initial:'Filter Options'},
						SearchText : {location: cloudCommonModule, identifier: 'sidebarSearch',initial:'Search'},
						Records : {location: estimateMainModule, identifier: 'records',initial:'Records Per Page'},

						BaseCostUnit:{ location: estimateMainModule, identifier: 'baseCostUnit', initial: 'Base Cost/Unit' },
						BaseCostTotal:{ location: estimateMainModule, identifier: 'baseCostTotal', initial: 'Base Cost Total'},
						Delta:{ location: estimateMainModule, identifier: 'delta', initial: 'Delta(FP - GT)'},
						DeltaUnit:{ location: estimateMainModule, identifier: 'deltaUnit', initial: 'Delta/Unit'},
						AggrQuantityTotal : { location: estimateMainModule, identifier: 'aggrQuantityTotal', initial: 'Aggr. Quantity Total'},
						AggrHoursUnit : { location: estimateMainModule, identifier: 'aggrHoursUnit', initial: 'Aggr. Hours Unit'},
						AggrHoursTotal : { location: estimateMainModule, identifier: 'aggrHoursTotal', initial: 'Aggr. Hours Total'},
						AggrCostUnit : { location: estimateMainModule, identifier: 'aggrCostUnit', initial: 'Aggr. Cost Unit'},
						AggrCostTotal : { location: estimateMainModule, identifier: 'aggrCostTotal', initial: 'Aggr. Cost Total'},

						BoqSplitQuantityFkExist:{location: estimateMainModule, identifier: 'boqSplitQuantityFkExist', initial: 'The current line item (or one of the Line items) that you want to assign a BoQ item has a link to one of the BoQ Split Quantities'},
						BoqSplitQuantityFkExistHeaderInfo : { location: estimateMainModule, identifier: 'boqSplitQuantityFkExistHeaderInfo', initial: 'Unable to Assign Boq'},
						subQuantityBoQItemsErrormsg : { location: estimateMainModule, identifier: 'subQuantityBoQItemsErrormsg', initial: 'Can not assign LineItem to BoQ items which contains sub quantity item(s).'},
						BudgetPerUnit : {location: boqMainModule, identifier: 'BudgetPerUnit', initial: 'Budget/Unit' },
						BudgetTotal : {location: boqMainModule, identifier: 'BudgetTotal', initial: 'Budget Total' },
						BudgetFixedUnit : {location: boqMainModule, identifier: 'BudgetFixedUnit', initial: 'Fixed Budget/Unit' },
						BudgetFixedTotal : {location: boqMainModule, identifier: 'BudgetFixedTotal', initial: 'Fixed Budget Total' },
						LocationFk:{ location: estimateMainModule, identifier: 'prjLocationFk', initial: 'PrjLocation' },
						DayWorkRateUnit: { location: estimateMainModule, identifier: 'dayWorkRateUnit', initial: 'DW/T+M Rate/Unit'},
						DayWorkRateTotal: { location: estimateMainModule, identifier: 'dayWorkRateTotal', initial: 'DW/T+M Rate Total'},
						AQDayWorkRateTotal: { location: estimateMainModule, identifier: 'aQDayWorkRateTotal', initial: 'DW/T+M Rate Total(AQ)'},
						WQDayWorkRateTotal: { location: estimateMainModule, identifier: 'wQDayWorkRateTotal', initial: 'DW/T+M Rate Total(WQ)'},
						Comment :{ location: estimateMainModule, identifier: 'comment', initial: 'Comment' },
						AssemblyType :{ location: estimateMainModule, identifier: 'assemblyType', initial: 'Assembly Type' },
						NotAssignedCostTotal :{ location: estimateMainModule, identifier: 'columnEstimateNotAssignedCostTotal', initial: 'notassignedcosttotal' },
						FromDJC :{ location: estimateMainModule, identifier: 'FromDJC', initial: '% from DJC' },
						FromTJC :{ location: estimateMainModule, identifier: 'FromTJC', initial: '% from TJC' },
						CO2SourceTotal:{ location: estimateMainModule, identifier: 'totalContainerCo2SourceTotal', initial: 'CO2/Kg (Source) Total' },
						CO2ProjectTotal:{ location: estimateMainModule, identifier: 'totalContainerCo2ProjectTotal', initial: 'CO2/Kg (Project) Total' },

						ManualMarkupUnitItem:{location: estimateMainModule, identifier: 'manualMarkupUnitItem', initial: 'Manual Markup/Unit Item'},
						ManualMarkupUnit : { location: estimateMainModule, identifier: 'manualMarkupUnit', initial: 'Manual Markup/Unit'},
						ManualMarkup : {location: estimateMainModule, identifier: 'manualMarkup', initial: 'Manual Markup' },
						AdvancedAllUnitItem : {location: estimateMainModule, identifier: 'advancedAllUnitItem', initial: 'Adv. Allowance/Unit Item' },
						AdvancedAllUnit : {location: estimateMainModule, identifier: 'advancedAllUnit', initial: 'Adv. Allowance/Unit' },
						AdvancedAll : {location: estimateMainModule, identifier: 'advancedAll', initial: 'Adv. Allowance' },
						GcUnitItem:{ location: estimateMainModule, identifier: 'gcUnitItem', initial: 'GC/Unit Item' },
						GcUnit: { location: estimateMainModule, identifier: 'gcUnit', initial: 'GC/Unit'},
						Gc: { location: estimateMainModule, identifier: 'gc', initial: 'GC'},
						GaUnitItem: { location: estimateMainModule, identifier: 'gaUnitItem', initial: 'G&A/Unit Item'},
						GaUnit: { location: estimateMainModule, identifier: 'gaUnit', initial: 'G&A/Unit'},
						Ga :{ location: estimateMainModule, identifier: 'ga', initial: 'G&A' },
						AmUnitItem :{ location: estimateMainModule, identifier: 'amUnitItem', initial: 'AM/Unit Item' },
						AmUnit :{ location: estimateMainModule, identifier: 'amUnit', initial: 'AM/Unit' },
						Am :{ location: estimateMainModule, identifier: 'am', initial: 'AM' },
						RpUnitItem :{ location: estimateMainModule, identifier: 'rpUnitItem', initial: 'R&P/Unit Item' },
						RpUnit :{ location: estimateMainModule, identifier: 'rpUnit', initial: 'R&P/Unit' },
						Rp :{ location: estimateMainModule, identifier: 'rp', initial: 'R&P' },
						AllowanceUnitItem :{ location: estimateMainModule, identifier: 'allowanceUnitItem', initial: 'Allowance/Unit Item' },
						AllowanceUnit :{ location: estimateMainModule, identifier: 'allowanceUnit', initial: 'Allowance/Unit' },
						Allowance :{ location: estimateMainModule, identifier: 'allowance', initial: 'Allowance' },
						Fm :{ location: estimateMainModule, identifier: 'fm', initial: 'FM' },
						URDUnitItem :{ location: estimateMainModule, identifier: 'urdunititem', initial: 'URD/Unit item' },
						URD :{ location: estimateMainModule, identifier: 'urd', initial: 'URD' },
						IsOptionalIT :{ location: estimateMainModule, identifier: 'isoptionalit', initial: 'Is Optional IT' },
						MdcAllowanceTypeFk :{ location: estimateMainModule, identifier: 'mdcAllowanceTypeFk', initial: 'Allowance Type' },
						MdcMarkUpCalcTypeFk :{ location: estimateMainModule, identifier: 'mdcMarkUpCalcTypeFk', initial: 'Markup Calculation Type' },
						IsOneStep :{ location: estimateMainModule, identifier: 'isOneStep', initial: 'Single step Allowance' },
						IsBalanceFp :{ location: estimateMainModule, identifier: 'isBalanceFP', initial: 'Level out differences from FP items' },
						MarkUpGa :{ location: estimateMainModule, identifier: 'markupGA', initial: 'G&A[%]' },
						MarkUpRp :{ location: estimateMainModule, identifier: 'markupRP', initial: 'R&P[%]' },
						MarkUpAm :{ location: estimateMainModule, identifier: 'markupAM', initial: 'AM[%]' },
						MarkUpGaSc :{ location: estimateMainModule, identifier: 'markUpGaSc', initial: 'G&A % for subcontract' },
						MarkUpRpSc :{ location: estimateMainModule, identifier: 'markupRPSC', initial: 'R&P[%] for subcontract' },
						MarkUpAmSc :{ location: estimateMainModule, identifier: 'markUpAmSc', initial: 'AM[%] for subcontract' },
						EstAllowanceFk :{ location: estimateMainModule, identifier: 'EstAllowanceFk', initial: 'Allowance' },
						DjcTotal :{ location: estimateMainModule, identifier: 'djcTotal', initial: 'DJC' },
						GcTotal :{ location: estimateMainModule, identifier: 'gcTotal', initial: 'GC' },
						GaPerc :{ location: estimateMainModule, identifier: 'gaPerc', initial: 'G&A[%]' },
						RpPerc :{ location: estimateMainModule, identifier: 'rpPerc', initial: 'R&P[%]' },
						AmPerc :{ location: estimateMainModule, identifier: 'amPerc', initial: 'AM[%]' },
						GraPerc :{ location: estimateMainModule, identifier: 'graPerc', initial: 'G&A+R&P+AM[%]' },
						FinMGra :{ location: estimateMainModule, identifier: 'finMGra', initial: 'M(G&A+R&P+AM)[%]' },
						FinMGc :{ location: estimateMainModule, identifier: 'finMGc', initial: 'M(GC)[%]' },
						DjcTotalOp :{ location: estimateMainModule, identifier: 'djcTotalOp', initial: 'DJC(O)' },
						FinMOp :{ location: estimateMainModule, identifier: 'finMOp', initial: 'M(GC O-Items)[%]' },
						FinM :{ location: estimateMainModule, identifier: 'finM', initial: 'M(Tot.)[%]' },
						GcValue :{ location: estimateMainModule, identifier: 'gcValue', initial: 'GcValue' },
						GaValue :{ location: estimateMainModule, identifier: 'gaValue', initial: 'GaValue' },
						AmValue :{ location: estimateMainModule, identifier: 'amValue', initial: 'AmValue' },
						RpValue :{ location: estimateMainModule, identifier: 'rpValue', initial: 'RpValue' },
						FmValue :{ location: estimateMainModule, identifier: 'fmValue', initial: 'FmValue' },
						AllowanceValue :{ location: estimateMainModule, identifier: 'allowanceValue', initial: 'AllowanceValue' },
						GcDjcValue :{ location: estimateMainModule, identifier: 'gcDjcValue', initial: 'Gc Djc Value' },
						GaDjcValue :{ location: estimateMainModule, identifier: 'gaDjcValue', initial: 'Ga Djc Value' },
						AmDjcValue :{ location: estimateMainModule, identifier: 'amDjcValue', initial: 'Am Djc Value' },
						RpDjcValue :{ location: estimateMainModule, identifier: 'rpDjcValue', initial: 'Rp Djc Value' },
						FmDjcValue :{ location: estimateMainModule, identifier: 'fmDjcValue', initial: 'Fm Djc Value' },
						AllowanceDjcValue :{ location: estimateMainModule, identifier: 'allowanceDjcValue', initial: 'Allowance Djc Value' },
						Project2MdcCstCdeFk :{ location: estimateMainModule, identifier: 'project2MdcCstCdeFk', initial: 'Project2MdcCstCde' },
						DefMGraPerc :{ location: estimateMainModule, identifier: 'defMGraPerc', initial: 'Def.M(G&A+R&P+AM)[%]' },
						DefMGcPerc :{ location: estimateMainModule, identifier: 'defMGcPerc', initial: 'Def.M(GC)[%]' },
						DefMPerc :{ location: estimateMainModule, identifier: 'defMPerc', initial: 'Def.M(Tot.)[%]' },
						DefMOp :{ location: estimateMainModule, identifier: 'defMOp', initial: 'Def.M(GC)O-Items[%]' },
						CostCodeMainId :{ location: estimateMainModule, identifier: 'costCodeMainId', initial: 'Code' },
						PrcItemFk :{ location: estimateMainModule, identifier: 'prcItemFk', initial: 'Item No' },
						IsContracted :{ location: estimateMainModule, identifier: 'isContracted', initial: 'Is Contracted' },
						IsPackageStatusContracted :{ location: estimateMainModule, identifier: 'IsPackageStatusContracted', initial: 'Is PackageStatusContracted' },
						PrcItemAssignmentFk :{ location: estimateMainModule, identifier: 'prcItemAssignmentFk', initial: 'Package' },
						BoqHeaderReference :{ location: estimateMainModule, identifier: 'boqRootRefPrc', initial: 'BoQ Root Item Ref. No' },
						PackageStatusFk :{ location: estimateMainModule, identifier: 'packageStatusFk', initial: 'Status' },

						// region Price Adjustment
						Urb1Estimated:{location:estimateMainModule,identifier:'priceAdjust.UrbEstimated',initial:'URB1 Estimated',param: {'num': '1'}},
						Urb1Delta:{location:estimateMainModule,identifier:'priceAdjust.UrbDelta',initial:'URB1 Delta',param: {'num': '1'}},
						Urb1Adjustment:{location:estimateMainModule,identifier:'priceAdjust.UrbAdjustment',initial:'URB1 Adjustment',param: {'num': '1'}},
						Urb1Tender:{location:estimateMainModule,identifier:'priceAdjust.UrbTender',initial:'URB1 Tender',param: {'num': '1'}},
						Urb2Estimated:{location:estimateMainModule,identifier:'priceAdjust.UrbEstimated',initial:'URB2 Estimated',param: {'num': '2'}},
						Urb2Delta:{location:estimateMainModule,identifier:'priceAdjust.UrbDelta',initial:'URB2 Delta',param: {'num': '2'}},
						Urb2Adjustment:{location:estimateMainModule,identifier:'priceAdjust.UrbAdjustment',initial:'URB2 Adjustment',param: {'num': '2'}},
						Urb2Tender:{location:estimateMainModule,identifier:'priceAdjust.UrbTender',initial:'URB2 Tender',param: {'num': '2'}},
						Urb3Estimated:{location:estimateMainModule,identifier:'priceAdjust.UrbEstimated',initial:'URB3 Estimated',param: {'num': '3'}},
						Urb3Delta:{location:estimateMainModule,identifier:'priceAdjust.UrbDelta',initial:'URB3 Delta',param: {'num': '3'}},
						Urb3Adjustment:{location:estimateMainModule,identifier:'priceAdjust.UrbAdjustment',initial:'URB3 Adjustment',param: {'num': '3'}},
						Urb3Tender:{location:estimateMainModule,identifier:'priceAdjust.UrbTender',initial:'URB3 Tender',param: {'num': '3'}},
						Urb4Estimated:{location:estimateMainModule,identifier:'priceAdjust.UrbEstimated',initial:'URB4 Estimated',param: {'num': '4'}},
						Urb4Delta:{location:estimateMainModule,identifier:'priceAdjust.UrbDelta',initial:'URB4 Delta',param: {'num': '4'}},
						Urb4Adjustment:{location:estimateMainModule,identifier:'priceAdjust.UrbAdjustment',initial:'URB4 Adjustment',param: {'num': '4'}},
						Urb4Tender:{location:estimateMainModule,identifier:'priceAdjust.UrbTender',initial:'URB4 Tender',param: {'num': '4'}},
						Urb5Estimated:{location:estimateMainModule,identifier:'priceAdjust.UrbEstimated',initial:'URB5 Estimated',param: {'num': '5'}},
						Urb5Delta:{location:estimateMainModule,identifier:'priceAdjust.UrbDelta',initial:'URB5 Delta',param: {'num': '5'}},
						Urb5Adjustment:{location:estimateMainModule,identifier:'priceAdjust.UrbAdjustment',initial:'URB5 Adjustment',param: {'num': '5'}},
						Urb5Tender:{location:estimateMainModule,identifier:'priceAdjust.UrbTender',initial:'URB5 Tender',param: {'num': '5'}},
						Urb6Estimated:{location:estimateMainModule,identifier:'priceAdjust.UrbEstimated',initial:'URB6 Estimated',param: {'num': '6'}},
						Urb6Delta:{location:estimateMainModule,identifier:'priceAdjust.UrbDelta',initial:'URB6 Delta',param: {'num': '6'}},
						Urb6Adjustment:{location:estimateMainModule,identifier:'priceAdjust.UrbAdjustment',initial:'URB6 Adjustment',param: {'num': '6'}},
						Urb6Tender:{location:estimateMainModule,identifier:'priceAdjust.UrbTender',initial:'URB6 Tender',param: {'num': '6'}},
						UrEstimated:{location:estimateMainModule,identifier:'priceAdjust.UrEstimated',initial:'UR Estimated'},
						UrDelta:{location:estimateMainModule,identifier:'priceAdjust.UrDelta',initial:'UR Delta'},
						UrAdjustment:{location:estimateMainModule,identifier:'priceAdjust.UrAdjustment',initial:'UR Adjustment'},
						UrTender:{location:estimateMainModule,identifier:'priceAdjust.UrTender',initial:'UR Tender'},
						WqQuantity:{location:estimateMainModule,identifier:'priceAdjust.WqQuantity',initial:'WQ Quantity'},
						WqEstimatedPrice:{location:estimateMainModule,identifier:'priceAdjust.WqEstimatedPrice',initial:'Estimated Price WQ'},
						WqAdjustmentPrice:{location:estimateMainModule,identifier:'priceAdjust.WqAdjustmentPrice',initial:'Adjusted Price WQ'},
						WqTenderPrice:{location:estimateMainModule,identifier:'priceAdjust.WqTenderPrice',initial:'Tender Price WQ'},
						WqDeltaPrice:{location:estimateMainModule,identifier:'priceAdjust.WqDeltaPrice',initial:'Delta Price WQ'},
						AqQuantity:{location:estimateMainModule,identifier:'priceAdjust.AqQuantity',initial:'AQ Quantity'},
						AqEstimatedPrice:{location:estimateMainModule,identifier:'priceAdjust.AqEstimatedPrice',initial:'Estimated Price AQ'},
						AqAdjustmentPrice:{location:estimateMainModule,identifier:'priceAdjust.AqAdjustmentPrice',initial:'Adjusted Price AQ'},
						AqTenderPrice:{location:estimateMainModule,identifier:'priceAdjust.AqTenderPrice',initial:'Tender Price AQ'},
						AqDeltaPrice:{location:estimateMainModule,identifier:'priceAdjust.AqDeltaPrice',initial:'Delta Price AQ'},
						EpnaEstimagted:{location:estimateMainModule,identifier:'priceAdjust.EpnaEstimagted',initial:'Ep Na Estimated'},
						Status:{location:estimateMainModule,identifier:'priceAdjust.Status',initial:'Status'},
						StatusImage:{location:estimateMainModule,identifier:'priceAdjust.StatusImage',initial:'Status'},

						AdjType:{location:estimateMainModule,identifier:'priceAdjust.AdjType',initial:'Type'},
						TenderPrice:{location:estimateMainModule,identifier:'priceAdjust.TenderPrice',initial:'Tender Price'},
						DeltaA:{location:estimateMainModule,identifier:'priceAdjust.DeltaA',initial:'Delta A'},
						DeltaB:{location:estimateMainModule,identifier:'priceAdjust.DeltaB',initial:'Delta B'},
						ItemInfo: {location: estimateMainModule, identifier: 'priceAdjust.ItemInfo', initial: 'Item Info'},
						EstimatedPrice:{ location: estimateMainModule, identifier: 'priceAdjust.EstimatedPrice', initial: 'Estimated Price' },
						AdjustmentPrice:{ location: estimateMainModule, identifier: 'priceAdjust.AdjustmentPrice', initial: 'Adjustment Price' },

						CopyTenderPrice:{ location: estimateMainModule, identifier: 'copyTenderPrice', initial: 'Copy Tender Price' },
						CopyTenderPriceToBoqItem:{ location: estimateMainModule, identifier: 'copyTenderPriceToBoqItem', initial: 'Copy Tender Price To BoqItem' },
						CopyTenderPriceToLineItem:{ location: estimateMainModule, identifier: 'copyTenderPriceToLineItem', initial: 'Copy Tender Price To LineItem' },
						CopyAQQuantityToBoqItem:{ location: estimateMainModule, identifier: 'copyAQQuantityToBoqItem', initial: 'Update Project BoQ AQ' },

						EstAssemblyDescriptionInfo:{ location: estimateMainModule, identifier: 'estAssemblyDescriptionInfo', initial: 'Assembly Description' },

						Co2Source:{location: basicsCommonModule, identifier: 'sustainabilty.entityCo2Source', initial: 'CO2/kg (Source)'},
						Co2SourceTotal:{location: basicsCommonModule, identifier: 'sustainabilty.entityCo2SourceTotal', initial: 'CO2 (Source) Total'},
						Co2Project:{location: basicsCommonModule, identifier: 'sustainabilty.entityCo2Project', initial: 'CO2/kg (Project)'},
						Co2ProjectTotal:{location: basicsCommonModule, identifier: 'sustainabilty.entityCo2ProjectTotal', initial: 'CO2 (Project) Total'},
						Co2TotalVariance:{location: basicsCommonModule, identifier: 'sustainabilty.entityCo2TotalVariance', initial: 'CO2 Total Variance'},

						ConfidenceCheck:{ location: estimateMainModule, identifier: 'confidenceCheck', initial: 'Confidence Check' },
						Structure:{ location: estimateMainModule, identifier: 'structure', initial: 'Structure' },
						Count:{ location: estimateMainModule, identifier: 'count', initial: 'Count' },
						Rest:{ location: estimateMainModule, identifier: 'rest', initial: 'Rest[%]' },
						AllowanceArea:{ location: estimateMainModule, identifier: 'allowanceArea', initial: 'Allowance Areas & GC Areas' },
						AreaGcTotal:{ location: estimateMainModule, identifier: 'gctotal', initial: 'GC Total' },
						AreaDjcTotal:{ location: estimateMainModule, identifier: 'djctotal', initial: 'DJC Total' },
						BoqAreaAssignment:{ location: estimateMainModule, identifier: 'boqAreaAssignment', initial: 'BoQ Area Assignment' },
						FromBoqHeaderFk:{ location: estimateMainModule, identifier: 'fromBoqHeaderFk', initial: 'From BoQ Root Item Ref No.' },
						FromBoqItemFk:{ location: estimateMainModule, identifier: 'fromBoqItemFk', initial: 'From BoQ Item Ref No.' },
						ToBoqHeaderFk:{ location: estimateMainModule, identifier: 'toBoqHeaderFk', initial: 'To BoQ Root Item Ref No.' },
						ToBoqItemFk:{ location: estimateMainModule, identifier: 'toBoqItemFk', initial: 'To BoQ Item Ref No.' },
						MdcAllAreaGroupTypeFk:{ location: estimateMainModule, identifier: 'areaWise', initial: 'Area Wise' },
						IsManual:{ location: estimateMainModule, identifier: 'isManual', initial: 'Is Manual' },
						PlantAssemblyTypeFk:{ location: basicsCustomizeModule, identifier: 'plantassemblytype', initial:'Plant Assembly Type'},
						plantList:{ location: estimateMainModule, identifier: 'plantList', initial:'Plant List'},
						EtmPlantGroupFk: {location: projectPlantAssemblyModule, identifier: 'plantGroupFk', initial: 'Equipment Plant Group'},
						EtmPlantFk: {location: projectPlantAssemblyModule, identifier: 'plantFk', initial: 'Equipment Plant'},
						Month:{ location: estimateMainModule, identifier: 'month', initial:'Count'},
						HourMonth:{ location: estimateMainModule, identifier: 'hourMonth', initial:'Hrs/Mon'},
						// endregion

						OrderChangeFk: { location: estimateMainModule, identifier: 'ordHeaderFk', initial: 'Change Order'},

						PlantCode: { location: estimateMainModule, identifier: 'plantCode', initial: 'Plant-Code'},
						CostModificationAbsolute: { location: estimateMainModule, identifier: 'costModificationAbsolute', initial: 'Cost Modification Absolute'},
						CostModificationPercent: { location: estimateMainModule, identifier: 'costModificationPercent', initial: 'Cost Modification %'},
						GcBreakdownTypeFk:{ location: estimateMainModule, identifier: 'gcBreakdownTypeFk', initial: 'GC Breakdown Type' },

						IqPreviousQuantity: { location: qtoMainModule, identifier: 'lineItem.iqPreviousQuantity', initial: 'IQ Previous Quantity'},
						IqQuantity: {location: qtoMainModule, identifier: 'lineItem.iqQuantity', initial: 'IQ Quantity'},
						IqTotalQuantity: {location: qtoMainModule, identifier: 'lineItem.iqTotalQuantity', initial: 'IQ Total Quantity'},
						IqPercentageQuantity: {location: qtoMainModule, identifier: 'lineItem.iqPercentageQuantity', initial: 'IQ Percentage Quantity'},
						IqCumulativePercentage: {location: qtoMainModule, identifier: 'lineItem.iqCumulativePercentage', initial: 'IQ Cumulative Percentage'},

						BqPreviousQuantity: { location: qtoMainModule, identifier: 'lineItem.bqPreviousQuantity', initial: 'BQ Previous Quantity'},
						BqQuantity: {location: qtoMainModule, identifier: 'lineItem.bqQuantity', initial: 'BQ Quantity'},
						BqTotalQuantity: {location: qtoMainModule, identifier: 'lineItem.bqTotalQuantity', initial: 'BQ Total Quantity'},
						BqPercentageQuantity: {location: qtoMainModule, identifier: 'lineItem.bqPercentageQuantity', initial: 'BQ Percentage Quantity'},
						BqCumulativePercentage: {location: qtoMainModule, identifier: 'lineItem.bqCumulativePercentage', initial: 'BQ Cumulative Percentage'}
					}
				}
			};

			platformTranslationUtilitiesService.addUserDefinedTextTranslation(estimateMainTranslations.translationInfos.extraWords, 10, 'UserDefinedText', '0');

			let translationService = {
				// overloading
				// TODO: check whether we need to overload that function :)
				getTranslationInformation: function getTranslationInformation(key) {
					let information = translationService.words[key];
					if (angular.isUndefined(information) || (information === null)) {
						// Remove prefix from key that's supposed to be separated by a dot and check again.
						key = key.substring(key.indexOf('.') + 1);
						information = translationService.words[key];
					}
					return information;
				}
			};

			platformUIBaseTranslationService.call(this, [estimateMainTranslations], translationService);
		}
	]);

})();
