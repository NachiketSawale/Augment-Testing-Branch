{
	"procurement": {
		"common": {
			"Warning": "Warning",
			"showDependantDataBtnText": "Show Dependant Data",
			"changeBpdVatGroupFk": "Changing the VatGroup leads to the recalculation and saving of the BoQ.Do you want to proceed? ",
			"changeVatGroupRecalBoqAndItem": "Changing the Vat Group leads to the recalculation of Item and BoQ.Do you want to proceed? ",
			"confirmDeleteTitle": "Delete Selection",
			"confirmDeleteHeader": "Do you want to delete the selection?<br /><b>Attention:</b> Dependent data will be deleted!",
			"selectionDeleteFail": "Selection cannot be deleted due to dependent Data!",
			"dialogTitleItem": "Assign Item",
			"sdGoogleInChainedChk": "Populate Base & Change Orders",
			"sdGoogleQuotesFromRFQChk": "Populate Quotes From Same RFQ",
			"sdGoogleOnlyDisplayLatestQuoteVersionChk": "Only Display Latest Quote Version",
			"entityIsChecked": "Is Checked",
			"packageLookupDialogTitle": "Package Search Dialog",
			"checklistLookupDialogTitle": "CheckList Search Dialog",
			"entityType": "Type",
			"documentType": "Document Type",
			"entityDate": "Date",
			"entityFileSize": "File Size",
			"documentOriginFileName": "Origin File Name",
			"documentDescription": "Description",
			"creationDailogTitle": "Arguments of Create",
			"entityPlant": "Plant",
			"priceCondition": {
				"priceConditionTitle": "Price Condition",
				"addError": "All condition types were used,another item cannot be added again."
			},
			"data": {
				"dataTitle": "Overview",
				"reqDataTitle": "Title",
				"reqDataStatus": "Status"
			},
			"itemText": {
				"itemTextsTitle": "Item Texts",
				"itemPlainTitle": "Item Plain Texts"
			},
			"headerText": {
				"prcHeaderTextContainerTitle": "Header Text",
				"prcHeaderPlainTextContainerTitle": "Header Plain Text",
				"prcTextType": "Text Type",
				"isProject": "Is Project"
			},
			"entityCallOffAgreement": "Call Off Agreement",
			"entityLeadTime": "Supplier Lead Time",
			"entityEarliestStart": "Earliest Start",
			"entityLatestStart": "Latest Start",
			"entityExecutionDuration": "Execution Duration",
			"entityContractPenalty": "Contract Penalty",
			"listCallOffAgreementTitle": "Call Off Agreements",
			"detailCallOffAgreementTitle": "Call Off Agreement Details",
			"listMandatoryDeadlineTitle": "Mandatory Deadlines",
			"detailMandatoryDeadlineTitle": "Mandatory Deadline Details",
			"entityMandatoryDeadline": "Mandatory Deadline",
			"entityIndividualPerformance": "Individual Performance",
			"entityStart": "Start",
			"entityEnd": "End",
			"entityExternalCode": "External Code",
			"externalCode": "External Code",
			"reqTotalTotalTypeFk": "Type",
			"totalTypeDes": "Type Description",
			"reqTotalValueNet": "Net Value",
			"reqTotalValueTax": "VAT",
			"reqTotalGross": "Gross",
			"reqTotalValueNetOc": "Net Value (OC)",
			"reqTotalValueTaxOc": "VAT (OC)",
			"reqTotalGrossOC": "Gross (OC)",
			"reqTotalCommentText": "Comments",
			"total": {
				"totalContainerGridTitle": "Totals",
				"totalContainerFormTitle": "Total Detail",
				"totalToolbarRecalculate": "Recalculate",
				"dirtyRecalculate": "Recalculate",
				"totalDirtyExchangeRate": "Total is dirty because header item Exchange Rate changed.",
				"totalDirtyVatPercent": "Total is dirty because header item VAT Percent changed.",
				"totalDirtyItem": "Total is dirty because Items Grid item  eg. Price/ Quantity/ Total  changed",
				"totalDirtyTotalType": "Total is dirty because total type changed",
				"groupTotal": "Total",
				"toolbarFilter": "Show/Hide Totals Which Value = 0"
			},
			"document": {
				"prcDocumentContainerGridTitle": "Document",
				"prcDocumentContainerFormTitle": "Document Detail",
				"prcDocumentEmptyFileErrorMessage": "The document can not be empty. Please select a document to upload.",
				"prcDocumentType": "Document Type",
				"prcFileType": "File Type"
			},
			"milestone": {
				"milestoneContainerGridTitle": "Milestones",
				"milestoneContainerFormTitle": "Milestone Detail",
				"milestoneDateBigError": "The {{Source}} date is bigger than {{Target}} date",
				"milestoneDateSmallError": "The {{Source}} date is smaller than {{Target}} date"
			},
			"paymentCode": "Code",
			"paymentDescription": "Description",
			"paymentDatePayment": "Payment Date",
			"paymentDateRequest": "Request Date",
			"paymentPercentOfContract": "Percent",
			"paymentAmountNet": "Amount Net",
			"paymentRemaining": "Remaining",
			"paymentAmountGross": "Amount Gross",
			"paymentAmountNetOc": "Amount Net Oc",
			"paymentAmountGrossOc": "Amount Gross Oc",
			"paymentRemainingOc": "Remaining Oc",
			"paymentAmountTax": "Amount Tax",
			"paymentAmountTaxOc": "Amount Tax Oc",
			"paymentCommentText": "Comment",
			"TaxCodes": "Tax Codes",
			"paymentIsDone": "IsDone",
			"paymentPsdScheduleFk": "Schedule",
			"paymentPsdActivityFk": "Activity",
			"paymentPsdActivityDes": "Activity - Description",
			"paymentTerm": "Payment Term",
			"paymentTermDes": "Payment Term Description",
			"paymentmeasuredperformance": "Measured Performance %",
			"invoiceType": "Invoice Type",
			"AgnRangeError": "Value should  larger than 100",
			"AgnError": "Can't set different AGN in current group",
			"AgnError1": "Can't set same AGN in different group",
			"AgnError2": "Can't find base with same AGN",
			"itemType2Error": "Can't set two base in current group",
			"paymentSchedule": {
				"paymentScheduleContainerGridTitle": "Payment Schedule",
				"paymentScheduleContainerFormTitle": "Payment Schedule Detail",
				"paymentScheduleValueRangeErrorMessage": "Value should not larger than 100",
				"paymentScheduleCodeUniqueErrorMessage": "Code should be unique within whole payment schedule",
				"PercentOfContractAddUpGreaterAHundred": "All Percent Of Contract add up must not be greater then 100",
				"setPaymentScheduleTotal": "Update payment schedule target",
				"setPaymentScheduleTotalSuccessfully": "Set Payment Schedule Total Successfully",
				"setPaymentScheduleTotalFailed": "Set Payment Schedule Total Failed",
				"paymentScheduleTarget": "Payment Schedule Target:",
				"paymentScheduleTargetGrossOC": "Payment Schedule Target (Gross OC):",
				"paymentScheduleTargetNetOC": "Payment Schedule Target (Net OC):",
				"totalSource": "Total Source:",
				"totalSourceGrossOC": "Total Source (Gross OC):",
				"totalSourceNetOC": "Total Source (Net OC):",
				"netOcText": "Net (OC):",
				"grossOcText": "Gross (OC):",
				"varianceText": "Variance:",
				"varianceSourceTargetText": "Variance (Source - Target):",
				"itemsFromMainContract": "Payment schedules from main contract.",
				"itemsFromMainRequistion": "Payment schedules from main requisition.",
				"mainAndChangeOrder": "Main + Change Order",
				"createPaymentScheduleLineText": "Do you want to apply below amount as payment schedule target?",
				"pleaseSelectMainContract": "Please select a main contract.",
				"contractText": "Contract:",
				"changeText": "Change(Appr.):",
				"notApprChangeText": "Change(UnAppr.):",
				"grandGrossOcText": "Grand Gross (OC):",
				"grandNetOcText": "Grand Net (OC):",
				"allowOnlyOneFinalItem": "Allow only one final item",
				"reBalanceTo100": "Re-Balance to 100%",
				"psTargetCannotLessFixedPs": "Payment schedule target cannot less than the sum of fixed payment schedules."
			},
			"pricing": "Pricing",
			"plantHire": "Plant Hire",
			"settings": "Settings",
			"others": "Others",
			"user": "User",
			"contactFamilyName": "Contact Family Name",
			"contactFirstName": "Contact First Name",
			"contactTitle": "Title",
			"contactTelephone1": "Telephone1",
			"contactTelephone2": "Telephone2",
			"contactTelefax": "TeleFax",
			"contactMobile": "Mobile",
			"contactInternet": "Internet",
			"contactEmail": "Email",
			"contactAddress": "Address",
			"contact": {
				"contactContainerGridTitle": "Contacts",
				"contactContainerFormTitle": "Contact Detail",
				"contactRole": "Role"
			},
			"certificate": {
				"certificatesContainerGridTitle": "Certificates",
				"certificatesContainerFormTitle": "Certificate Detail"
			},
			"certificateIsRequired": "Required",
			"certificateIsMandatory": "Mandatory",
			"certificateIsRequiredSubSub": "Sub-Sub required",
			"certificateIsMandatorySubSub": "Sub-Sub mandatory",
			"certificateRequiredBy": "Required By",
			"certificateRequiredAmount": "Required Amount",
			"guaranteeCost": "Guarantee Cost",
			"guaranteeCostPercent": "Guarantee Cost Percent",
			"validFrom": "Valid From",
			"validTo": "Valid To",
			"generalsValue": "Value",
			"generalsValueType": "Value Type",
			"general": {
				"generalsContainerGridTitle": "Generals",
				"generalsContainerFormTitle": "General Detail"
			},
			"deliveryScheduleTotalQuantity": "Total Quantity",
			"deliveryScheduleQuantityScheduled": "Quantity Scheduled",
			"deliveryScheduleOpenQuantity": "Open Quantity",
			"deliveryScheduleFormTitle": "Delivery Schedule",
			"deliveryScheduleFormQuantityTitle": "Quantity",
			"delivery": {
				"deliveryScheduleContainerGridTitle": "Delivery Schedules",
				"deliveryScheduleContainerFormTitle": "Delivery Schedule Detail",
				"deliveryScheduleCalculateError": "Schedule quantity exceeds item's quantity!",
				"deliveryScheduleCalculateOpenQuantityError": "Total quantity of all the delivery batches must be either 0 or item quantity.",
				"deliveryModifyRequiredByError": "Required date is either ealier than current day or beyond lead time requirement.",
				"runningNumber": "Running Number",
				"quantityConfirm": "Confirmed Quantity ",
				"deliverdateConfirm": "Confirmed Delivery Date",
				"delivertimeConfirm": "Confirmed Delivery Time",
				"addressdto": "Address"
			},
			"subcontractor": {
				"subcontractorContainerGridTitle": "Subcontractors",
				"subcontractorContainerFormTitle": "Subcontractor Detail"
			},
			"emptyErrorMessage": "{{DisplayName}} should map to source field",
			"prcItemItemNo": "Item No.",
			"prcItemItemNoForImport": "Item No.",
			"prcItemPackage": "Package",
			"prcItemPackageCode": "Package Code",
			"prcItemPackageDescription": "Package Description",
			"prcItemMaterialNo": "Material No.",
			"prcItemMaterialStockFk": "Stock Material",
			"prcItemMaterialStockDescription": "Stock Material Description",
			"prcItemMaterialNoForImport": "Material No.",
			"prcItemMaterialExternalCode": "Material External Code",
			"prcItemMaterialCatalogCode": "Material Catalog Code",
			"prcItemMaterialCatalogDescription": "Material Catalog Description",
			"prcItemMaterialCatalogSupplier": "Material Catalog Supplier",
			"prcItemMaterialCatalogType": "Material Catalog Type",
			"prcItemMaterial": "Material",
			"itemSpecification": "Specification",
			"prcItemDescription1": "Description 1",
			"prcItemDescription2": "Description 2",
			"prcItemDescription": "Item Description",
			"prcItemFurtherDescription": "Further Description",
			"prcItemType": "Item Type",
			"prcItemType2": "Item Type2",
			"prcItemType85": "Item Type85",
			"AGN": "AGN",
			"AAN": "AAN",
			"commentClient": "Comment Client",
			"commentContractor": "Comment Contractor",
			"prcItemAlt": "Item Alt",
			"prcItemEvaluation": "Item Evaluation",
			"alternativeBid": "Alternative Bid",
			"alternativeBidDescription": "Alternative Bid Description",
			"prcBaseErrorMessageTitle": "Get Base Item No. Error",
			"prcCantSelectBasePostponedMessage": "Can't set item type2 with base postponed",
			"cantSetAGN": "Can't set agn, no base item found !",
			"prcNoBaseError1": "cannot be set as no base item found!",
			"prcNoBaseError": "Default item type 'Alternative' or 'Alternative Awarded' cannot be set as no base item found!",
			"prcBaseToNormalErrorMessage": "Change base to normal type is not allowed as alternative item already existed!",
			"prcAANErrorMessage": "Can't change AAN ,because more than one alternative awarded in same group !",
			"prcBaseErrorMessage": "Default item type 'Alternative' or 'Alternative Awarded' cannot be set as no base item found! It will be changed to type 'Normal' ",
			"prcBaseAltErrorMessage": "Item alt is require",
			"isFreeQuantity": "Is Free Quantity",
			"Discount": "Discount Percent",
			"DiscountComment": "Discount Comment",
			"DiscountAbsolute": "Discount Absolute",
			"DiscountAbsoluteOc": "Discount Absolute (OC)",
			"DiscountAbsoluteGross": "Discount Absolute Gross",
			"DiscountAbsoluteGrossOc": "Discount Absolute Gross (OC)",
			"licCostGroup1Fk": "Cost Group 1",
			"licCostGroup2Fk": "Cost Group 2",
			"licCostGroup3Fk": "Cost Group 3",
			"licCostGroup4Fk": "Cost Group 4",
			"licCostGroup5Fk": "Cost Group 5",
			"prjCostGroup1Fk": "Project Cost Group 1",
			"prjCostGroup2Fk": "Project Cost Group 2",
			"prjCostGroup3Fk": "Project Cost Group 3",
			"prjCostGroup4Fk": "Project Cost Group 4",
			"prjCostGroup5Fk": "Project Cost Group 5",
			"prcItemPriceCurrency": "Price Currency",
			"prcItemPriceExtras": "Price Extras",
			"prcItemPriceExtrasCurrency": "Price Extras (Currency)",
			"prcItemTotalPrice": "Total Price",
			"prcItemTotalPriceCurrency": "Total Price (Currency)",
			"prcItemTargetPrice": "Target Price",
			"prcItemTargetPriceGross": "Target Price(Gross)",
			"prcItemTargetTotal": "Target Total",
			"prcItemTotalCurrency": "Total (Currency)",
			"prcItemTotal": "Total",
			"prcItemTotalCurrencyNoDiscount": "Total (No Discount) (OC)",
			"prcItemTotalNoDiscount": "Total (No Discount)",
			"prcItemHasDeliverySchedule": "Has Delivery Schedule",
			"prcItemOffHireDate": "Off Hire Date",
			"prcItemOnHireDate": "On Hire Date",
			"prcItemDeliveryAddress": "Delivery Address",
			"prcItemHasText": "Has Text",
			"prcItemSupplierReference": "Supplier Reference",
			"prcItemBatchno": "Batchno",
			"prcItemLeadTime": "Lead Time (Days)",
			"prcItemSellUnit": "Sell Unit",
			"prcItemMinQuantity": "Min Quantity",
			"prcItemFactoredQuantity": "Factored Quantity",
			"safetyLeadTime": "Safety Lead Time",
			"bufferLeadTime": "Buffer Lead Time",
			"totalLeadTime": "Total Lead Time",
			"billingSchema": "Billing Schema",
			"quantityConfirm": "Quantity Confirm",
			"deliverDateConfirm": "Deliver Date Confirm",
			"plantFk": "Plant",
			"deliverDateUpdateToItemInfo": "Do you want to update the delivery date for items?",
			"contractHeaderUpdateInfo": "Setting basis contract will overwrite quite a lot of related fields",
			"assignContract": "Assign Procurement Contract",
			"reqHeaderUpdateInfo": "Setting basis requisition will overwrite quite a lot of related fields",
			"rfqRequsitionLookup": "Look Up Requisition",
			"bpdAgreement": "Agreement",
			"prcItemQuantityAskedfor": "Quantity Asked for",
			"prcItemQuantityDelivered": "Quantity Delivered",
			"priceGross": "Price Gross",
			"priceOcGross": "Price Gross(OC)",
			"totalGross": "Total (Gross)",
			"totalOcGross": "Total (Gross OC)",
			"totalPriceGross": "Total Price Gross",
			"totalPriceGrossOc": "Total Price Gross(OC)",
			"totalValueGross": "Total Value (Gross)",
			"totalValueOcGross": "Total Value (OC)(Gross)",
			"valueGross": "Value (Gross)",
			"valueOcGross": "Value (Gross OC)",
			"ExpirationDate": "Expiration Date",
			"AlternativeUom": "Alternative Uom",
			"AlternativeQuantity": "Alternative Quantity",
			"item": {
				"prcItemContainerFormTitle": "Item Detail",
				"prcItemContainerGridTitle": "Items",
				"itemNegativeError": "The ItemNo should be bigger than zero",
				"prcItemItemHeader": "Item",
				"prcItemInformationHeader": "Information",
				"prcItemInfoBlGridTitle": "Item Info (Baseline)",
				"prcItemInfoBlFormTitle": "Item Info (Baseline) Detail",
				"itemInfoBLSpecification": "Item Info (Baseline) Specification Plain",
				"importPriceAfterTax": "Import Price After Tax",
				"item2plantContainerGridTitle": "Procurement Item Plants",
				"item2plantContainerFormTitle": "Procurement Item Plant Details",
				"prcItemFactoredTotalPrice": "Factored Total Price"
			},
			"boq": {
				"boqTitle": "BoQ",
				"prcBoqDetailTitle": "Procurement BoQ Detail",
				"noHeaderSelectedInfo": "Please first select a procurement header.",
				"PrcBoqReferenceUniqueError": "The reference code should be unique",
				"createDialogTitle": "Create Procurement BoQ",
				"noPackage2HeaderSelectedInfo": "Please first select a package procurement header",
				"entityPackage2Header": "Sub Package",
				"boqItemReference": "BoQ Reference",
				"boqItemBrief": "Outline Specification",
				"prcItemControllingUnit": "Controlling Code",
				"prcItemControllingUnitDes": "Controlling Description",
				"baseBoq": "Base BoQ (Opt.)",
				"useExistedBaseBoq": "Create from Base BoQ",
				"createNewBoq": "Create new BoQ",
				"takeOverEntireBoq": "Take over entire BoQ",
				"takeOverBoqHeaderOnly": "Take over BoQ Root Item only",
				"packageBoQ": "Package BoQ",
				"useExistPackageBoq": "Use Package BoQ",
				"useExistWicBoq": "Use WIC BoQ",
				"wicGroup": "WIC Group",
				"wicBoq": "WIC BoQ",
				"wicBoqDescription": "WIC BoQ Description",
				"existBoq": "Existed BoQ",
				"includeNonContractedItem": "Include non contracted item in previous PES",
				"wicBoqReference": "WIC BoQ Reference",
				"wicBoqRefEmptyError": "The Reference should not be empty"
			},
			"requisitionContainerGridTitle": "Requisitions",
			"requisitionContainerFormTitle": "Requisition Detail",
			"emptyValueErrorMessage": "The field {{fieldName}} should not be empty.",
			"uniqueValueErrorMessage": "The {{object}} should be unique. Please select another {{object}}",
			"prcConfigurationDescription": "Configuration",
			"prcStrategyDescription": "Strategy",
			"materialSearch": "Material Search",
			"reqheaderChangeRequest": "Change Request",
			"reqheaderChangeRequestDescription": "Change Request Description",
			"createprcBoqsFailedTitle": "Create procurement boqs failed",
			"createprcBoqsFailedBody": "Please select package for current header item at first.",
			"createprcBoqsFromPackageFailedBody": "Please select sub package for current header item at first.",
			"FrameworkContract": "Framework Contract",
			"FrameworkContractDescription": "Framework Contract Description",
			"wizard": {
				"noItemBoqValueNet": "There is no item nor BoQ within the entity or entity's net total=0, do you still want to proceed?",
				"isEvaluatedItems": "Take over evaluated Items",
				"isEvaluatedItemsPrice": "Take over evaluated Items with price",
				"IsFilterEvaluated": "Bypass evaluated item",
				"IsContractNote": "Note: 'Contracted in other Package' item(s) found in current entity,They will be bypassed and cannot create into subsequent module anymore!",
				"IsContractNote1": "Note: For items with 'Contracted in other Package' flag as true, they will be bypassed and won't be created into subsequent modules.",
				"validateAndUpdateItemQuantity": "Validate and Update Item Quantity",
				"selectOptionToValidate": "Please select an option to validate the Sell Unit & Min. Order Quantity:",
				"change": {
					"status": {
						"wizard": "Change Status Wizard",
						"title": "Change Status",
						"boqHeader": "Change Boq Header Status"
					},
					"reporting": {
						"date": "Change Reporting Date"
					},
					"ftatus": {
						"for": {
							"item": "Change Status For Item"
						}
					},
					"configuration": {
						"name": "Configuration",
						"headerText": "Change {{code}} Configuration",
						"cantGenerateCode": "Can't generate new code from the selected configuration."
					}
				},
				"report": {
					"data": {
						"wizard": "Report Data Wizard"
					}
				},
				"set": {
					"reporting": {
						"date": "Set Reporting Date"
					}
				},
				"boq": {
					"wizard": "BoQ Wizard"
				},
				"gaeb": {
					"import": "GAEB-Import",
					"export": "GAEB-Export"
				},
				"renumber": {
					"boq": "Renumber BoQ"
				},
				"group": {
					"create": "Create Wizard",
					"send": "Send Request Wizard",
					"status": "Change Status Wizard"
				},
				"item": {
					"sendEmail": "Send Email",
					"sendFax": "Send Fax",
					"changeStatus": "Change Status",
					"createContract": "Create Contract"
				},
				"request": {
					"for": " for ",
					"is": " is ",
					"newCode": "Code(s) : {{newCode}} "
				},
				"insertMaterial": {
					"insertMaterialTitle": "Insert Material",
					"invalidGroup": "Invalid group",
					"materialCatalog": "Material Catalog",
					"materialGroup": "Material Group",
					"discountGroup": "Discount Group",
					"errorMessageInfo": "Material group can't be null",
					"errorMessage": "Error Message",
					"insertMaterialSucceed": "Insert material succeed."
				},
				"updateMaterial": {
					"updateMaterialTitle": "Update Material",
					"identicalMaterial": "More than one item are from the same material record, first item will be used to update material.",
					"executeSuccessedMessage": "Material has been updated.",
					"goToMaterial": "Go to Material",
					"executingMessage": "Updating Material"
				},
				"errorNoSelectOnePackage": "Please Select one Package record first.",
				"errorNoSelectOneREQ": "Please Select one Requisition record first.",
				"errorNoSelectOneContract": "Please Select one Contract record first.",
				"errorNoSelectOneQuote": "Please Select one Quote record first.",
				"updateItemPrice": {
					"from": "From:",
					"title": "Update Item Price",
					"scope": "Scope",
					"itemUnderLeadRecordOption": "All item under current selected lead record",
					"selectItemOption": "Selected item(s)",
					"update": "Update",
					"retrieveTargetPriceItem": "Retrieve Target Price From",
					"basePrice": "Base Price",
					"latestPriceVersion": "Latest Price version",
					"materialCode": "Material Code",
					"materialDescripton": "Material Descripton",
					"currentPrice": "Current Price",
					"targetPrice": "Target Price",
					"uom": "Uom",
					"noItemSelected": "No item selected",
					"updateSuccess": "Update item price successfully!",
					"updateFailure": "Update item price failure!",
					"noMaterialInCatalog": "No material item is from catalog!",
					"itemNoMaterial": "item(s) have no material!",
					"catalogPriceVersion": "Material Catalog Price Version",
					"neutralMaterial": "Include Neutral Material",
					"itemCodeAndDesc": "Item Code / Description",
					"sourceCodeAndDesc": "Source Code / Description",
					"type": "Type",
					"unitRate": "Unit Rate",
					"priceUnit": "Price Unit",
					"convertedUnitRate": "Converted Unit Rate",
					"quotation": "Quotation",
					"contract": "Contract",
					"cannotConvert": "{{p_0}} procurement item record(s) cannot be updated due to non-convertable UOMs.<br /><br />Code: "
				},
				"replaceNeutralMaterial": {
					"uomCantConvertTranslate": "UoM not convertable",
					"checked": "Checked",
					"replaceCriteria": "Replace Criteria",
					"supplier": "Supplier",
					"noFoundTranslate": "No Suitable Found",
					"noItemSelected": "No item selected",
					"errorNoSelectOnePackage": "Please Select one Package record first.",
					"errorNoSelectOneREQ": "Please Select one Requisition record first.",
					"errorNoSelectOneContract": "Please Select one Contract record first.",
					"errorNoCurrentCompany": "Please Select package which company is current company.",
					"simulate": "Simulate",
					"replace": "Replace",
					"aiItemAlternative": "AI: Item Alternative",
					"refresh": "Refresh",
					"title": "Replace Material",
					"replaceSuccess": "QTY neutral item has been replaced successfully!",
					"replaceFailure": "QTY neutral item has been replaced failure!",
					"note1": "Note:Price is per quantity UoM of the Neutral Material",
					"note2": "Note:Item quantity will be converted if the quantity Uom is different between neutral material and matching material",
					"scope": "Scope",
					"replaceFrom": "Replace from",
					"allCatalog": "All catalogs",
					"SpecificCatalog": "Specific catalog",
					"tip1": "Replace criteria",
					"currentPackage": "Current Package",
					"currentRequsition": "Current Requisition",
					"currentContract": "Current Contract",
					"currentQuote": "Current Quote",
					"allFromPackage": "All Packages from Current Project",
					"allFromRequisition": "All Requisitions from Current Project",
					"allFromContract": "All Contracts from Current Project",
					"allFromQuote": "All Quotes from Current Project",
					"replaceStatus": "Replacement Status",
					"materialCode": "Material Code",
					"materialDescripton": "Material Descripton",
					"materialPrice": "Price",
					"materialCurrency": "Currency",
					"type": "Type",
					"mathingMaterialCode": "Matching Mat.Code",
					"mathingMaterialDescripton": "Matching Mat.Descripton",
					"mathingSupplier": "Matching Mat.Supplier",
					"QuantityUomCannotConvertibleTip": "Quantity UoM is not convertible",
					"noItemFound": "No item found!",
					"noNeutralFound": "No neutral item found!",
					"noPackageFound": "No eligible package found!",
					"noRequsitionFound": "No eligible Requsition found!",
					"noContractFound": "No eligible Contract found!",
					"noQuoteFound": "No eligible Quote found!",
					"currentMaterial": "Current Material",
					"byNeutralMaterialAssignment": "By neutral material assignment",
					"byIdenticalMaterialCode": "By identical material code",
					"byProcurementStructure": "By procurement structure",
					"matchingMaterial": "Matching Material",
					"matchingMaterialByAI": "Matching Material (Recommended by AI)",
					"errorNoReplaceCriteriaSelected": "Please Select Replace criteria first.",
					"all": "All",
					"failedTranslate": "Failed",
					"passedTranslate": "Passed",
					"passedConvertedTranslate": "Passed (Converted)",
					"noSelectedOptionTranslate": "No Selected Option",
					"neutralTypeTranslate": "Neutral",
					"codeTypeTranslate": "Code",
					"structureTypeTranslate": "Structure",
					"aiTypeTranslate": "AI",
					"materialUoM": "Material UoM",
					"materialCurrentPrice": "Material Current Price",
					"mathingPrice": "Matching Mat.Price",
					"variance": "Variance",
					"matchingMaterialUoM": "UoM",
					"loadingInfo": "Data processing, please wait...",
					"variancePercent": "Variance %",
					"convertPrice": "Convert Price",
					"substitutePrice": "Substitute Price",
					"substituteUoM": "Substitute UoM",
					"status": "Status"
				},
				"setAlternateGroup": {
					"title": "Set Base-/Alternate Item Groups",
					"selectAlternateItemGroup": "Set Base-/Alternate Item Groups"
				},
				"createBusinessPartner": {
					"errorNoSelectOnePackage": "Please Select one Package record first.",
					"errorNoSelectOneREQ": "Please Select one Requisition record first.",
					"errorNoSBWithouBP": "No Suggested Bidders need to create Business Partner.",
					"errorInSuggestedBidder": "Please fix the errors in Container Suggested Bidders first.",
					"failToCreate": "Fail to Create Business Partner.",
					"headerText": "Create Business Partner",
					"bodyText": "1 business partner has been created.",
					"bodyTextMulti": "{{length}} business partners have been created.",
					"errorNoSelectOneRfq": "Please select one Rfq record first.",
					"errorInThisModule": "Please check the records that have errors in this module firstly.",
					"errorNoSBWithouBPReload": "No Suggested Bidders need to create Business Partner. Will reload it.",
					"bidderHasNoBpName": "Please check the Business Partner Name for suggested bidders, it should have value when creating Business Partners."
				},
				"generateDeliverySchedule": {
					"wizard": "Generate Delivery Schedule",
					"linkedEstLineItem": "Option #1: Delivery period as per linked activity of underlined line items",
					"linkedActivity": "Option #2: Delivery period as per linked activity in package",
					"descriptionPrefix": "Description Prefix",
					"repeat": "Repeat",
					"weekly": "Weekly",
					"monthly": "Monthly",
					"quarterly": "Quarterly",
					"userSpecified": "User Specified",
					"occurence": "Occurence",
					"timeRequired": "Time Required",
					"note": "Note:",
					"note1": "1.Existed delivery schedule for the checked item will be overwritten;",
					"note2": "2.Quantity will be split evenly if not as per activity of underlined line item;",
					"note3": "3.Deliver schedule with zero quantity will not be created;",
					"note4": "4. If activity option is chosen, start date and end date might be different than activity dates due to lead time & occurence;",
					"reset": "Reset",
					"deliveryModifyTimeByError": "Start date is ealier than End date!",
					"deliveryModifyOccurenceByError": "Occurrence cannot larger then duration!",
					"deliveryModifyInvalidDuration": "The duration is too short to meet the specified frequency",
					"message": "Generate Delivery Schedule Successfully.",
					"chooseitems": "Choose Items:",
					"noteOption1": "Note:Option #1 will only enable if all the checked item's underlined line items all have activity assigned; ",
					"specifyitems": "Please specify the schedule details:",
					"all": "All",
					"source": "Source",
					"estlinkedwithSCHD": "EST linked with SCHD",
					"estnotlinkedwithSCHD": "EST not linked with SCHD",
					"package": "Package",
					"succeed": "Succeed",
					"warnings": "Warnings",
					"warningsitems": "Quantity discrepance found for below items:",
					"warningsnote1": "1.Delivery schedule quantity will base on package quantity, but proportionated with activity quantity.",
					"warningsnote2": "2.It is recommended to update package quantity with estimate quantity.",
					"packageQuantity": "Package Quantity",
					"estimateQuantity": "Estimate Quantity",
					"difference": "Difference",
					"roundUpQuantity": "Round up the Quantity",
					"chooseItemScope": "Please Choose Item Scope:",
					"fromCurrentSubPackage": "From Current Sub Package",
					"fromAllSubPackages": "From All Sub Packages of Current Package",
					"invalidDateFormat": "Time Required Invalid date format",
					"page": "Page",
					"useTempSafetyLeadTime": "Apply New Safety Lead Time"
				},
				"generatePaymentSchedule": {
					"wizard": "Generate Payment Schedule",
					"sCurve": "S-Curve:",
					"codeMask": "Code Mask:",
					"descriptionMask": "Description Mask:",
					"totalOcNet": "Total OC (Net):",
					"totalOcGross": "Total OC (Gross):",
					"startDate": "Start Date:",
					"endDate": "End Date:",
					"noZero": "required and cannot be zero",
					"succeed": "Succeed",
					"isdelay": "Is Delay",
					"message": "Generate Payment Schedule Successfully.",
					"codeTooLong": "The  code maximum length is 16 ",
					"occurence": "Occurence:",
					"userFrequence": "User Frequency:",
					"valueInPackagesIsZero": "the value of above seleted total type in packages {{code}} is zero",
					"mustSelectSourceOfTotalOcNet": "must select a source of {{totalOcNet}}",
					"ThereIsRecordIsDone": "There is record which is Done. Cannot proceed!",
					"ThereIsRecordIsnotMainContract": "Some contracts here are not main contracts, please select main contracts.",
					"contractHaveNoValidDate": "Contract {{code}} does not have ValidFrom or ValidTo, cannot proceed!",
					"packageHaveNoPlannedDate": "Package {{code}} does not have start or end date, cannot proceed!",
					"totalKind": "Total Kind"
				},
				"noItemSelected": "Please select an Item",
				"noItemSelectedTitle": "Info",
				"forCurrentLeadingRecord": "For current leading record",
				"forCurrentPackage": "For current package",
				"forCurrentProject": "For current project",
				"noPaymentScheduleVersion": "No Payment Schedule Version",
				"deleteHighlightedVersion": "Delete Highlighted Version",
				"fillInVersionText": "fill in version text",
				"restroeFromVersion": "Restroe",
				"haveIsDoneItemsCannotRestore": "There is payment schedule which is done. Cannot restore!",
				"maintainPaymentScheduleVersion": "Maintain Payment Schedule Version",
				"createVersion": "Create Version",
				"totalnet": "Total Net",
				"totalgross": "Total Gross",
				"from": "From",
				"end": "End",
				"updateEstimate": {
					"updateQuantity": "Update Quantity",
					"factor": "x Factor",
					"factorFormatErr": "The formart of x Factor is no right",
					"jobCodeTemplate": "Job Code",
					"jobDescriptionTemplate": "Job Description",
					"updateGeneratedJob": "Overwrite Existing Job",
					"IncludeQuotationID": "Include Quotation ID",
					"IncludeContractID": "Include Contract ID",
					"codeTemplateTooltip": "P-Project\nECG {a}- a= Enterprise Cost Groups Catalog Code\nPCG {b}- b= Project Cost Groups Catalog Code\nCU-Controlling Unit\n[x]-Type (Project, Controlling Unit, Enterprise Cost Groups or Project Cost Groups)\n(y) – Position y in Type X\n(y-z) - Position y to z in Type X\n(y,z) - Position y and z in Type X",
					"updateEstimateWarning": "Warning: Some items have different Uom to Resources",
					"descIsTruncated": "Note: Description of Lineitem is truncated as the description from BoQ position is too long ",
					"detail": "Details",
					"reportLog": "Report Log",
					"itemNumber": "Item Number:",
					"updatedBoqNo": "Updated BoQs details",
					"updatedItems": "Updated Items details",
					"uomConflict": "UoMs conflict details",
					"failBoqNo": "Update BoQs fail details",
					"failItem": "Update Item fail details",
					"prcItemsNoPackage": "Prc Items no package",
					"failPesItem": "Update Pes Item fail details",
					"projectNo": "Project Number",
					"packageNo": "Package Code",
					"ofPackageNo": "of packge code",
					"and": "and",
					"update": "Update estimate from linked procurement BoQ item and material item",
					"new": "Create new line item to below specified estimate for new procurement BoQ item and material item",
					"createTo": "Estimate",
					"overwriteOriginalResource": "Overwrite original resources",
					"createBoqResouce2subitem": "Create UR Breakdown resources under one Subitem",
					"linkBoqItem": "Update Estimate based on existing Package Item Assignment",
					"linkPrcItem": "Update Estimate based on existing Package Item Assignment",
					"createNewPrjBoq": "Create project boq",
					"TransferNewBoqBudget": "Transfer Boq items Budget to new LineItem",
					"createLineItemForBoq": "Create new line item to below specified Estimate for new procurement BoQ item",
					"createLIneItemForItem": "Create new line item to below specified Estimate for new material item",
					"costCodeMapping": "Procurement Structure Cost Code Mapping",
					"basicSetting": "Basic Settings",
					"advancedOption": "Advanced Options",
					"prcStructureNoCostCode": "The Cost Code of Procurement Structure shouldn't be empty!",
					"UpdateGroupTitle": "Update Estimate from Package BoQs",
					"CreateGroupTitle": "Update Estimate from Package Items",
					"DeleteExisting": "Delete existing Estimate details",
					"DisableExisting": "Disable existing details",
					"InsertNew": "Insert New / Append existing without comparing",
					"OverwriteExisting": "Overwrite existing Cost Code details",
					"OverwriteExistingDisableNotMatch": "Overwrite / disable existing",
					"packageBoq": "Package BoQ items",
					"packageItem": "Package PrcItems",
					"notNewlyOfferedPesBoqNo": "The Alternative Bid of Boq Item {0} is not item newly offered",
					"pesItemNoContractItem": "Pes Items no contract item",
					"boqNoteText": "Control of what data(sourced from Estimate / new data create in procurement) is available here",
					"itemNoteText": "Control of what data(sourced from Estimate / new data create in procurement) is available here",
					"costCodePickNoteText": "Control of which Cost Code must be used to update estimate is available here",
					"optionNoteText": "Control of applying factors and updating in new jobs is available here"
				},
				"updatePackageBoq": {
					"title": "Update Package (Boq)",
					"updateTip": "Update for existing and new Items",
					"updateQuantity": "Update quantities",
					"updatePrice": "Update prices",
					"updateCostGroup": "Update Cost-Groups(Enterprise/Project)"
				},
				"updatePackageMaterial": {
					"errorNoPackageAssigned": "Requisition has no package is assigned, cannot update!",
					"errorNoAdditionalItems": "No additional Requisition item(s) found which not existed in Package!",
					"updatePackageSuccess": "Update Package successfully!"
				},
				"updatePaymetScheduleDOC": {
					"caption": "Update Payment Schedule Degree Of Completion",
					"updateFailedTitle": "Update Payment Schedule Degree Of Completion failed!",
					"pleaseSelectAHeader": "Please select a Header!",
					"bodyOptions": "Please select an option to update:",
					"selectCurrentItem": "Update current payment schedule line.",
					"selectAllItems": "Update all payment schedule lines of this header."
				},
				"updateVersionBoQ": {
					"dialogTitle": "Update Version BoQ",
					"nonPackageWarningMsg": "Please select one Package first!",
					"nonBoQMsg": "Selected Package does not have BoQ!",
					"warningTitle": "Warning",
					"selectBaseBoQ": "Select base BoQ",
					"updateOption": "Update Option",
					"targetModule": "Target Module",
					"updateMode": "Update Mode",
					"updateAllFields": "Update All Fields",
					"updatePartialFields": "Update Partial Fields",
					"note": "Note",
					"note1": "1.Lead entity with status equals to Approved Ordered, Canceled or Read-only will not be updated.",
					"note2": "2.If lead entity is part of main+change order, their quantity related fields will not be updated.",
					"note3": "3.For additional Positions use the change process to keep data consistancy.",
					"noTargetModuleWarning": "Please select at least one target module.",
					"noUpdateModeWarning": "Please select a update mode.",
					"successMsg": "Update version BoQ successfully!",
					"failMsg": "No version BoQ has been updated!",
					"updateStatus": "Update Status"
				},
				"changePrcPaymentScheduleStatus": "Change Payment Schedule Status",
				"createInterCompany": {
					"forCompany": "For Company",
					"checked": "Checked",
					"billedAmount": "Amount to be Billed",
					"surchargeAmount": "Amount Surcharge",
					"totalAmount": "Amount Total",
					"effectiveDateError": "it must be in between the period START_DATE and END_DATE.",
					"businessYear": "Business Year",
					"businessPeriod": "Business Period",
					"effectiveDate": "Effective Date",
					"invoiceDate": "Invoice Date",
					"postDate": "Posting Date",
					"description": "Description"
				},
				"createAccrualTransaction": {
					"transactionType": "Transaction Type",
					"transactionMode": "Transaction Mode",
					"entityCompanyYearServiceFk": "Company Year",
					"entityCompanyPeriod": "Reporting Period",
					"effectiveDate": "Effective Date",
					"voucherNo": "Voucher No.",
					"postingNarrative": "Posting Narrative",
					"companyTransactionCreated": "company transactions are created",
					"noCompanyTransactionCreated": "No company transaction is created",
					"to": "To",
					"required": "is required",
					"projectName": "Create Accruals"
				},
				"createContract": {
					"hasDuplicateContentInVariantMessage": "Warning: the selected variants have duplicate content and could lead to over purchase! Please check carefully!"
				}
			},
			"findSupplier": {
				"headerText": "Find Bidder",
				"createWizardTitle": "Do you want the system to automatically suggest potential bidders ?",
				"createWizardWithRadius": "Suggest bidders within a radius of",
				"createWizardWithWorldWide": "Suggest bidders world wide",
				"createWizardWithCharacteristic": "Suggest bidders with characteristic",
				"createWizardWithNoSuggest": "Do not suggest potential bidders",
				"createWizardWithManualSearch": "do detailed manual search",
				"createWizardWithFindSupplier": "Find Bidder"
			},
			"overview": {
				"data": "Data",
				"headerText": "Header Texts",
				"itemText": "Item Texts",
				"boq": "BoQ",
				"attachment": "Attachments",
				"milestone": "Milestones",
				"sub": "Sub/Sub Relations",
				"general": "Generals"
			},
			"findBidder": {
				"location": {
					"title": "Location",
					"noProjectAddress": {
						"title": "Location - (no project address)"
					},
					"distance": {
						"title": "Distance"
					},
					"regional": {
						"title": "Regional"
					}
				},
				"bidderName": {
					"title": "Bidder Name"
				},
				"evaluation": {
					"title": "Evaluation Mark",
					"description": "Over"
				},
				"withCharacteristic": {
					"title": "With Characteristic",
					"compareOperator": {
						"noComparison": "No Comparison",
						"equals": "Equals",
						"greaterThan": "Greater Than",
						"lessThan": "Less Than",
						"contains": "Contains",
						"laterThan": "Later Than",
						"earlierThan": "Earlier Than",
						"isNotNullOrEmpty": "Is Not Null or Empty"
					},
					"compareValue": {
						"boolTrue": "True",
						"boolFalse": "False"
					},
					"errorEmpty": "The comparison value should not be empty."
				},
				"nationWide": {
					"title": "Is Nation Wide"
				},
				"prcstructure": {
					"title": "Procurement Structure",
					"errorEmpty": "The Procurement Structure should not be empty."
				},
				"columns": {
					"title": "Column",
					"description": "Mode"
				},
				"businesspartnerstatus": {
					"title": "Businesspartner Status"
				},
				"businesspartnerstatus2": {
					"title": "Businesspartner2 Status"
				},
				"selectCountryError": "Select a country, please",
				"fillBidderError": "Fill Bidder Name, please",
				"selectEvaluationError": "Select a Evaluation Mark, please",
				"findTitle": "Search and specify business partner:",
				"contactTitle": "Contacts",
				"bidderCopyNote": "Copy suggested bidders to RFQ.",
				"selectBp": "Please Select Business Partner",
				"uniqueBPDContact": "one bidder can not two or more contacts",
				"contactRole": "Role",
				"opening": "Opening",
				"gridBidderName": "Name",
				"search": "Search",
				"back": "Back",
				"selectOneBp": "Select one business partner:",
				"subsidiaryGridTitle": "Branch",
				"contractGrandTotal": "Contracted Grand Total(filtered also by PRC Structure)",
				"individualContractAmount": "Individual Contract Amount",
				"considerProcurementStructure": "Consider Procurement Structure"
			},
			"sidebar": {
				"amount": {
					"title": "Amount",
					"net": "Amount(Net)",
					"gross": "Amount(Gross)",
					"vat": "Amount(Vat)"
				},
				"businesspartner": "Business Partner",
				"responsible": "Responsible",
				"owner": "Owner",
				"package": "Package",
				"req": "Requisition",
				"rfq": "Request For Quotation",
				"qtn": "Quote",
				"con": "Contract",
				"pes": "Performance Entry Sheet",
				"invoice": "Invoice"
			},
			"import": {
				"status": "Import Status",
				"barcode": "Barcode",
				"code": "Invoice Code",
				"description": "Invoice Description",
				"businessPartner": "Business Partner",
				"contract": "Contract",
				"project": "Project",
				"date": "Invoice Date",
				"error": "Error",
				"warning": "Warning",
				"xmlFile": "Xml File",
				"file": "File",
				"workflowstatus": "WorkFlow Status"
			},
			"importD94": {
				"header": "Import Material",
				"noCurrentQuoteSelection": "Please select a quotation first!",
				"importSuccessful": "Imported successfully!",
				"importFailed": "Import Failed:{{Messages}}",
				"message": "Message"
			},
			"packageDuration": "Package Duration",
			"updatePaymentTermFIToItems": "Do you want to update payment term FI for items?",
			"updatePaymentTermPAToItems": "Do you want to update payment term PA for items?",
			"updatePaymentTermFIandPAToItems": "Do you want to update payment term FI(PA) for items?",
			"updateIncotermToItem": "Do you want to update incoterm for items?",
			"suggestedBidder": {
				"suggestedBidderContainerGridTitle": "Suggested Bidders",
				"suggestedBidderContainerFormTitle": "Suggested Bidder Detail"
			},
			"leadTimeExtra": "Express Lead Time",
			"replaceMaterialWizard": {
				"replaceMaterial": "Replace Neutral Material"
			},
			"entityPrcStockTransactionType": "Stock Transaction Type",
			"entityPrjStock": "Stock",
			"entityPrjStockLocation": "Stock Location",
			"entityProvisionPercent": "Provision Percent",
			"entityProvisonTotal": "Provision Total",
			"entityPrcStockTransaction": "Stock Transaction",
			"entityLotNo": "Lot No.",
			"entityMaterialDescription": "Material Description",
			"contractorTitle": "Contractor:",
			"notEqualWarnMessage": "The stock total will be incorrect after change.",
			"stocktransactionSaveErrorMessage": "Current item transaction has been referenced by other transactions.",
			"bpLookup": {
				"title": "Search Business Partner",
				"selectCountryHint": "Location is active, must select a value",
				"fillBpHint": "Business partner is active, must fill a value",
				"selectEvaluationHint": "Evaluation mark is active, must select a value",
				"searching": "Searching",
				"contactTitle": "Contacts"
			},
			"dropDownSelect": "Select Text",
			"changeCurrencyHeader": "Change Currency",
			"changeCurrencyMessage": "Changing the currency leads to the recalculation and saving of various sub entities. Do you want to proceed?",
			"changeExchangeRateHeader": "Change Exchange Rate",
			"changeExchangeRateMessage": "Changing the exchange rate leads to the recalculation and saving of various sub entities. Do you want to proceed?",
			"changeCurrencyVersionBoqHeader": "Version BoQs Detected",
			"changeCurrencyVersionBoqText": "Due to the existance of version boqs changing the currency is not allowed!",
			"changeCurrencyRelatedVersionBoqsHeader": "Related Version BoQs detected",
			"changeCurrencyRelatedVersionBoqsText": "Due to the existance of related version boqs changing the currency is not allowed!",
			"changeCurrencyRateIsZero": "Due to the exchange rate is zero changing the currency is not allowed!",
			"yesNoDialogQuestion": "Should the controlling unit be set to {{code}}",
			"yesNoDialogQuestionAndUpdate": "Should the controlling unit be set to {{code}} and update controlling for items/BoQ.",
			"yesNoDialogQuestionToUpdate": "Do you want to update controlling for items/BoQ?",
			"material": "Material No.",
			"orderQuantity": "Order Qty",
			"price": "Price",
			"totalPrice": "Total Price",
			"errorTip": {
				"recordIsReadOnlyTitle": "Record ReadOnly!",
				"recordIsReadOnlyBody": "Current {{code}} is read-only and cannot be modified!",
				"noAccessChangeConfiguration": "Current user is not allowed to change configuration!",
				"noRecordSelectedTitle": "No Record Selected!",
				"noRecordSelectedBody": "Please select one {{code}} first!"
			},
			"userDefined1": "User Defined 1",
			"userDefined2": "User Defined 2",
			"userDefined3": "User Defined 3",
			"userDefined4": "User Defined 4",
			"userDefined5": "User Defined 5",
			"DateRequired": "Date Required",
			"OnHire": "On Hire",
			"OffHire": "Off Hire",
			"entityIsSelected": "Is Selected",
			"entityHasScope": "Has Scope",
			"entityBusinessPartnerStatus": "Status",
			"entityBusinessPartnerName1": "Business Partner",
			"createmodule": {
				"createDialogTitle": "Create Procurement {{module}}",
				"contract": "Contract",
				"requisition": "Requisition"
			},
			"changeTaxCode": {
				"DialogTitle": "Do you want to overwrite tax code for item level? If so item gross value will get updated!",
				"noteForPaymentSchedule": "Note: payment schedule gross value will always get updated!",
				"caption": "Change TaxCode"
			},
			"overrideHeaderTextQuestion": "Do you want to reinitialize the header texts from the Procurement Configuration?",
			"overrideHeaderNItemTextQuestion": "Do you want to reinitialize the header texts & item texts from the Procurement Configuration?",
			"CommentContractor": "Comment Contractor",
			"CommentClient": "Comment Client",
			"prcItemRemainingQuantity": "Remaining Quantity",
			"prcItemContractGrandQuantity": "Contract Grand Quantity",
			"prcItemTotalCallOffQuantity": "Total CallOff Quantity",
			"remainingQuantityForCallOff": "Remaining Quantity For CallOff",
			"deletePackageBoqItem": "Deletion of corresponding package boq item(s)",
			"askForDeletionOfPackageBoqItem": "Do you also want to have the corresponding package boq item(s) to be deleted ?",
			"cannotDeletePackageBoqItem": "Corresponding package boq item(s) cannot be deleted !",
			"deleteRequisitionBoqItem": "Deletion of corresponding requisition boq item(s)",
			"askForDeletionOfRequisitionBoqItem": "Do you also want to have the corresponding requisition boq item(s) to be deleted ?",
			"deletePackageBoqItemAndVersionBoqItems": "Deletion of package boq item(s)",
			"cannotDeletePackageBoqItemsDueToVersionBoqItems": "Package boq item(s) cannot be deleted due to existing version boq items or readonly states involved!",
			"dateOrdered": "Date Ordered",
			"projectDescription": "Project Description",
			"projectStatus": "Project Status",
			"entityMaterialPrice": "Material Price",
			"entityMaterialQuantity": "Material Quantity",
			"entityVat": "Vat",
			"entityVatOc": "Vat Oc",
			"createPrcBoqNoCopy": "no boqs to copy",
			"createStatusTest": "Creating...Please wait.",
			"entityVatGroup": "Vat Group",
			"entityPrcCommunicationChannel": "Communication Channel",
			"entityPrjDocument": "Document",
			"listPostconHistoryTitle": "History",
			"detailPostconHistoryTitle": "History Detail",
			"copyContractItems": "Copy Contract Items",
			"copyContractNNonContractItems": "Copy Contract & Non Contract Items",
			"copyMainContractItems": "Copy Main Contract Items",
			"filterOnlyMainContract": "Filter only main contract item",
			"warranty": {
				"warrantyContainerGridTitle": "Warranty",
				"warrantyContainerDetailTitle": "Warranty Detail",
				"basWarrantySecurityFk": "Warranty Security",
				"basWarrantyObligationFk": "Warranty Obligation",
				"description": "Description",
				"handOverDate": "Hand Over Date",
				"durationMonths": "Duration Months",
				"warrantyEndDate": "Warranty End Date"
			},
			"updateTaxCodeOfContractItemTitle": "Update Tax Code of Contract Item (Material & BoQ)",
			"confirmUpdateContractItemTaxCode": "Please confirm whether update contract item tax code from PES item",
			"noSelectedPesHeader": "Please select one PES record first!",
			"noContractItemFound": "No related contract item found!",
			"updateContractTaxCodeSuccessfully": "Update contract tax code successfully!",
			"updateSuccessfully": "Update Successfully.",
			"entityBasicPesHeader": "Basic Pes",
			"entityBasicPesHeaderDesc": "Basic Pes Description",
			"pesHeaderDialogTitle": "Pes Header",
			"callOffMainContract": "Call Off's Main Contract",
			"callOffMainContractDes": "Call Off's Main Contract Description",
			"entityRecordedPrice": "Recorded Price",
			"entityLatestPrice": "Latest Price",
			"noContractOfPesHeaderError": "Can not create Delta Pes since no contract of the selected Pes Header.",
			"deltaPesCannotCreatePes": "Selected Pes Header is a Delta Pes, and it can not create Delta Pes.",
			"cannotCreateDeltaPes": "Can not create Delta Pes.",
			"noItemsFound": "Note: No Items in the search result. ",
			"createDeltaPesSuccessfully": "Create Delta Pes Successfully: The code of Delta Pes is '{{pesCode}}'.",
			"createWicFromBoqWizardTitle": "Create WIC from BoQ",
			"targetWICGroup": "Target WIC Group",
			"updateBtn": "Update",
			"createBtn": "Create",
			"createSuccessfully": "Create successfully!",
			"selectQuote": "Select Quote",
			"shouldBeUnique": "{{field}} should be unique, '{{value}}' is already existed.",
			"notingToCreate": "Noting to create.",
			"entityQuoteDescription": "Quote Description",
			"canNotCreateContractDueToOrdered": "Can not create contract due to the ordered Status.",
			"canNotCreateContractDueToExisted": "Can not create contract because the quote(base quote) has created contract(s) and the status is ordered. Contract(s) as below:",
			"hasCreatedContract": "This quote(base quote) has created contract(s) and as below: Do you want to create more one?",
			"entityId": "ID",
			"hasContractWhetherStillCreate": "Contract(s) already existed as below, do you want to create new contract?",
			"GoToContract": "Go To Contract",
			"cannotCreateDeltaPesDueToNotAll": "Wizard cannot proceed as not all PES items are assigned with contract.",
			"creating": "Creating...Please wait a second.",
			"createContractSuccessfully": "Create contract(s) successfully. The code(s) is: {{codes}}",
			"transaction": {
				"title": "Transactions",
				"detailTitle": "Transaction Detail",
				"transactionId": "Transaction Id",
				"conHeaderCompanyInvoicedCode": "Invoiced Company Code",
				"conHeaderCompanyInvoicedCodeDescription": "Invoiced Company Name",
				"pesHeader": "Pes Header",
				"isConsolidated": "Consolidated",
				"isChange": "Change",
				"currency": "Currency",
				"pesStatus": "Pes Status",
				"documentDate": "Document Date",
				"dateDelivered": "Date Delivered",
				"entityItemreference": "Item reference",
				"vatAmount": "Vat Amount",
				"vatAmountOc": "Vat Amount Oc",
				"incAmount": "Inc Amount",
				"incAmountOc": "Inc Amount Oc",
				"incVatAmount": "Inc Vat Amount",
				"incVatAmountOC": "Inc Vat Amount Oc",
				"incQuantity": "Inc Quantity",
				"vatPrice": "Vat Price",
				"vatPriceOc": " Vat Price OC",
				"prjStockFk": "Stock Code",
				"prjStocklocationFk": "Stock Location",
				"stocklocationDescription": "Stock Location Description",
				"nominalAccount": "Nominal Account",
				"nominaldimension1name": "Nominal Dimension 1",
				"nominaldimension2name": "Nominal Dimension 2",
				"nominaldimension3name": "Nominal Dimension 3",
				"taxcodematrix": "Tax Code Matrix",
				"vatCode": "Vat Code",
				"controllingUnitCode": "Controlling Unit Code",
				"controllingUnitAssign01": "Controlling Unit Assign01",
				"controllingUnitAssign02": "Controlling Unit Assign02",
				"controllingUnitAssign03": "Controlling Unit Assign03",
				"controllingUnitAssign04": "Controlling Unit Assign04",
				"controllingUnitAssign05": "Controlling Unit Assign05",
				"controllingUnitAssign06": "Controlling Unit Assign06",
				"controllingUnitAssign07": "Controlling Unit Assign07",
				"controllingUnitAssign08": "Controlling Unit Assign08",
				"controllingUnitAssign09": "Controlling Unit Assign09",
				"controllingUnitAssign10": "Controlling Unit Assign10",
				"controllingUnitAssign01Desc": "Controlling Unit Assign01 Description",
				"controllingUnitAssign02Desc": "Controlling Unit Assign02 Description",
				"controllingUnitAssign03Desc": "Controlling Unit Assign03 Description",
				"controllingUnitAssign04Desc": "Controlling Unit Assign04 Description",
				"controllingUnitAssign05Desc": "Controlling Unit Assign05 Description",
				"controllingUnitAssign06Desc": "Controlling Unit Assign06 Description",
				"controllingUnitAssign07Desc": "Controlling Unit Assign07 Description",
				"controllingUnitAssign08Desc": "Controlling Unit Assign08 Description",
				"controllingUnitAssign09Desc": "Controlling Unit Assign09 Description",
				"controllingUnitAssign10Desc": "Controlling Unit Assign10 Description",
				"controllingUnitAssign01Comment": "Controlling Unit Assign01 Comment",
				"controllingUnitAssign02Comment": "Controlling Unit Assign02 Comment",
				"controllingUnitAssign03Comment": "Controlling Unit Assign03 Comment",
				"controllingUnitAssign04Comment": "Controlling Unit Assign04 Comment",
				"controllingUnitAssign05Comment": "Controlling Unit Assign05 Comment",
				"controllingUnitAssign06Comment": "Controlling Unit Assign06 Comment",
				"controllingUnitAssign07Comment": "Controlling Unit Assign07 Comment",
				"controllingUnitAssign08Comment": "Controlling Unit Assign08 Comment",
				"controllingUnitAssign09Comment": "Controlling Unit Assign09 Comment",
				"controllingUnitAssign10Comment": "Controlling Unit Assign10 Comment",
				"itemUomQuantity": "Item Uom Quantity",
				"issuccess": "Is Success",
				"handoverId": "Handover Id",
				"returnValue": "Return Value",
				"pesNo": "Pes No",
				"conStatus": "Contract Status",
				"dateOrdered": "Date Ordered",
				"dateEffective": "Date Effective",
				"dateReported": "Date Reported",
				"orderNo": "Order No",
				"amount": "Amount",
				"amountOc": "Amount Oc",
				"quantity": "Quantity",
				"isCanceled": "Cancelled"
			},
			"createdContracts4IdealQtn": "Contract(s) already existed as below for this ideal quote, do you want to create new contract?",
			"accassign": {
				"AccountAssignment": "Account Assignment",
				"BusinessArea": "Business Area",
				"ControllingArea": "Controlling Area",
				"AccountingArea": "Accounting Area",
				"ContractType": "Account Contract Type",
				"PrcOrganization": "Procurement Organization",
				"PrcGroup": "Procurement Group",
				"AccountDescription": "Item Description",
				"ContractedQuantity": "Contracted Quantity",
				"ConAccountItemType": "Item Type",
				"BasAccount": "Account",
				"AccIsDelete": "Is Delete",
				"AccIsFinalInvoice": "Is Final Invoice",
				"ConAccountMaterialGroup": "Material Group",
				"BasUom": "Uom",
				"DateDelivery": "Delivery Date",
				"AccountAssignment01": "Banf",
				"AccountAssignment02": "Netzplan",
				"BreakdownAmountOc": "Breakdown Amount(Oc)",
				"AccountAssignment03": "Vorgangsnr",
				"AccountAssignAccType": "Account Type",
				"AccountAssignFactory": "Factory",
				"SapMandant": "Sap-Mandant",
				"IsCreateInvAccount": "Is Allow InvAccount Change",
				"Is2Fields": "Is 2Fields",
				"Version": "Version"
			},
			"statusHistory": {
				"title": "Status History",
				"from": "From",
				"to": "To",
				"remark": "Remark",
				"changedAt": "Changed At",
				"changedBy": "Changed By"
			},
			"noPesItemWithStock": "No PES item has stock assigned. Please assign stock first!",
			"somePesItemsWithoutStock": "Note: only PES item with stock assigned will be listed.",
			"takeOverFromPlantDialogTitle": "Take over attributes from Plant?",
			"entityOverallDiscount": "Overall Discount",
			"entityOverallDiscountOc": "Overall Discount (OC)",
			"entityOverallDiscountPercent": "Overall Discount Percent",
			"DiscountSplitEntity": "Discount Split",
			"DiscountSplitOcEntity": "Discount Split Oc",
			"NotMoreThanNetTotalNoDiscount": "Should not more than Net Total (no discount)",
			"NotMoreThanNetTotalOcNoDiscount": "Should not more than Net Total Oc (no discount)",
			"OverallDiscountPercentRangeErr": "Overall Discount Percent range should in [0,100]",
			"ConHeaderContact": "Contact",
			"entityDateDelivered": "Date Delivered",
			"entityPriceOc": "Price(OC)",
			"discountSplitNothing": "Nothing to do, {{itemNum}} Items updated, {{boqNum}} Boqs updated",
			"discountSplitSucceessfully": "Discount split successfully, {{itemNum}} Items updated, {{boqNum}} Boqs updated",
			"discountSplittDialogTitle": "Discount Split",
			"entityTextInfo": "Text Info",
			"entityPackageTextInfo": "Package Text Info",
			"estimateBudget": "Estimate Budget",
			"submissionRequirement": "Submission Requirements",
			"pleaseSetPaymentScheduleTotal": "Please set payment schedule total first!",
			"discountRangeError": "discount range should in [0,100]",
			"updatePrcStructureWizard": {
				"allStatus": "All Status",
				"mixedStatus": "Mixed Status"
			},
			"modifyExchangeRate": {
				"homeCurrency": "Home Currency",
				"foreignCurrency": "Foreign Currency",
				"specifyUnchangedCurrency": "Please specify the unchanged currency value while change currency:"
			},
			"entityConBoqHeaderFk": "Contract BoQ",
			"visibility": "Visibility",
			"visibilityOption": {
				"standardOnly": "Visible in Standard",
				"portalOnly": "Visible in Portal",
				"standardPortal": "Visible in Standard&Portal"
			},
			"prcItemNotMatchError": "This item number is not eixsted in requisition and cannot be added.",
			"referenceNotMatch": "This reference number is not eixsted in requisition and cannot be added.",
			"entityResRequisition": "Resource Requisition",
			"itemNOtSaved": "This Item is not saved",
			"createFirstPaymentScheduleLine": "Create First Payment Schedule Line",
			"entityBudgetPerUnit": "Budget Per Unit",
			"entityBudgetTotal": "Budget Total",
			"entityBudgetFixedUnit": "Budget Fixed Unit",
			"entityBudgetFixedTotal": "Budget Fixed Total",
			"entityCopyType": "Copy Type",
			"entityIsDisabled": "Is Disabled",
			"entityIsContracted": "Is Contracted",
			"entityIsContractedInOtherPkg": "Contracted in other Pkg",
			"entityExQtnIsEvaluated": "Is Evaluated",
			"copyTypeWicBoq": "WIC BoQ",
			"copyTypePrjBoq": "Project BoQ",
			"copyTypePacBoq": "Package BoQ",
			"copyTypeMaterial": "Material",
			"copyTypeConBoq": "Procurement Contract BoQ",
			"entityPrjBoqFk": "Project BoQ",
			"entityConHeaderDesc": "Procurement Contract Description",
			"entityPackageBoqHeaderFk": "Package BoQ",
			"entitySalesTaxMethodFk": "Sales Tax Method",
			"extBidderGridTitle": "Further external BPs",
			"extBidderFormTitle": "Further external BPs Detail",
			"extBidderPackageMissing": "Package should not be null for selected record, please assigned package first.",
			"entityBPRole": "BP Role",
			"entityContactRole": "Contact Role",
			"specificationPlainText": "Specification Plain Text - Item",
			"specificationFormatText": "Specification Formatted Text - Item",
			"controllingUnitSelection": {
				"title": "Controlling Unit Selection",
				"message": "This record cannot be selected. Its IsAccounting is false!"
			},
			"saleTax": {
				"SalesTaxGridTitle": "Sales Tax",
				"SalesTaxDetailTitle": "Sales Tax Detail"
			},
			"saleTaxCode": {
				"SalesTaxCodeGridTitle": "Sales Tax Code",
				"SalesTaxCodeFormTitle": "Sales Tax Code Detail"
			},
			"entityValidFrom": "Valid From",
			"entityValidTo": "Valid To",
			"replaceDialog": {
				"replaceBtn": "Replace",
				"title": "Permanent replace merge fields",
				"beforeReplacement": "Text BEFORE replace operation",
				"afterReplacement": "Text AFTER replace operation",
				"note": "Please note: after 'placeholder replacement' any subsequent change of the data source no longer affects this block.",
				"progressInfo": "Replacing, please wait..."
			},
			"entityContactRoleTypeFk": "Contact Role Type",
			"entityFwBoqWicCatFk": "Framework WIC Group",
			"entityFwBoqWicCatBoqFk": "Framework WIC BoQ",
			"updateWicFromBoq": {
				"updateBtn": "Update",
				"unitRate": "UnitRate",
				"itemTypeStand": "Item Type Stand/Opt",
				"itemTypeBase": "Item Type Base/Alt",
				"updateSuccessfully": "Update successfully!",
				"updateCurrency": "Source={{Source}} / WIC= {{Target}} \"Do you want to continue?\" ",
				"title": "Update Wic From Boq"
			},
			"changeDateEffectiveConConfirm": "Changing the Date Effective leads to the recalculation and saving of the sub entities. Do you want to proceed? ",
			"changeDateEffectiveHead": "Update Boq",
			"jobCode": "Job Code",
			"jobDescription": "Job Description",
			"entityUrl": "Url",
			"entityPrcDocumentStatusFk": "Document Status",
			"itemsNoStructureDoYouContinueSave": "There are items with no Structure, do you continue?",
			"contractedDateOrdered": "Contracted Date Ordered",
			"from": "From",
			"to": "To",
			"exQtnIsEvaluated": "Evaluated",
			"prcItemQuantityDeliveredUi": "Quantity Delivered(UI)",
			"prcItemQuantityRemainingUi": "Quantity Remaining(UI)",
			"askDeletePrice": "Price will be deleted. Do you want to continue?",
			"confirmDeletePrice": "Confirm deletion of Price",
			"entityCo2Project": "CO2/kg (Project)",
			"entityCo2ProjectTotal": "CO2/kg (Project Total)",
			"entityCo2SourceTotal": "CO2/kg (Source Total)",
			"entityCo2Source": "CO2/kg (Source)",
			"profileOption": {
				"ok": "Save & OK"
			},
			"billingSchemaFinal": "Billing Schema Final",
			"billingSchemaFinalOc": "Billing Schema Final OC",
			"UpdateDate": "Update Date",
			"renumberItem": {
				"renumber": "Renumber",
				"title": "Renumber Item",
				"message": "Item renumber successfully",
				"info": "Selected {{code}} status is read only, the wizard cannot be used!"
			},
			"projectChange": "Project Change",
			"projectChangeStatus": "Project Change Status",
			"projectChangeDescription": "Project Change Description",
			"copyRateFromRequisition": "Copy rate from Requisition",
			"entityCharge": "Charge",
			"entityChargeOc": "Charge Oc",
			"invoiceQuantity": "Invoice Quantity",
			"cumulativeInvoicedQuantity": "Cumulative Invoiced Quantity",
			"quoteCode": "Quote Code",
			"quoteDescription": "Quote Description",
			"entityDatePosted": "Posting Date",
			"disableEnableMaterialTitle": "Disable/Enable Material Item",
			"disableEnableMaterialMsg": "Material Item updated, {{messageInfo}} Please save the record to make these changes permanent.",
			"disabledListText": "Disabled: Item No.{{disabledList}},",
			"enabledListText": "Enabled: Item No.{{enabledList}},"
		}
	}
}