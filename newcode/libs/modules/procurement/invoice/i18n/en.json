{
	"procurement": {
		"invoice": {
			"moduleName": "Invoice",
			"changeInvoiceCodeWizard": "Change Invoice Code Wizard",
			"error": {
				"referenceUniqueError": "An invoice with this reference has already been recorded for this supplier",
				"pesUniqueError": "The adding performance entry sheet is already existed",
				"controllingUnitError": "The controlling unit must be an accounting element and status is open for posting!",
				"dateNetPayableError": "The net payable date should be bigger than discount date",
				"billingSchemaCalculateErrorTitle": "The billing schema calculate error",
				"noAvailableFileError": "no available file error",
				"paymentHintError": "only accept uppercase letters and length less than three",
				"billingSchemaErrorStatusMiss": "Please define error status for the billing schema first!",
				"errorMessage": "Error Message",
				"referenceError": "Please check it formatter",
				"noConfiguration": "The contract assigned does not have valid configuration under same config header of the invoice."
			},
			"group": {
				"amount": "Amount",
				"allocation": "Allocation",
				"workflow": "Workflow",
				"paymentTerms": "Payment Terms",
				"reconciliation": "Reconciliation",
				"reconciliationOc": "Reconciliation(OC)",
				"other": "Other",
				"pes": "Performance Entry Sheet ",
				"service": "Service",
				"contract": "Contract",
				"delivery": "Delivery",
				"validation": "Validation",
				"transaction": "Transaction",
				"postingtype": "Posting Type",
				"ictransaction": "IC Transaction"
			},
			"title": {
				"contracDialogTitle": "Contract Search Dialog",
				"header": "Invoice Header",
				"headerDetail": "Invoice Header Detail",
				"rejectionremarkDetail": "Rejection Remark",
				"pes": "Performance Entry Sheets",
				"pesDetail": "Performance Entry Sheet Detail",
				"general": "Generals",
				"generalDetail": "General Detail",
				"reconciliation": "Reconciliation Warning",
				"reconciliationDetail": "Reconciliation Warning Detail",
				"header2header": "Chained Invoices",
				"contract": "Contract Items ",
				"contractDetail": "Contract Item Detail",
				"rejection": "Rejections",
				"rejectionDetail": "Rejection Detail",
				"other": "Other Services",
				"otherDetail": "Other Service Detail",
				"billingschema": "Billing Schema",
				"certificate": "Certificates",
				"certificateDetail": "Certificate Detail",
				"reconciliation2": "Reconciliation",
				"importInvoiceTitle": "Invoice Import",
				"importInvoiceWarningTitle": "Import Invoice Warning",
				"payment": "Payments",
				"paymentDetail": "Payments Detail",
				"validation": "Validations",
				"validationDetail": "Validation Detail",
				"transaction": "Transactions",
				"transactionDetail": "Transaction Detail",
				"invoiceGroupingContainer": "Invoice Structure",
				"InvGrpSetDTLByOtherGridTitle": "Group Set By Other",
				"InvGrpSetDTLByOtherFormTitle": "Group Set Details By Other",
				"InvGrpSetDTLByContractGridTitle": "Group Set By Contract Items",
				"InvGrpSetDTLByContractFormTitle": "Group Set Details By Contract Items",
				"InvGrpSetDTLByTransactionsGridTitle": "Group Set By Transactions",
				"InvGrpSetDTLByTransactionsFormTitle": "Group Set Details By Transactions",
				"InvGrpSetDTLByRejectionGridTitle": "Group Set By Rejection",
				"InvGrpSetDTLByRejectionFormTitle": "Group Set Details By Rejection",
				"IcTransaction": "IC Transactions",
				"IcTransactionDetail": "IC Transaction Detail"
			},
			"reconciliation2": {
				"type": "Type"
			},
			"header": {
				"entityBusinessPartner": "Business Partner",
				"fromBillingSchema": "From Billing Schema",
				"invStatusFk": "Status",
				"code": "Entry No.",
				"deferraltype": "Deferral Type",
				"rubricCategory": "Kind of Invoice",
				"progressid": "Progress Invoice",
				"configuration": "Configuration",
				"description": "Narrative",
				"dateInvoiced": "Date",
				"reference": "Invoice No.",
				"dateReceived": "Received",
				"datePosted": "Posting Date",
				"amountGross": "Amount(Gross)",
				"amountNet": "Amount(Net)",
				"amountGrossOC": "Amount(Gross OC)",
				"amountNetOC": "Amount(Net OC)",
				"requisitionOwner": "Requisition Owner",
				"reqOwnerDes": "Requisition Owner Description",
				"currentResponsible": "Current Responsible",
				"curResponsibleDes": "Current Responsible Description",
				"reconcilationHint": "Hint",
				"pes": "PES",
				"pesHeaderDes": "PES Description",
				"contract": "Contract",
				"conHeaderDes": "Contract Description",
				"contractTotal": "Contract Total",
				"ContractTotalInvoice": "Invoiced",
				"ContractTotalPercent": "Contract Total Percent",
				"contractChangeOrder": "Contract Change Order",
				"contractTotalOc": "Contract Total/CO",
				"contractTotalInvoicePercent": "Contract Total/Invoiced/%",
				"contractOrderDate": "Contract from",
				"contractStatus": "Contract Status",
				"orderDateStatus": "Contract from/Status",
				"contractTotalGross": "Contract Total Gross",
				"contractChangeOrderGross": "Contract Change Order Gross",
				"invoicedGross": "Invoiced Gross",
				"contractTotalGrossPercent": "Contract Gross Percent",
				"contractTotalGrossOc": "Contract Gross/CO Gross",
				"contractTotalInvoiceGrossPercent": "Contract Gross/Invoiced Gross/%",
				"totalPerformedNet": "Total Performed Net",
				"totalPerformedGross": "Total Performed Gross",
				"paymentTerm": "Payment Term",
				"paymentTermDes": "Payment Term Description",
				"codeRetention": "Code Retention",
				"discountDate": "Discount Date",
				"discountBasis": "Discount Basis",
				"discountBasisOc": "Discount Basis(OC)",
				"discountAmount": "Discount Amount",
				"discountAmountOc": "Discount Amount(OC)",
				"netPayable": "Net Payable",
				"paymentHint": "Payment Hint",
				"fromPES": "From PES",
				"fromContract": "From Contract",
				"fromOther": "From Other",
				"rejections": "Rejections",
				"balance": "Balance",
				"amountNetPES": "PES(NET)",
				"amountVatPES": "PES(VAT)",
				"amountGrossPES": "PES(Gross)",
				"amountNetContract": "Contract(NET)",
				"amountVatContract": "Contract(VAT)",
				"amountGrossContract": "Contract(Gross)",
				"amountNetOther": "Other(NET)",
				"amountVatOther": "Other(VAT)",
				"amountGrossOther": "Other(Gross)",
				"fromBillingSchemaNet": "From Billing Schema(NET)",
				"fromBillingSchemaVat": "From Billing Schema(VAT)",
				"fromBillingSchemaGross": "From Billing Schema(Gross)",
				"amountNetReject": "Reject(NET)",
				"amountVatReject": "Reject(VAT)",
				"amountGrossReject": "Reject(Gross)",
				"amountNetBalance": "Balance(NET)",
				"amountVatBalance": "Balance(VAT)",
				"amountGrossBalance": "Balance(Gross)",
				"amountNetPESOc": "PES(NET OC)",
				"amountVatPESOc": "PES(VAT OC)",
				"amountGrossPESOc": "PES(Gross OC)",
				"amountNetContractOc": "Contract(NET OC)",
				"amountVatContractOc": "Contract(VAT OC)",
				"amountGrossContractOc": "Contract(Gross OC)",
				"amountNetOtherOc": "Other(NET OC)",
				"amountVatOtherOc": "Other(VAT OC)",
				"amountGrossOtherOc": "Other(Gross OC)",
				"fromBillingSchemaNetOc": "From Billing Schema(NET OC)",
				"fromBillingSchemaVatOc": "From Billing Schema(VAT OC)",
				"fromBillingSchemaGrossOc": "From Billing Schema(Gross OC)",
				"fromBillingSchemaFinalTotal": "Final Total",
				"fromBillingSchemaFinalTotalOc": "Final Total OC",
				"amountNetRejectOc": "Reject(NET OC)",
				"amountVatRejectOc": "Reject(VAT OC)",
				"amountGrossRejectOc": "Reject(Gross OC)",
				"amountNetBalanceOc": "Balance(NET OC)",
				"amountVatBalanceOc": "Balance(VAT OC)",
				"amountGrossBalanceOc": "Balance(Gross OC)",
				"headerReference": "Header Reference",
				"netTotal": "Net Total",
				"period": "Period",
				"netTotalOc": "Net Total Oc",
				"periodOc": "Period OC",
				"dateDelivered": "Date Delivered",
				"dateDeliveredFrom": "Date Delivered From",
				"percentDiscount": "Percent Discount",
				"fromPaymentTotalPayment": "Total Payment",
				"fromPaymentTotalPaymentDiscount": "Total Payment Discount",
				"dateDeferralStart": "Date Deferral Start",
				"supplierStatus": "Supplier Status",
				"businessPartnerStatus": "Business Partner Status",
				"referenceStructured": "Reference Structured",
				"paymentMethodEntity": "Payment Method",
				"bankType": "Bank Type"
			},
			"contract": {
				"itemTitle": "Item",
				"boqTitle": "BoQ",
				"material": "Material No.",
				"orderQuantity": "Order Qty",
				"orderFactoredQuantity": "Factored Order Qty",
				"price": "Price",
				"totalPrice": "Total Price",
				"totalValue": "Total Value",
				"priceOc": "Price(OC)",
				"totalPriceOc": "Total Price(OC)",
				"totalValueOc": "Total Value(OC)",
				"finalDelivery": "Final Delivery",
				"dateOrdered": "Contract Date",
				"itemNO": "Item NO.",
				"quantity": "Quantity/Percentage",
				"percentage": "Percentage",
				"entityMdcSalesTaxGroup": "Sales Tax Group"
			},
			"entityPES": "PES No.",
			"entityReference": "Reference",
			"entityDocumentDate": "Document Date",
			"entityDateDelivered": "Deliver Date",
			"entityConCode": "Contract",
			"entityCtrlCode": "Controlling Unit",
			"entityRejection": "Reason",
			"entityValue": "Value",
			"entityNet": "Net",
			"entityVAT": "Vat",
			"entityGross": "Gross",
			"entityValueOc": "Value(OC)",
			"entityNetOc": "Net(OC)",
			"entityVATOc": "Vat(OC)",
			"entityGrossOc": "Gross(OC)",
			"entityOriginalValue": "Original Value",
			"entityOriginalVAT": "Original Vat",
			"entityOriginalValueOc": "Original Value(OC)",
			"entityOriginalVATOc": "Original Vat(OC)",
			"entityXmlFile": "Invoice xml file",
			"importFileStatus": "Import Files Status",
			"alreadyImported": "Error",
			"newImported": "New",
			"pesLookupDialogTitle": "Performance Entry Sheet Search Dialog",
			"invoiceDialogTitle": "Invoice Search Dialog",
			"reconciliationDialogTitle": "Warning",
			"reconciliationWarningMessage": "The general value(s) is(are) different than the one in Contract",
			"reconciliationRemark": "The value of general {{field1}} differs from the definition in contract {{field2}} {{field3}}",
			"reconciliationWarning": "Certificate {{description}} not found",
			"reconciliationBalanceWarning": "Balance in Reconciliation is not 0",
			"amountTotal": "Amount(Total)",
			"amountTotalOc": "Amount(Total OC)",
			"amountTotalGross": "Amount(Total Gross)",
			"amountTotalOcGross": "Amount(Total Gross OC)",
			"amountUnit": "Amount(Unit)",
			"amountUnitOc": "Amount(Unit OC)",
			"amountUnitGross": "Amount(Unit Gross)",
			"amountUnitOcGross": "Amount(Unit Gross OC)",
			"paymentDate": "Payment Date",
			"isRetention": "Is Retention",
			"bankVoucherNo": "Bank voucher No.",
			"bankEntryNo": "Bank entry No.",
			"bankAccount": "Bank Account",
			"postingNarritive": "Posting Narrative",
			"referenceType": "Reference",
			"referenceDes": {
				"general": "General",
				"certificate": "Certificate",
				"billingSchema": "BillingSchema",
				"invHeader": "InvHeader",
				"transaction": "Transaction"
			},
			"message": "Message",
			"entityAmountVat": "VAT Amount",
			"entityAmountNet": "Net Amount",
			"entityDiscountAmountVat": "VAT Discount Amount",
			"entityDiscountAmountNet": "Net Discount Amount",
			"entityCodeRetention": "Code Retention",
			"tab": {
				"irledger": "IRLedger",
				"applications": "Applications",
				"conditions": "Gen.Conditions",
				"info": "Info",
				"other": "Other",
				"rejection": "Rejection",
				"contract": "Contract"
			},
			"view": {
				"irledger": "IRLedger",
				"applications": "Applications",
				"conditions": "Gen.Conditions",
				"info": "Info",
				"other": "Other",
				"rejection": "Rejection",
				"contract": "Contract"
			},
			"errorTip": {
				"recordIsReadOnlyTitle": "Record ReadOnly!",
				"recordIsReadOnlyBody": "Current invoice is read-only and cannot be modified!",
				"recordIsNoAccessTitle": "Record No Access!",
				"noAccessChangeConfiguration": "Cannot proceed due to status' access control via access descriptor",
				"noRecordSelectedTitle": "No Record Selected!",
				"noRecordSelectedBody": "Please select one invoice first!"
			},
			"wizard": {
				"change": {
					"status": {
						"headerText": "Change Invoice Status"
					},
					"configuration": {
						"headerText": "Change Invoice Configuration",
						"cantGenerateCode": "Can't generate new code from the selected configuration."
					},
					"code": {
						"headerText": "Change Invoice Code"
					},
					"invoiceImport": "Invoice Import"
				},
				"invoice": {
					"import": {
						"loading": "Loading",
						"Importing": "Importing",
						"headerText": "Invoice Import",
						"itemText": "Invoice Import",
						"Filter": "Filter",
						"FilterAll": "Show all",
						"FilterError": "Show import errors",
						"FilterCurrent": "Show new imports",
						"chooseItems": "Select invoice XML file(s):",
						"xInvoiceImportSucceeded": "The xInvoice import was completed successfully.",
						"importResult": "Import result",
						"resultBodyText": "Import Result:\n\tTotal:{{total}}\n\tSucceeded:{{succeeded}}\n\tFailed:{{failed}}"
					}
				},
				"checkbox": {
					"headerText": "Select"
				},
				"isActivateCaption": "Warning",
				"isActiveMessage": "Wizard cannot be used due to selected record's status!",
				"createAccrualTransaction": {
					"title": "Create Invoice Accrual Transaction"
				},
				"createInterCompanyBill": {
					"amountReceivable": "Amount Receivable",
					"billingSchema": "Billing Schema",
					"businessPeriod": "Business Period",
					"businessYear": "Business Year",
					"checked": "Checked",
					"configuration": "Configuration",
					"effectiveDate": "Effective Date",
					"effectiveDateError": "it must be in between the period START_DATE and END_DATE.",
					"forCompany": "For Company",
					"interCompanyBillCreated": "InterCompany Billing had been created:",
					"noInterCompanyBillCreated": "No Inter Company Bill is created",
					"title": "Create Inter Company Bill",
					"notPostedInvoices": "The invoice has not yet posted",
					"billedAmount": "Amount to be Billed",
					"notRechargedInvoices": "No Invoices to be recharged",
					"surchargeAmount": "Amount Surcharge",
					"totalAmount": "Amount Total",
					"externalNo": "External No",
					"interCompanyCreated": "InterCompany Billing had been created:",
					"invoiceNo": "Invoice No.",
					"notRecharged": "No Invoices to be recharged",
					"supplierCode": "Supplier Code",
					"supplierName": "Supplier Name"
				}
			},
			"sidebar": {
				"dateInvoiced": "Date Invoiced",
				"dateReceived": "Date Received",
				"datePosted": "Posting Date",
				"amount": {
					"title": "Amount",
					"fromPes": "From Pes",
					"fromContract": "From Contract",
					"fromOther": "From Other",
					"fromRejections": "Rejections",
					"fromBalance": "Balance",
					"fromBillingSchema": "BillingSchema"
				},
				"reConciliationNet": "ReConciliation(Net)",
				"reConciliationGross": "ReConciliation(Gross)",
				"reConciliationVat": "ReConciliation(Vat)"
			},
			"invContractItem": {
				"description": "General Description",
				"valueType": "Value Type",
				"invoiceValue": "Invoice Value",
				"contractValue": "Contract Value"
			},
			"transaction": {
				"documentType": "Document Type",
				"lineType": "Line Type",
				"currency": "Currency",
				"voucherNumber": "Voucher Number",
				"voucherDate": "Voucher Date",
				"postingNarritive": "Posting Narrative",
				"postingDate": "Posting Date",
				"externalNumber": "External Number",
				"externalDate": "External Date",
				"netDuedate": "Net Due Date",
				"discountDueDate": "Discount Due Date",
				"discountAmount": "Discount Amount",
				"creditor": "Creditor",
				"creditorGroup": "Creditor Group",
				"businessPostingGroup": "Business Posting Group",
				"accountPayable": "Account Payable",
				"nominalAccount": "Nominal Account",
				"nominalAccountFi": "Nominal Account Fi",
				"amount": "Amount",
				"quantity": "Quantity",
				"isdebit": "Is Debit",
				"vatAmount": "Vat Amount",
				"vatCode": "Vat Code",
				"isprogress": "Is Progress",
				"orderNumber": "Order Number",
				"amountAuthorized": "Amount Authorized",
				"controllingUnitCode": "Controlling Unit Code",
				"controllingUnitAssign01": "Controlling Unit Assign01",
				"controllingUnitAssign02": "Controlling Unit Assign02",
				"controllingUnitAssign03": "Controlling Unit Assign03",
				"controllingUnitAssign04": "Controlling Unit Assign04",
				"controllingUnitAssign05": "Controlling Unit Assign05",
				"controllingUnitAssign06": "Controlling Unit Assign06",
				"controllingUnitAssign07": "Controlling Unit Assign07",
				"controllingUnitAssign08": "Controlling Unit Assign08",
				"controllingUnitAssign09": "Controlling Unit Assign09",
				"controllingUnitAssign10": "Controlling Unit Assign10",
				"controllingUnitAssign01Desc": "Controlling Unit Assign01 Description",
				"controllingUnitAssign02Desc": "Controlling Unit Assign02 Description",
				"controllingUnitAssign03Desc": "Controlling Unit Assign03 Description",
				"controllingUnitAssign04Desc": "Controlling Unit Assign04 Description",
				"controllingUnitAssign05Desc": "Controlling Unit Assign05 Description",
				"controllingUnitAssign06Desc": "Controlling Unit Assign06 Description",
				"controllingUnitAssign07Desc": "Controlling Unit Assign07 Description",
				"controllingUnitAssign08Desc": "Controlling Unit Assign08 Description",
				"controllingUnitAssign09Desc": "Controlling Unit Assign09 Description",
				"controllingUnitAssign10Desc": "Controlling Unit Assign10 Description",
				"controllingUnitAssign01Comment": "Controlling Unit Assign01 Comment",
				"controllingUnitAssign02Comment": "Controlling Unit Assign02 Comment",
				"controllingUnitAssign03Comment": "Controlling Unit Assign03 Comment",
				"controllingUnitAssign04Comment": "Controlling Unit Assign04 Comment",
				"controllingUnitAssign05Comment": "Controlling Unit Assign05 Comment",
				"controllingUnitAssign06Comment": "Controlling Unit Assign06 Comment",
				"controllingUnitAssign07Comment": "Controlling Unit Assign07 Comment",
				"controllingUnitAssign08Comment": "Controlling Unit Assign08 Comment",
				"controllingUnitAssign09Comment": "Controlling Unit Assign09 Comment",
				"controllingUnitAssign10Comment": "Controlling Unit Assign10 Comment",
				"issuccess": "Is Success",
				"transactionId": "Transaction Id",
				"handoverId": "Handover Id",
				"returnValue": "Return Value",
				"all": "All",
				"selected": "Current Selected",
				"generateTransaction": "Generate Transaction For {{status}}",
				"taskWait": "Task to generate transactions already started. Its status can be checked in validation container.",
				"taskFail": "Generate transaction task fail may be : {{reason}}",
				"controllingUnitAssignEmpty": "The values in Controlling Unit Assign01 and 02 are null!  Do you want to continue transferring the voucher information?",
				"noRecord": "Please search at least one record first.",
				"amountZero": "The Transactions when amount/Vatamount/quantity are zero then is not generate",
				"fixedAsset": "Fixed Asset",
				"gLAccount": "G/L Account",
				"nominalDimension": "Nominal Dimension",
				"nominalDimension2": "Nominal Dimension2",
				"nominalDimension3": "Nominal Dimension3",
				"pesHeader": "Pes No.",
				"pesItem": "Pes Item",
				"otherItem": "Other Service Item",
				"extOrderNo": "Ext Order No",
				"extPesNo": "Ext Pes No",
				"controllingUnitIc": "Clearing Controlling Unit",
				"finishedGeneralTransaction": "Finish Generating Transaction",
				"generalTransaction": "Generating Transaction",
				"generalInformation": "Information"
			},
			"icTransaction": {
				"isSurcharge": "Is Surcharge",
				"bilHeader": "Bill Header",
				"bilItem": "Bill Item",
				"invTransactionfk": "Invoice Transaction Id"
			},
			"warning": {
				"warning": "Warning",
				"configurationWarnning": "The configuration is updated because the existed configuration is not matched the selected contract.",
				"bothWarnning": "The configuration and type are updated because the existed configuration and type are not matched the selected contract.",
				"progressIdByWarning": "For Contract {{conFk}} there is already a Progress ID {{progressId}}. Progress Id has been set to {{resetProgressId}}"
			},
			"entityQuantityAskedFor": "Quantity Asked For",
			"entityQuantityConfirmed": "Quantity Confirmed",
			"entityPriceAskedfor": "Price(Asked for)",
			"entityPriceConfirmed": "Price(Confirmed)",
			"entityPriceAskedforOc": "Price(Asked For OC)",
			"entityPriceConfirmedOc": "Price(Confirmed OC)",
			"entityItemreference": "Item reference",
			"askedForTotal": "Total(Asked For)",
			"confirmedTotal": "Total(Confirmed)",
			"netTotal": "Total(Net)",
			"askedForTotalOc": "Total(Asked For OC)",
			"confirmedTotalOc": "Total(Confirmed OC)",
			"netTotalOc": "Total(Net OC)",
			"yesNoDialogQuestion": "Do you want to update controlling for items?",
			"accountAssignmentGridTitle": "Account Assignment",
			"accountAssignmentFormTitle": "Account Assignment Detail",
			"EntityItemNO": "Item No.",
			"EntityInvoiceBreakdownPercent": "Invoice Breakdown in %",
			"EntityInvoiceBreakdownAmount": "Invoice Breakdown Amount",
			"EntityInvoiceBreakdownAmountOc": "Invoice Breakdown Amount(OC)",
			"EntityBreakdownPercent": "Breakdown in %",
			"EntityBreakdownAmount": "Breakdown Amount",
			"EntityBreakdownAmountOc": "Breakdown Amount(OC)",
			"EntityBasCompanyYearFk": "Budget Year",
			"EntityMdcControllingUnitFk": "Controlling Unit",
			"EntityPreviousInvoicesAmount": "Previous Invoices",
			"EntityPreviousInvoicesAmountOc": "Previous Invoices(OC)",
			"AccountAssignmentInvoiceBreakdownPercentError": "The Invoice Total Percent is Not 100%.",
			"AccountAssignmentBreakdownPercentError": "The Total Percent is Not 100%.",
			"toolbarNewByCopy": "New (derived from selected record)",
			"entityIsAssetmanagement": "Is Assetmanagement",
			"toolbarCorrectInvoiceCancel": "Cancel",
			"toolbarCorrectInvoiceCorrect": "Correct",
			"correctSuccess": "Invoice {{code}} is created.",
			"toolbarCorrect": "Correct",
			"entityCompanyDeferralType": "Company Deferral Type",
			"entityDateDeferralStart": "Date Deferral Start",
			"entityAssetNo": "Asset No.",
			"entityDocumentNo": "Document No.",
			"ExpirationDate": "Expiration Date",
			"accrualGridContainerTitle": "Accruals",
			"accrualDetailContainerTitle": "Accrual Detail",
			"entityIsOverPayment": "Is Over Payment",
			"entityCo2Project": "CO2/kg (Project)",
			"entityCo2ProjectTotal": "CO2/kg (Project Total)",
			"entityCo2SourceTotal": "CO2/kg (Source Total)",
			"entityCo2Source": "CO2/kg (Source)",
			"entityLineReference": "Line Reference",
			"account": "Account",
			"accountDesc": "Account Description",
			"entityNominalAccountDesc": "Nominal Account Description",
			"entityNominalAccountFiDesc": "Nominal Account Fi Description",
			"entityJob": "Job",
			"entityMdcSalesTaxGroup": "Sales Tax Group",
			"quantityMorThanZero": "Quantity should be more than zero"
		}
	}
}