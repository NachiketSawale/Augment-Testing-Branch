/*
 * Copyright(c) RIB Software GmbH
 * ----------------------------------------------------------------------
 * This is auto-generated code by ClientTSInterfaceLookupHelperGenerator.
 * ----------------------------------------------------------------------
 * This code was generated by RIB Model Generator tool.
 *
 * Changes to this file may cause incorrect behavior and will be lost if
 * the code is regenerated.
 * ----------------------------------------------------------------------
 */

import { LazyInjectionToken } from '@libs/platform/common';
import { ICommonLookupOptions, TypedConcreteFieldOverload } from '@libs/ui/common';
import { IProjectMainLookupProvider } from '../project-lookup-provider.interface';

export interface IProjectMainLookupProviderGenerated {
	/**
	* Generates a lookup field overload definition to pick a Project.
	*
	* @param options The options to apply to the lookup
	*
	* @returns The lookup field overload.
	*/
	provideProjectLookupOverload<T extends object>(options?: ICommonLookupOptions): TypedConcreteFieldOverload<T>;
	/**
	* Generates a lookup field overload definition to read a Project.
	*
	* @returns The lookup field overload.
	*/
	provideProjectReadonlyLookupOverload<T extends object>(options?: ICommonLookupOptions): TypedConcreteFieldOverload<T>;

}
export const PROJECT_MAIN_LOOKUP_PROVIDER_TOKEN = new LazyInjectionToken<IProjectMainLookupProvider>('project.main.LookupProvider');