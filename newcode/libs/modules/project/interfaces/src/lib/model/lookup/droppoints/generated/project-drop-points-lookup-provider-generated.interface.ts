/*
 * Copyright(c) RIB Software GmbH
 * ----------------------------------------------------------------------
 * This is auto-generated code by ClientTSInterfaceLookupHelperGenerator.
 * ----------------------------------------------------------------------
 * This code was generated by RIB Model Generator tool.
 *
 * Changes to this file may cause incorrect behavior and will be lost if
 * the code is regenerated.
 * ----------------------------------------------------------------------
 */

import { IProjectDropPointsLookupProvider } from '../project-drop-points-lookup-provider.interface';
import { LazyInjectionToken } from '@libs/platform/common';
import { ICommonLookupOptions, TypedConcreteFieldOverload } from '@libs/ui/common';

export interface IProjectDropPointsLookupProviderGenerated {
	/**
	* Generates a lookup field overload definition to pick a DropPoint.
	* 
	* @param options The options to apply to the lookup
	* 
	* @returns The lookup field overload.
	*/
	provideDropPointLookupOverload<T extends object>(options?: ICommonLookupOptions): TypedConcreteFieldOverload<T>;
	/**
	* Generates a lookup field overload definition to read a DropPoint.
	* 
	* @returns The lookup field overload.
	*/
	provideDropPointReadonlyLookupOverload<T extends object>(options?: ICommonLookupOptions): TypedConcreteFieldOverload<T>;
	/**
	* Generates a lookup field overload definition to pick a DropPointArticles.
	* 
	* @param options The options to apply to the lookup
	* 
	* @returns The lookup field overload.
	*/
	provideDropPointArticlesLookupOverload<T extends object>(options?: ICommonLookupOptions): TypedConcreteFieldOverload<T>;
	/**
	* Generates a lookup field overload definition to read a DropPointArticles.
	* 
	* @returns The lookup field overload.
	*/
	provideDropPointArticlesReadonlyLookupOverload<T extends object>(options?: ICommonLookupOptions): TypedConcreteFieldOverload<T>;
}
export const PROJECT_DROP_POINTS_LOOKUP_PROVIDER_TOKEN = new LazyInjectionToken<IProjectDropPointsLookupProvider>('project.droppoints.LookupProvider');