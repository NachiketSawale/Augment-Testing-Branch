/*
 * Copyright(c) RIB Software GmbH
 */

import { prefixAllTranslationKeys } from '@libs/platform/common';

export class SalesCommonLabels{
    public static getSalesCommonLabels() {
        return {
            ...prefixAllTranslationKeys('sales.common.', {
                RubricCategoryFk: { key: 'entityRubricCategoryFk', text: 'Rubric Category' },
                customerData: { key: 'customerData', text: 'Customer Data' },
                paymentData: { key: 'paymentData', text: 'Payment Data' },
                datesData: { key: 'datesData', text: 'Dates' },
                otherData: { key: 'otherData', text: 'Other' },
                userDefDates: { key: 'userDefDates', text: 'User Defined Dates' },
                CompanyFk: { key: 'entityCompanyFk', text: 'Company' },
                CompanyResponsibleFk: { key: 'entityCompanyResponsibleFk', text: 'Company Responsible' },
                ProjectFk: { key: 'entityProjectFk', text: 'Project' },
                PriceFixingDate: { key: 'entityPriceFixingDate', text: 'Price Fixing Date' },
                PlannedStart: { key: 'entityPlannedStart', text: 'Planned Start' },
                PlannedEnd: { key: 'entityPlannedEnd', text: 'Planned End' },
                PerformedFrom: { key: 'entityPerformedFrom', text: 'Performed From' },
                PerformedTo: { key: 'entityPerformedTo', text: 'Performed To' },
                LanguageFk: { key: 'entityLanguageFk', text: 'Language' },
                CurrencyFk: { key: 'entityCurrencyFk', text: 'Currency' },
                ExchangeRate: { key: 'entityExchangeRate', text: 'Exchange Rate' },
                ClerkFk: { key: 'entityClerkFk', text: 'Clerk' },
                EstimationCode: { key: 'entityEstimationHeader', text: 'Estimate Code' },
                EstimationDescription: { key: 'entityEstimationDesc', text: 'Estimate Desc.' },
                BusinesspartnerFk: { key: 'entityBusinesspartnerFk', text: 'Businesspartner' },
                SubsidiaryFk: { key: 'entitySubsidiaryFk', text: 'Subsidiary' },
                CustomerFk: { key: 'entityCustomerFk', text: 'Customer' },
                BillingSchemaFk: { key: 'entityBillingSchemaFk', text: 'Billing Schema' },
                PaymentTermFiFk: { key: 'entityPaymentTermFiFk', text: 'Payment Term (Fi)' },
                PaymentTermPaFk: { key: 'entityPaymentTermPaFk', text: 'Payment Term (Pa)' },
                PaymentTermAdFk: { key: 'entityPaymentTermAdFk', text: 'Payment Term (Ad)' },
                BlobsSalutationFk: { key: 'entityBlobsSalutationFk', text: 'Salutation' },
                BlobsHeaderFk: { key: 'entityBlobsHeaderFk', text: 'Header' },
                BlobsFooterFk: { key: 'entityBlobsFooterFk', text: 'Footer' },
                BlobsSubjectFk: { key: 'entityBlobsSubjectFk', text: 'Subject' },
                BlobsReferenceFk: { key: 'entityBlobsReferenceFk', text: 'Reference' },
                BlobsOffereeFk: { key: 'entityBlobsOffereeFk', text: 'Offeree' },
                ContractTypeFk: { key: 'entityContracttypeFk', text: 'Contract Type' },
                OrdConditionFk: { key: 'entityOrdConditionFk', text: 'Contractual Condition' },
                TaxCodeFk: { key: 'entityTaxCodeFk', text: 'Tax Code' },
                PrjChangeFk : { key: 'entityPrjChange', text: 'Project Change'},
                PrjChangeStatusFk : { key: 'entityPrjChangeStatus', text: 'Project Change-Status'},
                ChangeOrderFk : { key: 'entityChangeOrder', text: 'Change Order'},
                ChangeOrderStatusFk : { key: 'entityChangeOrderStatus', text: 'Change Order-Status'},
                PrcStructureFk: { key: 'entityPrcStructureFk', text: 'Procurement Structure' },
                ControllingUnitFk: { key: 'entityControllingUnitFk', text: 'Controlling Unit' },
                OrdHeaderFk: { key: 'entityOrdHeaderFk', text: 'Contract' },
                TextType: { key: 'entityTextType', text: 'Text Type' },
                Remark: { key: 'entityRemark', text: 'Remark' },
                CommentText: { key: 'entityCommentText', text: 'CommentText' },
                SalesDocumentTypeFk: { key: 'document.salesDocumentTypeFk', text: 'Sales Document Type' },
                BusinesspartnerBilltoFk: {key: 'entityBusinesspartnerBilltoFk', text: '#Bill to Businesspartner'},
                ContactBilltoFk: {key: 'entityContactBilltoFk', text: '#Bill to Contact'},
                SubsidiaryBilltoFk: {key: 'entitySubsidiaryBilltoFk', text: 'Branch (Payer)'},
                CustomerBilltoFk: {key: 'entityCustomerBilltoFk', text: 'Customer (Payer)'},
                BasWarrantysecurityFk: { key: 'warranty.basWarrantySecurityFk', text: 'Warranty Security' },
                BasWarrantyobligationFk: { key: 'warranty.basWarrantyObligationFk', text: 'Warranty Obligation' },
                HandoverDate: { key: 'warranty.handOverDate', text: 'Hand Over Date' },
                DurationMonths: { key: 'warranty.durationMonths', text: 'Duration Months' },
                WarrantyEnddate: { key: 'warranty.warrantyEndDate', text: 'Warranty End Date' },
                ConfigurationFk: { key: 'entityConfigurationFk', text: 'Configuration'},
                SalesDateKindFk: {  key: 'milestone.entitySalesDateKind', text: 'Sales Date Kind' },
                SalesDateTypeFk: {  key: 'milestone.entitySalesDateType', text: 'Sales Date Type' },
                MilestoneDate: {  key: 'milestone.entityMilestoneDate', text: 'Milestone Date' },
                MilestoneDateOrg: {  key: 'milestone.entityMilestoneDateOrg', text: 'Milestone Date Org' },
                MdcSalesTaxGroupFk: {  key: 'entityMdcSalesTaxGroup', text: 'Sales Tax Group'},
                UserDefinedDate01: { key: 'entityUserDefinedDate', params: { 'p_0': '1' }, text: 'User Defined Date 1' },
                UserDefinedDate02: { key: 'entityUserDefinedDate', params: { 'p_0': '2' }, text: 'User Defined Date 2' },
                UserDefinedDate03: { key: 'entityUserDefinedDate', params: { 'p_0': '3' }, text: 'User Defined Date 3' },
                UserDefinedDate04: { key: 'entityUserDefinedDate', params: { 'p_0': '4' }, text: 'User Defined Date 4' },
                UserDefinedDate05: { key: 'entityUserDefinedDate', params: { 'p_0': '5' }, text: 'User Defined Date 5' },
            }),
            ...prefixAllTranslationKeys('cloud.common.', {
                DocumentTypeFk: {key: 'entityType', text: 'Document Type'},
                DocumentDate: { key: 'entityDate', text: 'Date' },
                OriginFileName: {key: 'documentOriginFileName', text: 'Document Origin File Name' },
                Description: { key: 'entityDescription', text: 'Description' },
                UserDefinedText1: { key: 'entityUserDefinedText', text: 'entityUserDefinedText', params: {'p_0': '1'} },
                UserDefinedText2: { key: 'entityUserDefinedText', text: 'entityUserDefinedText', params: {'p_0': '2'} },
                UserDefinedText3: { key: 'entityUserDefinedText', text: 'entityUserDefinedText', params: {'p_0': '3'} },
                UserDefinedText4: { key: 'entityUserDefinedText', text: 'entityUserDefinedText', params: {'p_0': '4'} },
                UserDefinedText5: { key: 'entityUserDefinedText', text: 'entityUserDefinedText', params: {'p_0': '5'} },
                UserDefinedDate1: { key: 'entityUserDefinedDate', text: 'entityUserDefinedDate', params: {'p_0': '1'} },
                UserDefinedDate2: { key: 'entityUserDefinedDate', text: 'entityUserDefinedDate', params: {'p_0': '2'} },
                UserDefinedDate3: { key: 'entityUserDefinedDate', text: 'entityUserDefinedDate', params: {'p_0': '3'} },
                UserDefinedDate4: { key: 'entityUserDefinedDate', text: 'entityUserDefinedDate', params: {'p_0': '4'} },
                UserDefinedDate5: { key: 'entityUserDefinedDate', text: 'entityUserDefinedDate', params: {'p_0': '5'} },
                UserDefined1: { key: 'entityUserDefined', params: { 'p_0': '1' }, text: 'User Defined 1' },
                UserDefined2: { key: 'entityUserDefined', params: { 'p_0': '2' }, text: 'User Defined 2' },
                UserDefined3: { key: 'entityUserDefined', params: { 'p_0': '3' }, text: 'User Defined 3' },
                UserDefined4: { key: 'entityUserDefined', params: { 'p_0': '4' }, text: 'User Defined 4' },
                UserDefined5: { key: 'entityUserDefined', params: { 'p_0': '5' }, text: 'User Defined 5' },
                UserDefinedNumber1: { key: 'entityUserDefinedNumber1', text: 'User Defined Number 1'},
                UserDefinedNumber2: { key: 'entityUserDefinedNumber2', text: 'User Defined Number 2'},
                UserDefinedNumber3: { key: 'entityUserDefinedNumber3', text: 'User Defined Number 3'},
                UserDefinedNumber4: { key: 'entityUserDefinedNumber4', text: 'User Defined Number 4'},
                UserDefinedNumber5: { key: 'entityUserDefinedNumber5', text: 'User Defined Number 5'},
                MdcTaxCodeFk: { key: 'entityTaxCode', text: 'entityTaxCode'},
                Amount: { key: 'entityAmount', text: 'entityAmount'},
            }),
            ...prefixAllTranslationKeys('basics.billingschema.', {
                Factor: { key: 'factor', text: 'Factor'},
                CostLineTypeFk: {  key: 'costLineTypeFk', text: 'Cost Line Type' },
                IsNetAdjusted: { key: 'entityIsNetAdjusted', text: 'Net Adjusted'},
            }),
            ...prefixAllTranslationKeys('object.main.', {
                ObjUnitFk: { key: 'entityUnitFk', text: 'Unit' },
            }),
            ...prefixAllTranslationKeys('basics.customize.', {
                VatGroupFk: { key: 'vatgroupfk', text: 'VAT Group' },
            })
        }; 
    }
}

