/*
 * Copyright(c) RIB Software GmbH
 */

import { prefixAllTranslationKeys } from '@libs/platform/common';

export class SalesBillingLabels{
    public static getSalesBillingLabels() {
        return {
            ...prefixAllTranslationKeys('sales.billing.', {
                TypeFk: { key: 'entityBillTypeFk', text: 'Type'},
                BilStatusFk: { key: 'entityBilStatusFk', text: 'Billing Status'},
                BillDate: { key: 'entityBillDate', text: 'Bill Date'},
                DatePosted: { key: 'entityPostingDate', text: 'Posting Date'},
                InvoiceTypeFk: { key: 'entityInvoiceTypeFk', text: 'Invoice Type'},
                BillNo: { key: 'entityBillNo', text: 'BillNo'},
                ConsecutiveBillNo: { key: 'entityConsecutiveBillNo', text: 'Consecutive Bill No.'},
                ProgressInvoiceNo: { key: 'entityProgressInvoiceNo', text: 'Progress Invoice'},
                FinalGroup: { key: 'entityFinalGroupNo', text: 'Final Invoice Group'},
                BlobsBillToPartyFk: { key: 'entityBlobsBillToPartyFk', text: 'Bill To Party'},
                IsCanceled: { key: 'entityIsCanceled', text: 'Is Canceled'},
                CancellationNo: { key: 'entityCancellationNo', text: 'Cancellation No'},
                CancellationReason: { key: 'entityCancellationReason', text: 'Cancellation Reason'},
                CancellationDate: { key: 'entityCancellationDate', text: 'Cancellation Date'},
                BookingText: { key: 'entityBookingText', text: 'Booking Text'},
                IsNotAccrual: { key: 'entityIsNotAccrual', text: 'Is not accrual'},
                MessageFk: { key: 'message', text: 'Message'},
                Parameter1: { key: 'parameter1', text: 'Parameter 1'},
                Parameter2: { key: 'parameter2', text: 'Parameter 2'},
                Parameter3: { key: 'parameter3', text: 'Parameter 3'},
                Message: { key: 'message', text: 'Message'},
                VoucherDate: { key: 'entityBillDate', text: 'Bill Date'},
                PaymentScheduleCode: { key: 'paymentSchedule', text: 'Payment Schedule'},
                AmountTotal: { key: 'amountTotal', text: '"Total Payment'},
                DiscountAmountTotal: { key: 'discountAmountTotal', text: 'Total Payment Discount'},
                PreviousBillFk: { key: 'entityPreviousBillFk', text: 'Previous Bill'},
                RelatedBillHeaderFk: { key: 'entityRelatedBillHeaderFk', text: 'Reference Bill'},
                ReferenceStructured: { key: 'entityReferenceStructured', text: 'Reference Structured'},
                AccountReceiveable: { key: 'accountReceiveable', text: 'Account Receiveable'},
                Debtor: { key: 'debtor', text: 'Debtor'},
                AmountNet: { key: 'entityAmountNet', text: 'Net Amount'},
                AmountGross: { key: 'entityAmountGross', text: 'Gross Amount'},
                AmountVat: { key: 'entityAmountVat', text: 'VAT Amount'},
                AmountNetOc: { key: 'entityAmountNetOc', text: 'Net Amount Oc'},
                AmountGrossOc: { key: 'entityAmountGrossOc', text: 'Gross Amount Oc'},
                Assetno: { key: 'AssetNo', text: 'Asset No'},
                DebtorGroup: { key: 'debtorGroup', text: 'Debtor Group'},
                PriceOc: { key: 'entityPriceOC', text: 'Price OC'},
                DateDiscount: { key: 'entityDateDiscount', text: 'Discount Date'},
                DateNetpayable: { key: 'entityDateNetpayable', text: 'Net Payable'},
                NominalAccountFi: { key: 'entityNominalAccountFi', text: 'Nominal Account Fi'},
                LineNo: { key: 'lineNo', text: 'Line No'},
                BilItemDescription: { key: 'bilItemDesc', text: 'Billing Item Description'},
                IsDeficitDjcRisk: { key: 'entityIsDeficitDjcRisk', text: 'Direct Job Costs (DJC) Risk'},
                IsDeficitGcRisk: { key: 'entityIsDeficitGcRisk', text: 'General Costs (GC) Risk'},
                IsDeficitDjcProfit: { key: 'entityIsDeficitDjcProfit', text: 'Direct Job Costs (DJC) Profit'},
                IsDeficitGcProfit: { key: 'entityIsDeficitGcProfit', text: 'General Costs (GC) Profit'},
                IsSurplusGcOnly: { key: 'entityIsSurplusGcOnly', text: 'General Costs only'},
                CalculationBase: { key: 'entityCalculationBase', text: 'Calculation Base'}, // TODO:
                AdminGeneralPercentage: { key: 'entityAdminGeneralPercentage', text: 'General and Administrative Costs [%]'},
                RiskPercentage: { key: 'entityRiskPercentage', text: 'Risk [%]'},
                ProfitPercentage: { key: 'entityProfitPercentage', text: 'Profit [%]'},
                IsLowerLimitStrdBaseAlternItem: { key: 'entityIsLowerLimitStrdBaseAlternItem', text: 'BQ Quantity <'},
                LowerLimitStrdBaseAlternItem: { key: 'entityLowerLimitStrdBaseAlternItem', text: 'WQ Quantity *'},
                IsUpperLimitStrdBaseAlternItem: { key: 'entityIsUpperLimitStrdBaseAlternItem', text: 'BQ Quantity >'},
                UpperLimitStrdBaseAlternItem: { key: 'entityUpperLimitStrdBaseAlternItem', text: 'WQ Quantity *'},
                IsLowerLimitPrjChgItem: { key: 'entityIsLowerLimitPrjChgItem', text: 'BQ Quantity <'},
                LowerLimitPrjChgItem: { key: 'entityLowerLimitPrjChgItem', text: 'WQ Quantity *'},
                IsUpperLimitPrjChgItem: { key: 'entityIsUpperLimitPrjChgItem', text: 'BQ Quantity >'},
                UpperLimitPrjChgItem: { key: 'entityUpperLimitPrjChgItem', text: 'WQ Quantity *'},
                IsBalanceBoqItemTypeOptional: { key: 'entityIsBalanceBoqItemTypeOptional', text: 'Optional Items'},
                IsBalanceBoqItemType2BaseAlt: { key: 'entityIsBalanceBoqItemType2BaseAlt', text: 'Alternative/Postponed Base Items'},
                IsBalanceBoqItemTypeDwtmItem: { key: 'entityIsBalanceBoqItemTypeDwtmItem', text: 'DW/T+M Items'},
                IsBalanceBoqItemPrjChg: { key: 'entityIsBalanceBoqItemPrjChg', text: 'Change Order Items'},
                decreasedMargins: { key: 'groupDecreasedMargins', text: 'Decreased Margins'},
                increasedMargins: { key: 'groupIncreasedMargins', text: 'Increased Margins'},
                markups: { key: 'groupMarkups', text: 'Markups'},
                standardAwardedBaseAlternativeItems: { key: 'groupStandardAwardedBaseAlternativeItems', text: 'Standard and Awarded Base/Alternative Items'},
                changeOrderItems: { key: 'groupChangeOrderItems', text: 'Change Order Items'},
                specialBalancing: { key: 'groupSpecialBalancing', text: 'Special Balancing for'},
                CompanyIcDebtorFk: { key: 'iCCompanyCustomer', text: 'IC Company Customer'},
                BasSalesTaxMethodFk: { key: 'entityBasSalesTaxMethodFk', text: 'Sales Tax Method'},
                LiPreviousQuantity: { key: 'LiPreviousQuantity', text: 'Previous Quantity'},
                LiQuantity: { key: 'LiQuantity', text: 'Installed Quantity'},
                LiBilledQuantity: { key: 'LiBilledQuantity', text: 'Billed Quantity'},
                LiTotalQuantity: { key: 'LiTotalQuantity', text: 'Total Quantity'},
                LiPercentageQuantity: { key: 'LiPercentageQuantity', text: 'Percentage Quantity'},
                LiCumulativePercentage: { key: 'LiCumulativePercentage', text: 'Cumulative Percentage'},
                IsDiverseDebitorsAllowed: { key: 'DiverseDebitorsAllowed', text: 'DivDeb'},
                IsContractRelated: { key: 'IsContractRelated', text: 'ICS'},
            }),
            ...prefixAllTranslationKeys('procurement.invoice.', {
                DocumentType: { key:'transaction.documentType', text: 'Document Type'},
                Documentno: { key:'entityDocumentNo', text: 'Document No.'},
                LineType: { key:'transaction.lineType', text: 'Line Type'},
                Currency: { key:'transaction.currency', text: 'Currency'},
                VoucherNumber: { key:'transaction.voucherNumber', text: 'Voucher Number'},
                PostingNarritive: { key:'transaction.postingNarritive', text: 'Posting Narritive'},
                PostingDate: { key:'transaction.postingDate', text: 'Posting Date'},
                NetDuedate: { key:'transaction.netDuedate', text: 'Net Due Date'},
                DiscountDuedate: { key:'transaction.discountDueDate', text: 'Discount Due Date'},
                DiscountAmount: { key:'transaction.discountAmount', text: 'Discount Amount'},
                BusinesspostingGroup: { key:'transaction.businesspostingGroup', text: 'Businessposting Group'},
                NominalAccount: { key:'transaction.nominalAccount', text: 'Nominal Account'},
                Amount: { key:'transaction.amount', text: 'Amount'},
                IsDebit: { key:'transaction.isdebit', text: 'Is Debit'},
                VatAmount: { key:'transaction.vatAmount', text: 'Vat Amount'},
                VatCode: { key:'transaction.vatCode', text: 'Vat Code'},
                IsProgress: { key:'transaction.isprogress', text: 'Is Progress'},
                OrderNumber: { key:'transaction.orderNumber', text: 'Order Number'},
                AmountAuthorized: { key:'transaction.amountAuthorized', text: 'Amount Authorized'},
                ControllingUnitCode: { key:'transaction.controllingUnitCode', text: 'Controlling Unit Code'},
                ControllingUnitAssign01: { key:'transaction.controllingUnitAssign01', text: 'Controlling Unit Assign01'},
                ControllingUnitAssign02: { key:'transaction.controllingUnitAssign02', text: 'Controlling Unit Assign02'},
                ControllingUnitAssign03: { key:'transaction.controllingUnitAssign03', text: 'Controlling Unit Assign03'},
                ControllingUnitAssign04: { key:'transaction.controllingUnitAssign04', text: 'Controlling Unit Assign04'},
                ControllingUnitAssign05: { key:'transaction.controllingUnitAssign05', text: 'Controlling Unit Assign05'},
                ControllingUnitAssign06: { key:'transaction.controllingUnitAssign06', text: 'Controlling Unit Assign06'},
                ControllingUnitAssign07: { key:'transaction.controllingUnitAssign07', text: 'Controlling Unit Assign07'},
                ControllingUnitAssign08: { key:'transaction.controllingUnitAssign08', text: 'Controlling Unit Assign08'},
                ControllingUnitAssign09: { key:'transaction.controllingUnitAssign09', text: 'Controlling Unit Assign09'},
                ControllingUnitAssign10: { key:'transaction.controllingUnitAssign10', text: 'Controlling Unit Assign10'},
                ControllingunitAssign01desc: { key:'transaction.controllingUnitAssign01Desc', text: 'Controlling Unit Assign01 Description'},
                ControllingunitAssign02desc: { key:'transaction.controllingUnitAssign02Desc', text: 'Controlling Unit Assign02 Description'},
                ControllingunitAssign03desc: { key:'transaction.controllingUnitAssign03Desc', text: 'Controlling Unit Assign03 Description'},
                ControllingunitAssign04desc: { key:'transaction.controllingUnitAssign04Desc', text: 'Controlling Unit Assign04 Description'},
                ControllingunitAssign05desc: { key:'transaction.controllingUnitAssign05Desc', text: 'Controlling Unit Assign05 Description'},
                ControllingunitAssign06desc: { key:'transaction.controllingUnitAssign06Desc', text: 'Controlling Unit Assign06 Description'},
                ControllingunitAssign07desc: { key:'transaction.controllingUnitAssign07Desc', text: 'Controlling Unit Assign07 Description'},
                ControllingunitAssign08desc: { key:'transaction.controllingUnitAssign08Desc', text: 'Controlling Unit Assign08 Description'},
                ControllingunitAssign09desc: { key:'transaction.controllingUnitAssign09Desc', text: 'Controlling Unit Assign09 Description'},
                ControllingunitAssign10desc: { key:'transaction.controllingUnitAssign10Desc', text: 'Controlling Unit Assign10 Description'},
                ControllingUnitAssign01Comment: { key:'transaction.controllingUnitAssign01Comment', text: 'Controlling Unit Assign01 Comment'},
                ControllingUnitAssign02Comment: { key:'transaction.controllingUnitAssign02Comment', text: 'Controlling Unit Assign02 Comment'},
                ControllingUnitAssign03Comment: { key:'transaction.controllingUnitAssign03Comment', text: 'Controlling Unit Assign03 Comment'},
                ControllingUnitAssign04Comment: { key:'transaction.controllingUnitAssign04Comment', text: 'Controlling Unit Assign04 Comment'},
                ControllingUnitAssign05Comment: { key:'transaction.controllingUnitAssign05Comment', text: 'Controlling Unit Assign05 Comment'},
                ControllingUnitAssign06Comment: { key:'transaction.controllingUnitAssign06Comment', text: 'Controlling Unit Assign06 Comment'},
                ControllingUnitAssign07Comment: { key:'transaction.controllingUnitAssign07Comment', text: 'Controlling Unit Assign07 Comment'},
                ControllingUnitAssign08Comment: { key:'transaction.controllingUnitAssign08Comment', text: 'Controlling Unit Assign08 Comment'},
                ControllingUnitAssign09Comment: { key:'transaction.controllingUnitAssign09Comment', text: 'Controlling Unit Assign09 Comment'},
                ControllingUnitAssign10Comment: { key:'transaction.controllingUnitAssign10Comment', text: 'Controlling Unit Assign10 Comment'},
                IsSuccess: { key:'transaction.issuccess', text: 'Is Success'},
                TransactionId: { key:'transaction.transactionId', text: 'transactionId'},
                HandoverId: { key:'transaction.handoverId', text: 'HandoverId'},
                ReturnValue: { key:'transaction.returnValue', text: 'Return Value'},
                NominalDimension: { key:'transaction.nominalDimension', text: 'Nominal Dimension'},
                NominalDimension2: { key:'transaction.nominalDimension2', text: 'Nominal Dimension2'},
                NominalDimension3: { key:'transaction.nominalDimension3', text: 'Nominal Dimension3'},
                PostingType: { key:'group.postingtype', text: 'Posting Type'},
                CodeRetention: { key:'header.codeRetention', text: 'Code Retention'},
                PaymentTermFk: { key:'header.paymentTerm', text: 'Payment Term'},
                DocumentNo: { key:'entityDocumentNo', text: 'Document No.'},
                ControllingUnitIcFk: { key:'transaction.controllingUnitIc', text: 'Clearing Controlling Unit'},
                ICInvHeaderCode: { key:'iCInvoiceNo', text: 'IC Invoice No.'},
                LineReference: { key: 'entityLineReference', text: 'Line Reference'}
            }),
            ...prefixAllTranslationKeys('procurement.common.', {
                ItemNo: { key: 'prcItemItemNo', text: 'Item No'},
                Description1: { key: 'prcItemDescription1', text: 'Description1'},
                Description2: { key: 'prcItemDescription2', text: 'Description2'},
                MdcMaterialFk: { key: 'prcItemMaterialNo', text: 'Material No'},
                TaxCodeMatrixCode: { key: 'transaction.taxcodematrix', text: 'Tax Code Matrix'},
                ItemReference: { key: 'transaction.entityItemreference', text: 'Item reference'},
                ExtOrderNo: { key: 'orderNo', text: 'Order No'},
                TotalPrice: { key: 'prcItemTotalPrice', text: 'Total Price'},
                TotalPriceOc: { key: 'prcItemTotalPriceCurrency', text: 'Total Price(OC)'},
                PriceGross: { key: 'priceGross', text: 'Price Gross'},
                PriceGrossOc: { key: 'priceOcGross', text: 'Price Gross (Oc)'},
                TotalPriceGross: { key: 'totalPriceGross', text: 'Total Price Gross'},
                TotalPriceGrossOc: { key: 'totalPriceGrossOc', text: 'Total Price Gross (OC)'},
                TotalOc: { key: 'prcItemTotalCurrency', text: 'prcItemTotalCurrency'},
                TotalGross: { key: 'totalGross', text: 'Total (Gross)'},
                TotalGrossOc: { key: 'totalOcGross', text: 'Total Gross (Oc)'},
                VatGroupFk: { key: 'entityVatGroup', text: 'Vat Group'},
                PriceExtra: { key: 'prcItemPriceExtras', text: 'prcItemPriceExtras'},
                PriceExtraOc: { key: 'prcItemPriceExtrasCurrency', text: 'prcItemPriceExtrasCurrency'},
            }),
            ...prefixAllTranslationKeys('cloud.common.', {
                Quantity: { key: 'entityQuantity', text: 'Quantity'},
                UomFk: { key: 'entityUoM', text: 'UoM'},
                Specification: { key: 'EntitySpec', text: 'Specification'},
                CostCodeFk: { key: 'entityCostCode', text: 'Cost Code'},
                Price: { key: 'entityPrice', text: 'Price'},
                TaxCodeFk: { key: 'entityTaxCode', text: 'Tax Code'},
                ControllinggrpsetFk: { key: 'entityControllinggrpset', text: 'Controlling grp set'},
                BillingSchemaFk: { key: 'entityBillingSchema', text: 'Billing Schema'},
                baseGroup: { key: 'entityProperties', text: 'Basic Data'},
                Total: { key: 'entityTotal', text: 'entityTotal'},
                Brief: { key: 'entityBrief', text: 'Brief'},
            }),
            ...prefixAllTranslationKeys('sales.common.', {
                PrjChangeFk : { key: 'entityChangeOrder', text: 'Change Order'},
                PrjChangeStatusFk : { key: 'entityChangeOrderStatus', text: 'Change Order-Status'},
            }),
            ...prefixAllTranslationKeys('basics.billingschema.', {
                CredFactor: { key: 'credFactor', text: 'Cred Factor'},
                DebFactor: { key: 'debFactor', text: 'Deb Factor'},
                DetailAuthorAmountFk: { key: 'billingschmdtlaafk', text: 'Author.Amount Ref'},
                BillingSchemaDetailTaxFk: { key: 'billingSchmDtlTaxFk', text: 'Tax Ref'},
                CredLineTypeFk: { key: 'creditorlinetype', text: 'Treatment Cred'},
                DebLineTypeFk: { key: 'debitorlinetype', text: 'Treatment Deb'},
            }),
            ...prefixAllTranslationKeys('basics.customize.', {
                MessageseverityFk: { key: 'messageseverityfk', text: 'Message Severity'},
                BankTypeFk: { key: 'banktype', text: 'Bank Type'},
            }),
            ...prefixAllTranslationKeys('cloud.common.', {
                Code: { key: 'entityCode', text: 'Code'},
                PackageStatusFk: { key: 'entityState', text: 'State'},
                CompanyFk: { key: 'entityCompany', text: 'Company'},
                ProjectFk: { key: 'entityProjectNo', text: 'ProjectNo'},
                Description: { key: 'entityDescription', text: 'description'},
                TaxCodeFk: { key: 'entityTaxCode', text: 'TaxCode'},
                CurrencyFk: { key: 'entityCurrency', text: 'Currency'},
                ExchangeRate: { key: 'entityRate', text: 'entityRate'},
                ClerkPrcFk: { key: 'entityResponsible', text: 'Responsible'},
                ClerkReqFk: { key: 'entityRequisitionOwner', text: 'Requisition Owner'},
                Remark: { key: 'entityRemark', text: 'Remark'},
                BusinessPartnerFk: { key: 'entityBusinessPartner', text: 'Business Partner'},
                SubsidiaryFk: { key: 'entitySubsidiary', text: 'Subsidiary'},
                SupplierFk: { key: 'entitySupplier', text: 'Supplier'},
                CountryFk: { key: 'entityCountry', text: 'Country'},
                TelephoneNumberFk: { key: 'TelephoneDialogPhoneNumber', text: 'Telephone Number'},
                TelephoneTelefaxFk: { key: 'fax', text: 'Telephone Telefax'},
                Email: { key: 'email', text: 'Email'},
                DescriptionInfo: { key: 'entityDescription', text: 'Description'},
                userDefText: { key: 'UserdefTexts', text: 'User Defined Text' },
                Reference: { key: 'entityReference', text: 'Reference' },
                BriefInfo: { key: 'entityBriefInfo', text: 'Outline Specification' },
                BasUomFk: { key: 'entityUoM', text: 'UoM' },
                BasCurrencyFk: { key: 'entityCurrency', text: 'Currency' },
                UoMFk: { key: 'entityUoM', text: 'UoM' },
                UomFk: { key: 'entityUoM', text: 'UoM' },
                Quantity:{ key: 'entityQuantity', text: 'Quantity' },
                Sorting : { key: 'entitySorting', text: 'Sorting'},
                package: { key: 'entityPackage', text: 'Package' },
                AddressEntity: { key: 'entityDeliveryAddress', text: 'entityDeliveryAddress'},
                MdcTaxCodeFk: { key: 'entityTaxCode', text: 'Tax Code' },
                TaxCodeDescription: { key: 'entityTaxCodeDescription', text: 'Tax Code Description' },
                ControllingUnitDescription: { key: 'entityControllingUnitDesc', text: 'Controlling Unit Description' },
                EstStatusFk: { key: 'entityStatus', text: 'Status'},
                UserDefined1: { key: 'entityUserDefined', params: { 'p_0': '1' }, text: 'User Defined 1' },
                UserDefined2: { key: 'entityUserDefined', params: { 'p_0': '2' }, text: 'User Defined 2' },
                UserDefined3: { key: 'entityUserDefined', params: { 'p_0': '3' }, text: 'User Defined 3' },
                UserDefined4: { key: 'entityUserDefined', params: { 'p_0': '4' }, text: 'User Defined 4' },
                UserDefined5: { key: 'entityUserDefined', params: { 'p_0': '5' }, text: 'User Defined 5' },
                UserDefinedDate1: { key: 'entityUserDefinedDate', params: { 'p_0': '1' }, text: 'User Defined Date 1' },
                UserDefinedDate2: { key: 'entityUserDefinedDate', params: { 'p_0': '2' }, text: 'User Defined Date 2' },
                UserDefinedDate3: { key: 'entityUserDefinedDate', params: { 'p_0': '3' }, text: 'User Defined Date 3' },
                UserDefinedDate4: { key: 'entityUserDefinedDate', params: { 'p_0': '4' }, text: 'User Defined Date 4' },
                UserDefinedDate5: { key: 'entityUserDefinedDate', params: { 'p_0': '5' }, text: 'User Defined Date 5' },
                PrcPriceConditionFk: { key: 'entityPriceCondition', text: 'entityPriceCondition'},
            }),
            ...prefixAllTranslationKeys('estimate.main.', {
                AssetMasterFk: { key: 'mdcAssetMasterFk', text: 'Asset Master'},
                Id:{ key: 'id', text: 'Id' },
                Info:{ key: 'info', text: 'Info' },
                ProjectNo: {key: 'projectNo', text: 'Project-Number'},
                ProjectName: {key: 'projectName', text: 'Project-Name'},
                EstimationCode: { key: 'entityEstimationHeader', text: 'Estimate Code' },
                EstimationDescription: { key: 'entityEstimationDesc', text: 'Estimate Desc.' },
                Filter:{key: 'filter', text: 'Filter' },
                BasUomTargetFk:{ key: 'basUomTargetFk', text: 'UoM Target' },
                QuantityUoMFk: { key: 'quantityUoM', text: 'UoM' },
                TotalOf: { key: 'totalOf', text: 'Total of' },
                Total: { key: 'total', text: 'Total' },
                CurUoM: { key: 'curOrUoM', text: 'Cur/UoM' },
                Estimate: { key: 'estimate', text: 'Estimate' },
                ExternalCode: { key: 'ExternalCode', text: 'External Code' },
                QuantityDetail:{ key: 'quantityDetail', text: 'Quantity Detail' },
                QuantityTarget:{ key: 'quantityTarget', text: 'Quantity Target' },
                QuantityTargetDetail:{ key: 'quantityTargetDetail', text: 'Quantity Target Detail' },
                WqQuantityTarget:{ key: 'wqQuantityTarget', text: ' Wq Quantity Item' },
                QuantityUnitTarget:{ key: 'quantityUnitTarget', text: 'QuantityUnitTarget' },
                QuantityTotal:{ key: 'quantityTotal', text: 'QuantityTotal' },
                QuantityFactorDetail1:{ key: 'quantityFactorDetail1', text: 'QuantityFactorDetail1' },
                QuantityFactor1:{ key: 'quantityFactor1', text: 'QuantityFactor1' },
                QuantityFactorDetail2:{ key: 'quantityFactorDetail2', text: 'QuantityFactorDetail2' },
                QuantityFactor2:{ key: 'quantityFactor2', text: 'QuantityFactor2' },
                QuantityFactor3:{ key: 'quantityFactor3', text: 'QuantityFactor3' },
                QuantityFactor4:{ key: 'quantityFactor4', text: 'QuantityFactor4' },
                QuantityFactorCc:{ key: 'quantityFactorCc', text: 'QuantityFactorCc' },
                ProductivityFactorDetail:{ key: 'productivityFactorDetail', text: 'ProductivityFactorDetail' },
                ProductivityFactor:{ key: 'productivityFactor', text: 'ProductivityFactor' },
                QuantityReal:{ key: 'quantityReal', text: 'QuantityReal' },
                QuantityInternal:{ key: 'quantityInternal', text: 'QuantityInternal' },
                QuantityOriginal:{ key: 'quantityOriginal', text: 'QuantityOriginal' },
                EfficiencyFactorDetail1:{ key: 'efficiencyFactorDetail1', text: 'EfficiencyFactorDetail1' },
                EfficiencyFactor1:{ key: 'efficiencyFactor1', text: 'EfficiencyFactor1' },
                EfficiencyFactorDetail2:{ key: 'efficiencyFactorDetail2', text: 'EfficiencyFactorDetail2' },
                EfficiencyFactor2:{ key: 'efficiencyFactor2', text: 'EfficiencyFactor2' },
                CostFactorDetail1:{ key: 'costFactorDetail1', text: 'CostFactorDetail1' },
                CostFactor1:{ key: 'costFactor1', text: 'CostFactor1' },
                CostFactorDetail2:{ key: 'costFactorDetail2', text: 'CostFactorDetail2' },
                CostFactor2:{ key: 'costFactor2', text: 'CostFactor2' },
                CostFactorCc:{ key: 'costFactorCc', text: 'CostFactorCc' },
                MdcControllingUnitFk:{ key: 'mdcControllingUnitFk', text: 'Controlling Unit' },
                BoqRootRef: { key: 'boqRootRef', text: 'BoQ Root Item Ref. No' },
                BoqHeaderFk:{ key: 'boqHeaderFk', text: 'BoqHeader' },
                BoqItemFk:{ key: 'boqItemFk', text: 'BoqItem'},
                PsdActivitySchedule:{ key: 'activitySchedule', text: 'Activity Schedule' },
                PsdActivityFk:{ key: 'psdActivityFk', text: 'PsdActivity' },
                LicCostGroup1Fk:{ key: 'licCostGroup1Fk', text: 'LicCostGroup1' },
                LicCostGroup2Fk:{ key: 'licCostGroup2Fk', text: 'LicCostGroup2' },
                LicCostGroup3Fk:{ key: 'licCostGroup3Fk', text: 'LicCostGroup3' },
                LicCostGroup4Fk:{ key: 'licCostGroup4Fk', text: 'LicCostGroup4' },
                LicCostGroup5Fk:{ key: 'licCostGroup5Fk', text: 'LicCostGroup5' },
                PrjCostGroup1Fk:{ key: 'prjCostGroup1Fk', text: 'PrjCostGroup1' },
                PrjCostGroup2Fk:{ key: 'prjCostGroup2Fk', text: 'PrjCostGroup2' },
                PrjCostGroup3Fk:{ key: 'prjCostGroup3Fk', text: 'PrjCostGroup3' },
                PrjCostGroup4Fk:{ key: 'prjCostGroup4Fk', text: 'PrjCostGroup4' },
                PrjCostGroup5Fk:{ key: 'prjCostGroup5Fk', text: 'PrjCostGroup5' },
                MdcWorkCategoryFk:{ key: 'mdcWorkCategoryFk', text: 'MdcWorkCategory' },
                MdcAssetMasterFk:{ key: 'mdcAssetMasterFk', text: 'MdcAssetMaster' },
                PrjLocationFk:{ key: 'prjLocationFk', text: 'PrjLocation' },
                IsLumpsum:{ key: 'isLumpSum', text: 'IsLumpSum' },
                IsDisabled:{ key: 'isDisabled', text: 'IsDisabled' },
                IsGc:{ key: 'isGc', text: 'General Cost'},
                CostUnit:{ key: 'costUnit', text: 'CostUnit' },
                CostUnitTarget:{ key: 'costUnitTarget', text: 'CostUnitTarget' },
                CostTotal:{ key: 'costTotal', text: 'CostTotal' },
                CostUnitSubItem:{ key: 'costUnitSubItem', text: 'CostUnitSubItem' },
                CostUnitLineItem:{ key: 'costUnitLineItem', text: 'CostUnitLineItem' },
                HoursUnitSubItem:{ key: 'hoursUnitSubItem', text: 'HoursUnitSubItem' },
                HoursUnitLineItem:{ key: 'hoursUnitLineItem', text: 'HoursUnitLineItem' },
                CostUnitOriginal:{ key: 'costUnitOriginal', text: 'CostUnitOriginal' },
                HourFactor:{ key: 'hourFactor', text: 'HourFactor' },
                HoursUnit:{ key: 'hoursUnit', text: 'HoursUnit' },
                HoursUnitTarget:{ key: 'hoursUnitTarget', text: 'HoursUnitTarget' },
                HoursTotal:{ key: 'hoursTotal', text: 'HoursTotal' },
                EstCostRiskFk:{ key: 'estCostRiskFk', text: 'estCostRisk' },
                EstHeaderFk:{ key: 'estHeaderFk', text: 'EstHeader' },
                EstLineItemFk:{ key: 'estLineItemFk', text: 'Line Item Ref.' },
                EstAssemblyFk:{ key: 'estAssemblyFk', text: 'Assembly Template' },
                EstResourceFk:{ key: 'estResourceFk', text: 'EstResource' },
                EstResourceTypeFk:{ key: 'estResourceTypeFk', text: 'Resource Type' },
                EstResourceTypeFkExtend:{ key: 'estResourceTypeFk', text: 'Resource Type' },
                MdcCostCodeFk:{ key: 'mdcCostCodeFk', text: 'MdcCostCode' },
                MdcMaterialFk:{ key: 'mdcMaterialFk', text: 'MdcMaterial' },
                PrcPackageFk:{ key: 'prcPackageFk', text: 'PrcPackage' },
                PrcStructureFk:{ key: 'prcStructureFk', text: 'PrcStructure' },
                EstQtyRelBoqFk:{ key: 'estQtyRelBoq', text: 'Boq Qty Relation' },
                EstQtyRelActFk:{ key: 'estQtyRelAct', text: 'Act Qty Relation' },
                EstQtyRelGtuFk:{ key: 'estQtyRelGtu', text: 'Ctu Qty Relation' },
                EstQtyTelAotFk:{ key: 'estQtyRelAot', text: 'Aot Qty Relation' },
                CosInstanceCode:{ key: 'cosInstanceCode', text: 'COS Instance C' },
                CosInstanceDescription:{ key: 'cosInstanceDescription', text: 'COS Instance Desc' },
                CommentText:{ key: 'comment', text: 'Comment' },
                IsRate:{ key: 'isRate', text: 'Fix' },
                IsLabour:{ key: 'isLabour', text: 'Labour' },
                EntCostUnit:{ key: 'entCostUnit', text: 'Ent CostUnit' },
                EntCostUnitTarget:{ key: 'entCostUnitTarget', text: 'Ent CostUnitTarget' },
                EntCostTotal : { key: 'entCostTotal', text: 'Ent CostTotal'},
                EntHoursUnit:{ key: 'entHoursUnit', text: 'Ent HoursUnit' },
                EntHoursUnitTarget:{ key: 'entHoursUnitTarget', text: 'EntHoursUnitTarget' },
                EntHoursTotal : { key: 'entHoursTotal', text: 'EntHoursTotal'},
                DruCostUnit:{ key: 'druCostUnit', text: 'Dru CostUnit' },
                DruCostUnitTarget:{ key: 'druCostUnitTarget', text: 'Dru CostUnitTarget' },
                DruCostTotal : { key: 'druCostTotal', text: 'Dru CostTotal'},
                DruHoursUnit:{ key: 'druHoursUnit', text: 'Dru HoursUnit' },
                DruHoursUnitTarget:{ key: 'druHoursUnitTarget', text: 'DruHoursUnitTarget' },
                DruHoursTotal : { key: 'druHoursTotal', text: 'DruHoursTotal'},
                DirCostUnit:{ key: 'dirCostUnit', text: 'Dir CostUnit' },
                DirCostUnitTarget:{ key: 'dirCostUnitTarget', text: 'Dir CostUnitTarget' },
                DirCostTotal : { key: 'dirCostTotal', text: 'Dir CostTotal'},
                DirHoursUnit:{ key: 'dirHoursUnit', text: 'Dir HoursUnit' },
                DirHoursUnitTarget:{ key: 'dirHoursUnitTarget', text: 'DirHoursUnitTarget' },
                DirHoursTotal : { key: 'dirHoursTotal', text: 'DirHoursTotal'},
                IndCostUnit:{ key: 'indCostUnit', text: 'Ind CostUnit' },
                IndCostUnitTarget:{ key: 'indCostUnitTarget', text: 'Ind CostUnitTarget' },
                IndCostTotal : { key: 'indCostTotal', text: 'Ind CostTotal'},
                IndHoursUnit:{ key: 'indHoursUnit', text: 'Ind HoursUnit' },
                IndHoursUnitTarget:{ key: 'indHoursUnitTarget', text: 'IndHoursUnitTarget' },
                IndHoursTotal : { key: 'indHoursTotal', text: 'IndHoursTotal'},
                RuleType:{ key: 'type', text: 'Type' },
                RuleCode:{ key: 'ruleCode', text: 'Rule Code' },
                RuleDescription : { key: 'ruleDesc', text: 'Rule Description'},
                ElementCode:{ key: 'elemCode', text: 'Element Code' },
                ElementDescription : { key: 'elemDesc', text: 'Element Description'},
                IsIndirectCost :{key : 'isIndirectCost', text:'Indirect Cost'},
                EstTypeFk :{key: 'estType', text: 'Estimate Type'},
                FromDate :{key: 'fromDate', text: 'From Date'},
                ToDate :{key: 'toDate', text: 'To Date'},
                EstimatePrice:{ key: 'estimatePrice', text: 'Estimate Price' },
                AdjustPrice:{ key: 'adjustPrice', text: 'Adjust Price' },
                QuantitySummary:{ key: 'quantitySummary', text: 'Quantity Summary' },
                CostSummary:{ key: 'costSummary', text: 'Cost Summary' },
                AdjQuantitySummary:{ key: 'adjQuantitySummary', text: 'Adjust Quantity Summary' },
                AdjCostSummary:{ key: 'adjCostSummary', text: 'Adjust Cost Summary' },
                EstimateCostUnit:{ key: 'estimateCostUnit', text: 'Estimate Cost/unit' },
                AdjustCostUnit:{ key: 'adjustCostUnit', text: 'Adjust Cost/unit' },
                DescriptionInfo1:{ key: 'descriptionInfo1', text: 'Additional Description' },
                DetailsStack:{ key: 'detailsStack', text: 'Details Stack' },
                LineItemDescriptionInfo:{ key: 'lineItemDes', text: 'Line Item Description' },
                AssemblyCode:{ key: 'assemblyTemplateCode', text: 'Assembly Template Code' },
                AssemblyDescriptionInfo:{ key: 'assemblyTemplateDes', text: 'Assembly Template Description' },
                references : {key: 'references', text: 'References' },
                ruleAndParam : {key: 'ruleAndParam', text: 'Rule/Parameter' },
                itemQuantity : {key: 'itemQuantity', text: 'Item Quantity' },
                quantityRelation : {key: 'quantityRelation', text: 'Quantity Relation' },
                quantiyAndFactors : {key: 'quantityAndFactors', text: 'Quantiy/Factors' },
                costFactors : {key: 'costFactors', text: 'Cost Factors' },
                costAndHours : {key: 'costAndHours', text: 'Cost/Hours' },
                directIndCost : {key: 'directIndCost', text: 'Direct/Indirect Cost' },
                flags : {key: 'flags', text: 'Flags' },
                assignments : {key: 'assignments', text: 'Assignments' },
                sortCodes : {key: 'sortCodes', text: 'Sort Codes' },
                packageAndCos : {key: 'packageAndCos', text: 'Package/COS' },
                duration : {key: 'duration', text: 'Duration' },
                ruleInfo:{key: 'ruleInfo', text: 'Rules' },
                comment :{ key: 'comment', text: 'Comment' },
                CosMatchText: { key: 'cosMatchText', text: 'COS Match Text'},
                QuantityTypeFk: { key: 'quantityType', text: 'Quantity Type'},
                EstResourceFlagFk: { key: 'resourceFlag', text: 'Resource Flag'},
                Date: { key: 'date', text: 'Date'},
                BoqItemFlagFk:{key: 'boqItemFlagFk', text: 'BoQ Item Flag'},
                Hint:{key: 'hint', text: 'Copy Source'},
                Budget:{key: 'budget', text: 'Budget'},
                IsNoMarkup:{key: 'isNoMarkup', text: 'No Markup'},
                IsDisabledPrc:{key: 'isDisabledPrc', text: 'Disabled Prc'},
                IsGeneratedPrc:{key: 'isGeneratedPrc', text: 'Generated Prc'},
                BudgetUnit:{key: 'budgetUnit', text: 'Budget/Unit'},
                IsFixedBudget:{key: 'isFixedBudget', text: 'Fix Budget'},
                BudgetDifference:{key: 'budgetDiff', text: 'Budget Difference'},
                Checked:{key: 'checked', text: 'Checked'},
                Color:{key: 'color', text: 'Color'},
                IsOptional:{key: 'estIsOptional', text: 'Optional'},
                IsExecute:{key: 'lineItemSelStatement.isExecute', text: 'Select'},
                WicCatFk:{key: 'wicCatFk', text: 'WIC Group Ref.No.'},
                LoggingMessage:{key: 'loggingMessage', text: 'Last Execution History'},
                UnitRateStrQty:{key: 'unitRateStrQty', text: 'Unit Rate/Structure Quantity'},
                StructureQty:{key: 'structureQty', text: 'Structure Quantity'},
                StructureUom:{key: 'structureUom', text: 'Structure UoM'},
                SelectStatement: {key: 'lineItemSelStatement.selectStatement', text: 'Select Statement'},
                WicItemFk: {key: 'lineItemSelStatement.wicItemRefNo', text: 'WIC Item Ref. No.'},
                WicHeaderItemFk :{ key: 'wicBoqHeaderFk', text: 'WIC BoQ -Root Item ref.No'},
                PrjCostGroup1Description: { key: 'prjCostGroup1Description', text: 'Project Cost Group 1 Description' },
                PrjCostGroup2Description: { key: 'prjCostGroup2Description', text: 'Project Cost Group 2 Description' },
                PrjCostGroup3Description: { key: 'prjCostGroup3Description', text: 'Project Cost Group 3 Description' },
                PrjCostGroup4Description: { key: 'prjCostGroup4Description', text: 'Project Cost Group 4 Description' },
                PrjCostGroup5Description: { key: 'prjCostGroup5Description', text: 'Project Cost Group 5 Description' },
                PrcPackage2HeaderFk:{ key: 'prcPackage2HeaderFk', text: 'PrcPackage2HeaderFk' },
                AdvancedAllowance :{key : 'advancedAllowance', text:'Advanced Allowance'},
                BoqHeaderReference: { key: 'boqRootRef', text: 'BoQ-Root Item Ref.No'},
                BoqItemReference: { key: 'boqItemFk', text: 'BoQ-Item Ref.No'},
            }),
            ...prefixAllTranslationKeys('procurement.common.',{
                TotalLeadTime: { key: 'totalLeadTime', text: 'Total Lead Time'},
                PrcItemMaterialCode: { key: 'prcItemMaterialNo', text: 'Material No.'},
                PrcItemDescription1: { key: 'prcItemDescription1', text: 'Description 1'},
                PrcItemFk: { key: 'prcItemMaterial', text: 'Material'},
                PrcItemDescription: { key: 'prcItemDescription', text: 'Item Description'},
                PriceMaterial: { key: 'entityMaterialPrice', text: 'Material Price'},
                QuantityMaterial: { key: 'entityMaterialQuantity', text: 'Material Quantity'},
                BpdVatGroupFk: { key: 'entityVatGroup', text: 'Vat Group'},
                TelephoneMobileFk: { key: 'contactMobile', text: 'Telephone Mobil'},
            }),
            ...prefixAllTranslationKeys('project.structures.',{
                SortCode01Fk: { key: 'sortCode01', text: 'Sort Code 1'},
                SortCode02Fk: { key: 'sortCode02', text: 'Sort Code 2'},
                SortCode03Fk: { key: 'sortCode03', text: 'Sort Code 3'},
                SortCode04Fk: { key: 'sortCode04', text: 'Sort Code 4'},
                SortCode05Fk: { key: 'sortCode05', text: 'Sort Code 5'},
                SortCode06Fk: { key: 'sortCode06', text: 'Sort Code 6'},
                SortCode07Fk: { key: 'sortCode07', text: 'Sort Code 7'},
                SortCode08Fk: { key: 'sortCode08', text: 'Sort Code 8'},
                SortCode09Fk: { key: 'sortCode09', text: 'Sort Code 9'},
                SortCode10Fk: { key: 'sortCode10', text: 'Sort Code 10'},
            }),
            ...prefixAllTranslationKeys('basics.common.',{
                PercentOfTime: { key: 'percentOfTime', text: 'Percent Of Time'},
                PercentOfCost: { key: 'percentOfCost', text: 'Percent Of Cost'},
                CalcCumCost: { key: 'calcCumCost', text: 'Calculated Cumulative Cost'},
                CalcPeriodCost: { key: 'calcPeriodCost', text: 'Calculated Period Cost'},
                CalcCumCash: { key: 'calcCumCash', text: 'Calculated Cumulative Cash'},
                CalcPeriodCash: { key: 'calcPeriodCash', text: 'Calculated Period Cash'},
                CumCost: { key: 'cumCost', text: 'Cumulative Cost'},
                PeriodCost: { key: 'periodCost', text: 'Period Cost'},
                CumCash: { key: 'cumCash', text: 'Cumulative Cash'},
                PeriodCash: { key: 'periodCash', text: 'Period Cash'},
                ActPeriodCost: { key: 'actPeriodCost', text: 'Actual Period Cost'},
                ActPeriodCash: { key: 'actPeriodCash', text: 'Actual Period Cash'},
                DateEffective: { key: 'dateEffective', text: 'Date Effective'},
                StructureFk: { key: 'entityPrcStructureFk', text: 'Procurement Structure'},
            }),
            ...prefixAllTranslationKeys('procurement.package.',{
                moduleName: { key: 'moduleName', text: 'package'},
                HeaderGroupHeader: { key: 'entityGroup', text: 'Group'},
                Requisition: { key: 'entityRequisition.group', text: 'Requisition'},
                RfQ: { key: 'entityRfQ.group', text: 'RfQ'},
                Quote: { key: 'entityQuote.group', text: 'Quote'},
                Contract: { key: 'entityContract.group', text: 'Contract'},
                ExternalResponsible: { key: 'externalResponsible.group', text: 'External Responsible'},
                Performance: { key: 'entityPerformance.group', text: 'Performance'},
                Event: { key: 'entityEvent.group', text: 'Event'},
                HeaderGroupUserDefinedFields: { key: 'entityUserDefined', text: 'UserDefined'},
                ProjectStatusFk: { key: 'projectStatus', text: 'Project Status'},
                ComCurrencyCode: { key: 'ComCurrencyCode', text: 'Company Currency'},
                ComCurrencyDes: { key: 'entityComCurrencyDes', text: 'Company Currency Description'},
                PlannedStart: { key: 'entityPlannedStart', text: 'Planned Start'},
                PlannedEnd: { key: 'entityPlannedEnd', text: 'Planned End'},
                ActualStart: { key: 'entityActualStart', text: 'Actual Start'},
                ActualEnd: { key: 'entityActualEnd', text: 'Actual End'},
                PackageTypeFk: { key: 'entityPackageType', text: 'PackageType'},
                Remark2: { key: 'entityRemark2', text: 'Remark2'},
                Remark3: { key: 'entityRemark3', text: 'Remark3'},
                ActivityFk: { key: 'entityActivity', text: 'Activity'},
                ScheduleFk: { key: 'entitySchedule', text: 'Schedule'},
                RequisitionCode: { key: 'entityRequisition.code', text: 'Requisition Code'},
                RequisitionDescription: { key: 'entityRequisition.description', text: 'Requisition Description'},
                RequisitionStatus: { key: 'entityRequisition.status', text: 'Requisition Status'},
                RfqCode: { key: 'entityRfQ.code', text: 'RfQ Code'},
                RfqDescription: { key: 'entityRfQ.description', text: 'RfQ Description'},
                RfqStatus: { key: 'entityRfQ.status', text: 'RfQ Status'},
                ContractCode: { key: 'entityContract.code', text: 'Contract Code'},
                ContractDescription: { key: 'entityContract.description', text: 'Contract Description'},
                BusinessPartnerName: { key: 'entityContract.businessPartnerName', text: 'Business Partner Name'},
                BusinessPartnerSubsidiaryName: { key: 'entityContract.subsidiaryName', text: 'Subsidiary Name'},
                SupplierNumber: { key: 'entityContract.supplierNumber', text: 'Supplier Number'},
                ContractStatus: { key: 'entityContract.status', text: 'Contract Status'},
                ReqHeaderFk: {  key: 'entityReqCode', text: 'Comment'},
                StartCalculated: { key: 'event.startCalculated', text: 'startCalculated'},
                EndCalculated: { key: 'event.endCalculated', text: 'endCalculated'},
                StartOverwrite: { key: 'event.startOverwrite', text: 'startOverwrite'},
                EndOverwrite: { key: 'event.endOverwrite', text: 'endOverwrite'},
                StartActual: { key: 'event.startActual', text: 'startActual'},
                EndActual: { key: 'event.endActual', text: 'endActual'},
                StartRelevant: { key: 'event.startRelevant', text: 'startRelevant'},
                EndRelevant: { key: 'event.endRelevant', text: 'endRelevant'},
                BaselinePath: { key: 'baselinePath', text: 'Baseline Path'},
                BaselineUpdate: { key: 'baselineUpdate', text: 'Baseline Update'},
                BaselinePhase: { key: 'baselinePhase', text: 'Baseline Phase'},
                Status: { key: 'import.status', text: 'Status'},
                StatusOfLineItemAssignedToPackage: { key: 'generated', text: 'Generated'},
                LineItemCode: { key: 'itemAssignment.lineItemCode', text: 'Line Item Code'},
                LineItemDescription: { key: 'itemAssignment.lineItemDescription', text: 'Line Item Description'},
                MdcLineItemContextFk: { key: 'entityMdcLineItemContextFk', text: 'Mdc LineItem Context'},
            }),
            ...prefixAllTranslationKeys('boq.main.',{
                PrjCharacter : { key: 'PrjCharacter', text: 'Project Characteristic' },
                WorkContent : { key: 'WorkContent', text: 'Work Content' },
                BoqLineTypeFk: {  key: 'BoqLineTypeFk', text: 'BoQ Line Type' },
                BoqItemReferenceFk: {  key: 'BoqItemReferenceFk', text: 'Reference to' },
                BoqItemReferenceDescription: {  key: 'BoqItemReferenceDescription', text: 'Reference to Description' },
                BoqItemReferenceDesignDescription: {  key: 'BoqItemReferenceDesignDescription', text: 'Reference to Design Description' },
                PrcItemEvaluationFk: {  key: 'PrcItemEvaluationFk', text: 'Procurement Item Evaluation' },
                PrcStructureDescription: {  key: 'PrcStructureDescription', text: 'Procurement Structure Description' },
                BpdAgreementFk: {  key: 'BpdAgreementFk', text: 'Agreement' },
                BasItemTypeFk: {  key: 'BasItemTypeFk', text: 'Item Type Stand/Opt' },
                BasItemType2Fk: {  key: 'BasItemType2Fk', text: 'Item Type Base/Alt' },
                LicCostGroup1Description: {  key: 'costGroup1Description', text: 'Cost Group 1 Description' },
                LicCostGroup2Description: {  key: 'costGroup2Description', text: 'Cost Group 2 Description' },
                LicCostGroup3Description: {  key: 'costGroup3Description', text: 'Cost Group 3 Description' },
                LicCostGroup4Description: {  key: 'costGroup4Description', text: 'Cost Group 4 Description' },
                LicCostGroup5Description: {  key: 'costGroup5Description', text: 'Cost Group 5 Description' },
            }),
            ...prefixAllTranslationKeys('sales.bid.',{
                PrcTexttypeFk: { key: 'headerText.prcTextType', text: 'Text Type'},
                BasTextModuleTypeFk: { key: 'bastextmoduletype', text: 'Text Module Type'},
            }),
            ...prefixAllTranslationKeys('project.main.',{
                projectAddressGroup: { key: 'projectAddressGroup', text: 'Project Address'},
                IsActive: { key: 'entityIsActive', text: 'Is Active'},
                RegionFk: { key: 'entityRegion', text: 'Region'},
    
            }),
            ...prefixAllTranslationKeys('model.main.',{
                MdlModelFk : { key: 'entityModel', text: 'Model'},
                MdlObjectFk : { key: 'entityObject', text: 'Object'},
                ContainerFk : { key: 'entityContainer', text: 'Container'},
    
            }),
            ...prefixAllTranslationKeys('estimate.Rule.',{
                EvalSequenceFk:{ key: 'evaluationSequence', text: 'Evaluation Sequence'},
                Rule:{ key: 'rules', text: 'Rules' },
            }),
            ...prefixAllTranslationKeys('constructionsystem.main.',{
                CosMasterHeaderCode:{ key: 'masterHeaderCode', text: 'Master Header Code' },
                CosMasterHeaderDescription:{ key: 'masterHeaderDescription', text: 'Master Header Description' },
            }),
            ...prefixAllTranslationKeys('estimate.project.',{
                LgmJobFk: { key: 'lgmJobFk', text: 'Job'},
                IsControlling: { key: 'isControlling', text: 'Is Controlling'},
    
            }),
            ...prefixAllTranslationKeys('procurement.structure.',{
                PrcEventTypeFk: { key: 'eventType', text: 'eventType'},
            }),
            ...prefixAllTranslationKeys('basics.procurementconfiguration.',{
                PrcContractTypeFk: { key: 'configuration.prccontracttypeFk', text: 'Contract Type'},
            }),
            ...prefixAllTranslationKeys('basics.bank.',{
                BankFk: { key: 'entityBank', text: 'Bank'},
            }),
            ...prefixAllTranslationKeys('basics.costcodes.',{
                EstCostTypeFk: { key: 'costType', text: 'Cost Type' },
            }),
            ...prefixAllTranslationKeys('estimate.param.',{
                Param:{ key: 'params', text: 'Params' },
            }),
            ...prefixAllTranslationKeys('basics.company.',{
                EndDate:{ key: 'entityEndDate', text: 'Period End Date'},
            }),
            ...prefixAllTranslationKeys('project.main.',{
                ContactFk: { key: 'entityContact', text: '*Contact'},
            }),
        };          
    }
}

