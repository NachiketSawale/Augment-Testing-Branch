/*
 * Copyright(c) RIB Software GmbH
 * ----------------------------------------------------------------------
 * This is auto-generated code by ClientTypeScriptModuleInfoGenerator.
 * ----------------------------------------------------------------------
 * This code was generated by RIB Model Generator tool.
 *
 * Changes to this file may cause incorrect behavior and will be lost if
 * the code is regenerated.
 * ----------------------------------------------------------------------
 */

import { LogisticPlantsupplierPlantSupplierDataService } from '../../services/data/logistic-plantsupplier-plant-supplier-data.service';
import { LogisticPlantsupplierPlantSupplierValidationService } from '../../services/validation/logistic-plantsupplier-plant-supplier-validation.service';
import { BasicsSharedCustomizeLookupOverloadProvider } from '@libs/basics/shared';
import { ILogisticPlantsupplierPlantSupplierEntity } from '@libs/logistic/interfaces';
import { prefixAllTranslationKeys } from '@libs/platform/common';
import { IEntityInfo } from '@libs/ui/business-base';
import { ILayoutConfiguration } from '@libs/ui/common';

export const logisticPlantsupplierPlantSupplierEntityInfoGenerated = <IEntityInfo<ILogisticPlantsupplierPlantSupplierEntity>>{
	grid: {
		title: {
			text: 'PlantSupplier',
			key: 'logistic.plantsupplier.plantsupplierListTitle'
		}
	},
	form: {
		title: {
			text: 'PlantSupplier',
			key: 'logistic.plantsupplier.plantsupplierDetailTitle'
		},
		containerUuid: 'ab47bc6a89d94ff5b6099ba32c4a584c'
	},
	dataService: (ctx) => ctx.injector.get(LogisticPlantsupplierPlantSupplierDataService),
	validationService: (ctx) => ctx.injector.get(LogisticPlantsupplierPlantSupplierValidationService),
	dtoSchemeId: {
		moduleSubModule: 'Logistic.Plantsupplier',
		typeName: 'PlantSupplierDto'
	},
	permissionUuid: 'e3d637f3ac74405d9b1bb6ad9e657533',
	layoutConfiguration: async (ctx) => {
		return <ILayoutConfiguration<ILogisticPlantsupplierPlantSupplierEntity>>{
			groups: [
				{
					gid: 'default',
					attributes: [
						'Code',
						'Description',
						'RubricCategoryFk',
						//'JobFk',
						//'ControllingUnitFk',
						//'ProjectStockFk',
						'IsActive',
						'SearchPattern',
					]
				},
			],
			overloads: {
				RubricCategoryFk: BasicsSharedCustomizeLookupOverloadProvider.provideRubricCategoryLookupOverload(true)
			},
			labels: { 
				...prefixAllTranslationKeys('logistic.plantsupplier.', {
					Code: { key: 'entityCode' },
					Description: { key: 'entityDescription' },
					RubricCategoryFk: { key: 'rubriccategory' },
					JobFk: { key: 'entityJobFk' },
					ControllingUnitFk: { key: 'performingControllingUnit' },
					ProjectStockFk: { key: 'entityPrjStockFk' },
					IsActive: { key: 'entityIsActive' },
					SearchPattern: { key: 'entitySearchPattern' }
				}),
			 }
		};
	}
};