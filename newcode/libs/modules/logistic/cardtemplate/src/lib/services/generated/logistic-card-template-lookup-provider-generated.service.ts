/*
 * Copyright(c) RIB Software GmbH
 * ----------------------------------------------------------------------
 * This is auto-generated code by ClientTSLookupHelperGenerator.
 * ----------------------------------------------------------------------
 * This code was generated by RIB Model Generator tool.
 *
 * Changes to this file may cause incorrect behavior and will be lost if
 * the code is regenerated.
 * ----------------------------------------------------------------------
 */

import { LogisticCardTemplateJobCardActivityTemplateLookupService } from '../lookupdata/logistic-card-template-job-card-activity-template-lookup.service';
import { LogisticCardTemplateJobCardRecordTemplateLookupService } from '../lookupdata/logistic-card-template-job-card-record-template-lookup.service';
import { LogisticCardTemplateJobCardTemplateDocumentLookupService } from '../lookupdata/logistic-card-template-job-card-template-document-lookup.service';
import { LogisticCardTemplateJobCardTemplateLookupService } from '../lookupdata/logistic-card-template-job-card-template-lookup.service';
import { ILogisticCardTemplateJobCardActivityTemplateEntity, ILogisticCardTemplateJobCardRecordTemplateEntity, ILogisticCardTemplateJobCardTemplateDocumentEntity, ILogisticCardTemplateJobCardTemplateEntity } from '@libs/logistic/interfaces';
import { createLookup, FieldType, ICommonLookupOptions, TypedConcreteFieldOverload } from '@libs/ui/common';

export class LogisticCardTemplateLookupProviderGeneratedService {
	public provideJobCardTemplateLookupOverload<T extends object>(options?: ICommonLookupOptions): TypedConcreteFieldOverload<T> {
		return {
			type: FieldType.Lookup,
			lookupOptions: createLookup<T,ILogisticCardTemplateJobCardTemplateEntity>({
				dataServiceToken: LogisticCardTemplateJobCardTemplateLookupService,
				showClearButton: !!options?.showClearButton
			})
		};
	}
	public provideJobCardTemplateReadonlyLookupOverload<T extends object>(): TypedConcreteFieldOverload<T> {
		return {
			type: FieldType.Lookup,
			readonly: true,
			lookupOptions: createLookup<T,ILogisticCardTemplateJobCardTemplateEntity>({
				dataServiceToken: LogisticCardTemplateJobCardTemplateLookupService,
				showClearButton: false
			})
		};
	}
	public provideJobCardActivityTemplateLookupOverload<T extends object>(options?: ICommonLookupOptions): TypedConcreteFieldOverload<T> {
		return {
			type: FieldType.Lookup,
			lookupOptions: createLookup<T,ILogisticCardTemplateJobCardActivityTemplateEntity>({
				dataServiceToken: LogisticCardTemplateJobCardActivityTemplateLookupService,
				showClearButton: !!options?.showClearButton
			})
		};
	}
	public provideJobCardActivityTemplateReadonlyLookupOverload<T extends object>(): TypedConcreteFieldOverload<T> {
		return {
			type: FieldType.Lookup,
			readonly: true,
			lookupOptions: createLookup<T,ILogisticCardTemplateJobCardActivityTemplateEntity>({
				dataServiceToken: LogisticCardTemplateJobCardActivityTemplateLookupService,
				showClearButton: false
			})
		};
	}
	public provideJobCardRecordTemplateLookupOverload<T extends object>(options?: ICommonLookupOptions): TypedConcreteFieldOverload<T> {
		return {
			type: FieldType.Lookup,
			lookupOptions: createLookup<T,ILogisticCardTemplateJobCardRecordTemplateEntity>({
				dataServiceToken: LogisticCardTemplateJobCardRecordTemplateLookupService,
				showClearButton: !!options?.showClearButton
			})
		};
	}
	public provideJobCardRecordTemplateReadonlyLookupOverload<T extends object>(): TypedConcreteFieldOverload<T> {
		return {
			type: FieldType.Lookup,
			readonly: true,
			lookupOptions: createLookup<T,ILogisticCardTemplateJobCardRecordTemplateEntity>({
				dataServiceToken: LogisticCardTemplateJobCardRecordTemplateLookupService,
				showClearButton: false
			})
		};
	}
	public provideJobCardTemplateDocumentLookupOverload<T extends object>(options?: ICommonLookupOptions): TypedConcreteFieldOverload<T> {
		return {
			type: FieldType.Lookup,
			lookupOptions: createLookup<T,ILogisticCardTemplateJobCardTemplateDocumentEntity>({
				dataServiceToken: LogisticCardTemplateJobCardTemplateDocumentLookupService,
				showClearButton: !!options?.showClearButton
			})
		};
	}
	public provideJobCardTemplateDocumentReadonlyLookupOverload<T extends object>(): TypedConcreteFieldOverload<T> {
		return {
			type: FieldType.Lookup,
			readonly: true,
			lookupOptions: createLookup<T,ILogisticCardTemplateJobCardTemplateDocumentEntity>({
				dataServiceToken: LogisticCardTemplateJobCardTemplateDocumentLookupService,
				showClearButton: false
			})
		};
	}
}