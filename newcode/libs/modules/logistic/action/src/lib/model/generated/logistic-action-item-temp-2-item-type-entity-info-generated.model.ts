/*
 * Copyright(c) RIB Software GmbH
 * ----------------------------------------------------------------------
 * This is auto-generated code by ClientTypeScriptModuleInfoGenerator.
 * ----------------------------------------------------------------------
 * This code was generated by RIB Model Generator tool.
 *
 * Changes to this file may cause incorrect behavior and will be lost if
 * the code is regenerated.
 * ----------------------------------------------------------------------
 */

import { LogisticActionItemTemp2ItemTypeDataService } from '../../services/data/logistic-action-item-temp-2-item-type-data.service';
import { LogisticActionItemTemp2ItemTypeValidationService } from '../../services/validation/logistic-action-item-temp-2-item-type-validation.service';
import { ILogisticActionItemTemp2ItemTypeEntity } from '@libs/logistic/interfaces';
import { prefixAllTranslationKeys } from '@libs/platform/common';
import { IEntityInfo } from '@libs/ui/business-base';
import { ILayoutConfiguration } from '@libs/ui/common';

export const logisticActionItemTemp2ItemTypeEntityInfoGenerated = <IEntityInfo<ILogisticActionItemTemp2ItemTypeEntity>>{
	grid: {
		title: {
			text: 'Action Item Types',
			key: 'logistic.action.actionItemTypesListTitle'
		}
	},
	form: {
		title: {
			text: 'Action Item Types Details',
			key: 'logistic.action.actionItemTypesDetailTitle'
		},
		containerUuid: '0ea726bc027d48d9a047f716f5dad752'
	},
	dataService: (ctx) => ctx.injector.get(LogisticActionItemTemp2ItemTypeDataService),
	validationService: (ctx) => ctx.injector.get(LogisticActionItemTemp2ItemTypeValidationService),
	dtoSchemeId: {
		moduleSubModule: 'Logistic.Action',
		typeName: 'ActionItemTemp2ItemTypeDto'
	},
	permissionUuid: '655124b7bd5447d8805276058df6027d',
	layoutConfiguration: async (ctx) => {
		return <ILayoutConfiguration<ILogisticActionItemTemp2ItemTypeEntity>>{
			groups: [
				{
					gid: 'baseGroup',
					attributes: [
						//'ActionItemTypeFk',
						'CommentText',
					]
				},
			],
			overloads: {},
			labels: {
				...prefixAllTranslationKeys('logistic.action.', {
					ActionItemTypeFk: { key: 'entityActionItemType' }
				}),
				...prefixAllTranslationKeys('cloud.common.', {
					CommentText: { key: 'entityCommentText' },
				}),
			 }
		};
	}
};