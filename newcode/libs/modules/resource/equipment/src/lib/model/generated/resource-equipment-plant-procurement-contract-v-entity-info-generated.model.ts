/*
 * Copyright(c) RIB Software GmbH
 * ----------------------------------------------------------------------
 * This is auto-generated code by ClientTSEntityInfoGenerator.
 * ----------------------------------------------------------------------
 * This code was generated by RIB Model Generator tool.
 *
 * Changes to this file may cause incorrect behavior and will be lost if
 * the code is regenerated.
 * ----------------------------------------------------------------------
 */

import { ResourceEquipmentPlantProcurementContractVDataService } from '../../services/data/resource-equipment-plant-procurement-contract-v-data.service';
import { ResourceEquipmentPlantProcurementContractVValidationService } from '../../services/validation/resource-equipment-plant-procurement-contract-v-validation.service';
import { prefixAllTranslationKeys } from '@libs/platform/common';
import { IResourceEquipmentPlantProcurementContractVEntity } from '@libs/resource/interfaces';
import { IEntityInfo } from '@libs/ui/business-base';
import { ILayoutConfiguration } from '@libs/ui/common';

export const resourceEquipmentPlantProcurementContractVEntityInfoGenerated = <IEntityInfo<IResourceEquipmentPlantProcurementContractVEntity>>{
	grid: {
		title: {
			text: 'Procurement Contracts',
			key: 'resource.equipment.procurementContractsListTitle'
		}
	},
	form: {
		title: {
			text: 'Procurement Contracts Detail',
			key: 'resource.equipment.procurementContractsDetailTitle'
		},
		containerUuid: 'd2015e219c124e6cbdb1134dffa062b2'
	},
	dataService: (ctx) => ctx.injector.get(ResourceEquipmentPlantProcurementContractVDataService),
	validationService: (ctx) => ctx.injector.get(ResourceEquipmentPlantProcurementContractVValidationService),
	dtoSchemeId: {
		moduleSubModule: 'Resource.Equipment',
		typeName: 'PlantProcurementContractVDto'
	},
	permissionUuid: '213a828ef4e94991a8210e161fc17cba',
	layoutConfiguration: async (ctx) => {
		return <ILayoutConfiguration<IResourceEquipmentPlantProcurementContractVEntity>>{
			groups: [
				{
					gid: 'default',
					attributes: [
						'ItemFk',
						'ItemDescription1',
						'ItemDescription2',
						'Quantity',
						//'UomFk',
						'Pricetotal',
						'Total',
						//'ItemProcurementStructureFk',
						'ItemProcurementStructureCode',
						'ItemProcurementStructureDescription',
						//'ItemControllingUnitFk',
						'ItemControllingUnitCode',
						'ItemControllingUnitDescription',
						'ProcurementHeaderFk',
						'ProcurementHeaderCode',
						'ProcurementHeaderDescription',
						'ContractHeaderFk',
						'ContractCode',
						'DateOrdered',
						'ContractDescription',
						//'BusinessPartnerFk',
						'ContractStatusFk',
						//'ContractControllingUnitFk',
						'ContractControllingUnitCode',
						'ContractControllingUnitDescription',
					]
				},
			],
			overloads: {},
			labels: { 
				...prefixAllTranslationKeys('resource.equipment.', {
					ItemFk: { key: 'entityItemFk' },
					ItemDescription1: { key: 'entityItemDescription1' },
					ItemDescription2: { key: 'entityItemDescription2' },
					Quantity: { key: 'entityItemQuantity' },
					Pricetotal: { key: 'entityPricetotal' },
					Total: { key: 'entityItemPriceTotal' },
					ItemProcurementStructureFk: { key: 'entityItemProcurementStructure' },
					ItemProcurementStructureCode: { key: 'entityItemPrcStructureCode' },
					ItemProcurementStructureDescription: { key: 'entityItemPrcStructureDescription' },
					ItemControllingUnitFk: { key: 'entityItemControllingUnitFk' },
					ItemControllingUnitCode: { key: 'entityItemControllingUnitCode' },
					ItemControllingUnitDescription: { key: 'entityItemControllingUnitDescription' },
					ProcurementHeaderFk: { key: 'entityProcurementHeaderFk' },
					ProcurementHeaderCode: { key: 'entityProcurementHeaderCode' },
					ProcurementHeaderDescription: { key: 'entityProcurementHeaderDescription' },
					ContractHeaderFk: { key: 'entityContractHeaderFk' },
					ContractCode: { key: 'entityContractCode' },
					DateOrdered: { key: 'entityDateOrdered' },
					ContractDescription: { key: 'entityContractDescription' },
					ContractStatusFk: { key: 'entityContractStatusFk' },
					ContractControllingUnitFk: { key: 'entityContractControllingUnitFk' },
					ContractControllingUnitCode: { key: 'entityContractControllingUnitCode' },
					ContractControllingUnitDescription: { key: 'entityContractControllingUnitDescription' }
				}),
				...prefixAllTranslationKeys('cloud.common.', {
					UomFk: { key: 'entityUoM' },
					BusinessPartnerFk: { key: 'entityBusinessPartner' }
				}),
			 }
		};
	}
};