/*
 * Copyright(c) RIB Software GmbH
 * ----------------------------------------------------------------------
 * This is auto-generated code by ClientTSEntityInfoGenerator.
 * ----------------------------------------------------------------------
 * This code was generated by RIB Model Generator tool.
 *
 * Changes to this file may cause incorrect behavior and will be lost if
 * the code is regenerated.
 * ----------------------------------------------------------------------
 */

import { ResourceEquipmentPlantPricelistDataService } from '../../services/data/resource-equipment-plant-pricelist-data.service';
import { ResourceEquipmentPlantPricelistValidationService } from '../../services/validation/resource-equipment-plant-pricelist-validation.service';
import { BasicsSharedCustomizeLookupOverloadProvider, BasicsSharedLookupOverloadProvider } from '@libs/basics/shared';
import { prefixAllTranslationKeys } from '@libs/platform/common';
import { IResourceEquipmentPlantPricelistEntity } from '@libs/resource/interfaces';
import { IEntityInfo } from '@libs/ui/business-base';
import { ILayoutConfiguration } from '@libs/ui/common';

export const resourceEquipmentPlantPricelistEntityInfoGenerated = <IEntityInfo<IResourceEquipmentPlantPricelistEntity>>{
	grid: {
		title: {
			text: 'Pricelists',
			key: 'resource.equipment.pricelistListTitle'
		}
	},
	form: {
		title: {
			text: 'Pricelists Detail',
			key: 'resource.equipment.pricelistDetailTitle'
		},
		containerUuid: '2d915e6ca9db4c4ba1d03bb09c3aea0e'
	},
	dataService: (ctx) => ctx.injector.get(ResourceEquipmentPlantPricelistDataService),
	validationService: (ctx) => ctx.injector.get(ResourceEquipmentPlantPricelistValidationService),
	dtoSchemeId: {
		moduleSubModule: 'Resource.Equipment',
		typeName: 'PlantPricelistDto'
	},
	permissionUuid: '2e0de4514e1e4873b5c650edbe6f2c41',
	layoutConfiguration: async (ctx) => {
		return <ILayoutConfiguration<IResourceEquipmentPlantPricelistEntity>>{
			groups: [
				{
					gid: 'default',
					attributes: [
						'PricelistFk',
						'PricingGroupFk',
						'IsManual',
						'PricePortion1',
						'PricePortion2',
						'PricePortion3',
						'PricePortion4',
						'PricePortion5',
						'PricePortion6',
						'ValidFrom',
						'ValidTo',
						'CommentText',
						'UomFk',
						'QualityFactor',
					]
				},
			],
			overloads: {
				PricelistFk: BasicsSharedCustomizeLookupOverloadProvider.provideEquipmentPriceListLookupOverload(true),
				UomFk: BasicsSharedLookupOverloadProvider.provideUoMLookupOverload(true)
			},
			labels: { 
				...prefixAllTranslationKeys('resource.equipment.', {
					PricelistFk: { key: 'entityPricelist' },
					PricingGroupFk: { key: 'entityPricingGroup' },
					IsManual: { key: 'entityIsManual' },
					PricePortion1: { key: 'entityPricePortion1' },
					PricePortion2: { key: 'entityPricePortion2' },
					PricePortion3: { key: 'entityPricePortion3' },
					PricePortion4: { key: 'entityPricePortion4' },
					PricePortion5: { key: 'entityPricePortion5' },
					PricePortion6: { key: 'entityPricePortion6' },
					QualityFactor: { key: 'entityQualityFactor' }
				}),
				...prefixAllTranslationKeys('cloud.common.', {
					ValidFrom: { key: 'entityValidFrom' },
					ValidTo: { key: 'entityValidTo' },
					CommentText: { key: 'entityComment' },
					UomFk: { key: 'entityUoM' }
				}),
			 }
		};
	}
};