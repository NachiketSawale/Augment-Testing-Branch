/*
 * Copyright(c) RIB Software GmbH
 * ----------------------------------------------------------------------
 * This is auto-generated code by ClientTSEntityInfoGenerator.
 * ----------------------------------------------------------------------
 * This code was generated by RIB Model Generator tool.
 *
 * Changes to this file may cause incorrect behavior and will be lost if
 * the code is regenerated.
 * ----------------------------------------------------------------------
 */

import { ResourceEquipmentPlant2ControllingUnitDataService } from '../../services/data/resource-equipment-plant-2-controlling-unit-data.service';
import { ResourceEquipmentPlant2ControllingUnitValidationService } from '../../services/validation/resource-equipment-plant-2-controlling-unit-validation.service';
import { BasicsSharedCustomizeLookupOverloadProvider } from '@libs/basics/shared';
import { prefixAllTranslationKeys } from '@libs/platform/common';
import { IResourceEquipmentPlant2ControllingUnitEntity } from '@libs/resource/interfaces';
import { IEntityInfo } from '@libs/ui/business-base';
import { ILayoutConfiguration } from '@libs/ui/common';

export const resourceEquipmentPlant2ControllingUnitEntityInfoGenerated = <IEntityInfo<IResourceEquipmentPlant2ControllingUnitEntity>>{
	grid: {
		title: {
			text: 'Controlling Units',
			key: 'resource.equipment.controllingUnitListTitle'
		}
	},
	form: {
		title: {
			text: 'Controlling Units Detail',
			key: 'resource.equipment.controllingUnitDetailTitle'
		},
		containerUuid: 'ce5585bb21744dbab053f24f49c07bc2'
	},
	dataService: (ctx) => ctx.injector.get(ResourceEquipmentPlant2ControllingUnitDataService),
	validationService: (ctx) => ctx.injector.get(ResourceEquipmentPlant2ControllingUnitValidationService),
	dtoSchemeId: {
		moduleSubModule: 'Resource.Equipment',
		typeName: 'Plant2ControllingUnitDto'
	},
	permissionUuid: '1ae4a9f6b86b4b3f964dab760767219f',
	layoutConfiguration: async (ctx) => {
		return <ILayoutConfiguration<IResourceEquipmentPlant2ControllingUnitEntity>>{
			groups: [
				{
					gid: 'default',
					attributes: [
						'ProjectContextFk',
						//'ProjectFk',
						//'ControllingUnitFk',
						'Comment',
					]
				},
			],
			overloads: {
				ProjectContextFk: BasicsSharedCustomizeLookupOverloadProvider.provideProjectContextLookupOverload(true)
			},
			labels: { 
				...prefixAllTranslationKeys('resource.equipment.', {
					ProjectFk: { key: 'homeProject' },
					ControllingUnitFk: { key: 'entityContractControllingUnitFk' }
				}),
				...prefixAllTranslationKeys('basics.customize.', {
					ProjectContextFk: { key: 'projectcontext' }
				}),
				...prefixAllTranslationKeys('cloud.common.', {
					Comment: { key: 'entityComment' }
				}),
			 }
		};
	}
};