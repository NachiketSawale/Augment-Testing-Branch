/*
 * Copyright(c) RIB Software GmbH
 * ----------------------------------------------------------------------
 * This is auto-generated code by ClientTSEntityInfoGenerator.
 * ----------------------------------------------------------------------
 * This code was generated by RIB Model Generator tool.
 *
 * Changes to this file may cause incorrect behavior and will be lost if
 * the code is regenerated.
 * ----------------------------------------------------------------------
 */

import { ResourceEquipmentPlantFixedAssetDataService } from '../../services/data/resource-equipment-plant-fixed-asset-data.service';
import { ResourceEquipmentPlantFixedAssetValidationService } from '../../services/validation/resource-equipment-plant-fixed-asset-validation.service';
import { BasicsSharedCustomizeLookupOverloadProvider } from '@libs/basics/shared';
import { prefixAllTranslationKeys } from '@libs/platform/common';
import { IResourceEquipmentPlantFixedAssetEntity } from '@libs/resource/interfaces';
import { IEntityInfo } from '@libs/ui/business-base';
import { ILayoutConfiguration } from '@libs/ui/common';

export const resourceEquipmentPlantFixedAssetEntityInfoGenerated = <IEntityInfo<IResourceEquipmentPlantFixedAssetEntity>>{
	grid: {
		title: {
			text: 'Plant Fixed Assets',
			key: 'resource.equipment.plantFixedAssetListTitle'
		}
	},
	form: {
		title: {
			text: 'Plant Fixed Assets Detail',
			key: 'resource.equipment.plantFixedAssetDetailTitle'
		},
		containerUuid: 'e85c0d0ed4dd46f2b36f55e9ba8376da'
	},
	dataService: (ctx) => ctx.injector.get(ResourceEquipmentPlantFixedAssetDataService),
	validationService: (ctx) => ctx.injector.get(ResourceEquipmentPlantFixedAssetValidationService),
	dtoSchemeId: {
		moduleSubModule: 'Resource.Equipment',
		typeName: 'PlantFixedAssetDto'
	},
	permissionUuid: 'b46a50394062485b9c0f5ddabf9a1b01',
	layoutConfiguration: async (ctx) => {
		return <ILayoutConfiguration<IResourceEquipmentPlantFixedAssetEntity>>{
			groups: [
				{
					gid: 'default',
					attributes: [
						'CompanyFk',
						'Code',
						'Percentage',
						'FixedAssetFk',
						'Description',
						'ValidFrom',
						'ValidTo',
					]
				},
			],
			overloads: {
				FixedAssetFk: BasicsSharedCustomizeLookupOverloadProvider.provideEquipmentFixedAssetLookupOverload(true)
			},
			labels: { 
				...prefixAllTranslationKeys('resource.equipment.', {
					Percentage: { key: 'entityPercentage' },
					FixedAssetFk: { key: 'entityFixedAsset' }
				}),
				...prefixAllTranslationKeys('cloud.common.', {
					CompanyFk: { key: 'entityCompany' },
					ValidFrom: { key: 'entityValidFrom' },
					ValidTo: { key: 'entityValidTo' }
				}),
				...prefixAllTranslationKeys('basics.customize.', {
					Code: { key: 'costCode' }
				}),
				...prefixAllTranslationKeys('resource.common.', {
					Description: { key: 'plantDescription' }
				}),
			 }
		};
	}
};