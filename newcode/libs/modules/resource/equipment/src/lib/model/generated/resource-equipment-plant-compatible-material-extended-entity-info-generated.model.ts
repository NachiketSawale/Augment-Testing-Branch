/*
 * Copyright(c) RIB Software GmbH
 * ----------------------------------------------------------------------
 * This is auto-generated code by ClientTSEntityInfoGenerator.
 * ----------------------------------------------------------------------
 * This code was generated by RIB Model Generator tool.
 *
 * Changes to this file may cause incorrect behavior and will be lost if
 * the code is regenerated.
 * ----------------------------------------------------------------------
 */

import { ResourceEquipmentPlantCompatibleMaterialExtendedDataService } from '../../services/data/resource-equipment-plant-compatible-material-extended-data.service';
import { ResourceEquipmentPlantCompatibleMaterialExtendedValidationService } from '../../services/validation/resource-equipment-plant-compatible-material-extended-validation.service';
import { prefixAllTranslationKeys } from '@libs/platform/common';
import { IResourceEquipmentPlantCompatibleMaterialExtendedEntity } from '@libs/resource/interfaces';
import { IEntityInfo } from '@libs/ui/business-base';
import { ILayoutConfiguration } from '@libs/ui/common';

export const resourceEquipmentPlantCompatibleMaterialExtendedEntityInfoGenerated = <IEntityInfo<IResourceEquipmentPlantCompatibleMaterialExtendedEntity>>{
	grid: {
		title: {
			text: 'Compatible Materials',
			key: 'resource.equipment.compatibleMaterialListTitle'
		}
	},
	form: {
		title: {
			text: 'Compatible Materials Detail',
			key: 'resource.equipment.compatibleMaterialDetailsTitle'
		},
		containerUuid: '47488ebd7e73436ab9ae9ba7acfc6cec'
	},
	dataService: (ctx) => ctx.injector.get(ResourceEquipmentPlantCompatibleMaterialExtendedDataService),
	validationService: (ctx) => ctx.injector.get(ResourceEquipmentPlantCompatibleMaterialExtendedValidationService),
	dtoSchemeId: {
		moduleSubModule: 'Resource.Equipment',
		typeName: 'PlantCompatibleMaterialExtendedDto'
	},
	permissionUuid: '26b70d12f6134c08af7f3b173dd76c37',
	layoutConfiguration: async (ctx) => {
		return <ILayoutConfiguration<IResourceEquipmentPlantCompatibleMaterialExtendedEntity>>{
			groups: [
				{
					gid: 'default',
					attributes: [
						'MaterialCatalog',
						'MaterialCatalogDesc',
						'MaterialCatalogType',
						'MaterialCatalogCategoryShortDesc',
						'MaterialCatalogCategoryDesc',
						'BizPartner',
						'BizPartnerName1',
						'BizPartnerName2',
						'BizPartnerInternet',
						'BizPartnerEMail',
						'BizPartnerState',
						'BizPartnerStateDesc',
						'BizPartnerIsApproved',
						'BizPartnerCommunicationChannel',
						'Contracted',
						'ContractedDesc',
						'ContractedState',
						'ContractedStateDesc',
						'ContractedIsAccepted',
						'LanguageId',
					]
				},
			],
			overloads: {},
			labels: { 
				...prefixAllTranslationKeys('resource.equipment.', {
					MaterialCatalog: { key: 'entityMaterialCatalog' },
					MaterialCatalogDesc: { key: 'entityMaterialCatalogDesc' },
					MaterialCatalogType: { key: 'entityMaterialCatalogType' },
					MaterialCatalogCategoryShortDesc: { key: 'entityMaterialCatalogCategoryShortDesc' },
					MaterialCatalogCategoryDesc: { key: 'entityMaterialCatalogCategoryDesc' },
					BizPartner: { key: 'entityBizPartner' },
					BizPartnerName1: { key: 'entityBizPartnerName1' },
					BizPartnerName2: { key: 'entityBizPartnerName2' },
					BizPartnerInternet: { key: 'entityBizPartnerInternet' },
					BizPartnerEMail: { key: 'entityBizPartnerEMail' },
					BizPartnerState: { key: 'entityBizPartnerState' },
					BizPartnerStateDesc: { key: 'entityBizPartnerStateDesc' },
					BizPartnerIsApproved: { key: 'entityBizPartnerIsApproved' },
					BizPartnerCommunicationChannel: { key: 'entityBizPartnerCommunicationChannel' },
					Contracted: { key: 'entityContracted' },
					ContractedDesc: { key: 'entityContractedDesc' },
					ContractedState: { key: 'entityContractedState' },
					ContractedStateDesc: { key: 'entityContractedStateDesc' },
					ContractedIsAccepted: { key: 'entityContractedIsAccepted' },
					LanguageId: { key: 'entityLanguageId' }
				}),
			 }
		};
	}
};