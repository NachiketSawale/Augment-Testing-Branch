/*
 * Copyright(c) RIB Software GmbH
 * ----------------------------------------------------------------------
 * This is auto-generated code by ClientTSEntityInfoGenerator.
 * ----------------------------------------------------------------------
 * This code was generated by RIB Model Generator tool.
 *
 * Changes to this file may cause incorrect behavior and will be lost if
 * the code is regenerated.
 * ----------------------------------------------------------------------
 */

import { ResourceEquipmentPlantDocumentDataService } from '../../services/data/resource-equipment-plant-document-data.service';
import { ResourceEquipmentPlantDocumentValidationService } from '../../services/validation/resource-equipment-plant-document-validation.service';
import { prefixAllTranslationKeys } from '@libs/platform/common';
import { IResourceEquipmentPlantDocumentEntity } from '@libs/resource/interfaces';
import { IEntityInfo } from '@libs/ui/business-base';
import { ILayoutConfiguration } from '@libs/ui/common';

export const resourceEquipmentPlantDocumentEntityInfoGenerated = <IEntityInfo<IResourceEquipmentPlantDocumentEntity>>{
	grid: {
		title: {
			text: 'Plant Document',
			key: 'resource.equipment.plantDocumentDetailTitle'
		}
	},
	form: {
		title: {
			text: 'Plant Document Detail',
			key: 'resource.equipment.plantDocumentDetailTitle'
		},
		containerUuid: 'b364e4d2d3e7438cacfb320e3c8e93d9'
	},
	dataService: (ctx) => ctx.injector.get(ResourceEquipmentPlantDocumentDataService),
	validationService: (ctx) => ctx.injector.get(ResourceEquipmentPlantDocumentValidationService),
	dtoSchemeId: {
		moduleSubModule: 'Resource.Equipment',
		typeName: 'PlantDocumentDto'
	},
	permissionUuid: 'f0e92216d80d4f9892c0d591cfd93a06',
	layoutConfiguration: async (ctx) => {
		return <ILayoutConfiguration<IResourceEquipmentPlantDocumentEntity>>{
			groups: [
				{
					gid: 'default',
					attributes: [
						'Description',
						'PlantDocumentTypeFk',
						'DocumentTypeFk',
						'Date',
						'Barcode',
						'FileArchiveDocFk',
						'Url',
						'IsHiddenInPublicApi',
					]
				},
			],
			overloads: {},
			labels: { 
				...prefixAllTranslationKeys('resource.equipment.', {
					PlantDocumentTypeFk: { key: 'entityPlantDocumentTypeFk' },
					DocumentTypeFk: { key: 'entityPlantDocumentTypeFk' },
					Date: { key: 'entityWarrantyDate' },
					Barcode: { key: 'entityBarcode' },
					FileArchiveDocFk: { key: 'entityFileArchiveDoc' },
					Url: { key: 'url' },
					IsHiddenInPublicApi: { key: 'isHiddenInPublicApi' }
				}),
				...prefixAllTranslationKeys('resource.common.', {
					Description: { key: 'plantDescription' }
				}),
			 }
		};
	}
};