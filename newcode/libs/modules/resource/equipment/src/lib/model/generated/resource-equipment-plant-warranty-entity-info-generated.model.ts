/*
 * Copyright(c) RIB Software GmbH
 * ----------------------------------------------------------------------
 * This is auto-generated code by ClientTSEntityInfoGenerator.
 * ----------------------------------------------------------------------
 * This code was generated by RIB Model Generator tool.
 *
 * Changes to this file may cause incorrect behavior and will be lost if
 * the code is regenerated.
 * ----------------------------------------------------------------------
 */

import { ResourceEquipmentPlantWarrantyDataService } from '../../services/data/resource-equipment-plant-warranty-data.service';
import { ResourceEquipmentPlantWarrantyValidationService } from '../../services/validation/resource-equipment-plant-warranty-validation.service';
import { BasicsSharedCustomizeLookupOverloadProvider, BasicsSharedLookupOverloadProvider } from '@libs/basics/shared';
import { prefixAllTranslationKeys } from '@libs/platform/common';
import { IResourceEquipmentPlantWarrantyEntity } from '@libs/resource/interfaces';
import { IEntityInfo } from '@libs/ui/business-base';
import { ILayoutConfiguration } from '@libs/ui/common';

export const resourceEquipmentPlantWarrantyEntityInfoGenerated = <IEntityInfo<IResourceEquipmentPlantWarrantyEntity>>{
	grid: {
		title: {
			text: 'Component Warranties',
			key: 'resource.equipment.componentWarrantyListTitle'
		}
	},
	form: {
		title: {
			text: 'Component Warranties Detail',
			key: 'resource.equipment.componentWarrantyDetailTitle'
		},
		containerUuid: '6e2f6cdff8244bc5a7bda75cc1983b35'
	},
	dataService: (ctx) => ctx.injector.get(ResourceEquipmentPlantWarrantyDataService),
	validationService: (ctx) => ctx.injector.get(ResourceEquipmentPlantWarrantyValidationService),
	dtoSchemeId: {
		moduleSubModule: 'Resource.Equipment',
		typeName: 'PlantWarrantyDto'
	},
	permissionUuid: '9552282e659b480c8e3b3a2338861377',
	layoutConfiguration: async (ctx) => {
		return <ILayoutConfiguration<IResourceEquipmentPlantWarrantyEntity>>{
			groups: [
				{
					gid: 'default',
					attributes: [
						'PlantFk',
						'WarrantyTypeFk',
						'WarrantyStatusFk',
						'Quantity',
						'UomFk',
						'Hours',
						'WarrantyStart',
						'WarrantyEnd',
						'DescriptionInfo',
						'CommentText',
						'Remark',
						'UserDefinedText01',
						'UserDefinedText02',
						'UserDefinedText03',
						'UserDefinedText04',
						'UserDefinedText05',
						'UserDefinedDate01',
						'UserDefinedDate02',
						'UserDefinedDate03',
						'UserDefinedDate04',
						'UserDefinedDate05',
					]
				},
			],
			overloads: {
				WarrantyTypeFk: BasicsSharedCustomizeLookupOverloadProvider.providePlantWarrantyTypeLookupOverload(true),
				WarrantyStatusFk: BasicsSharedCustomizeLookupOverloadProvider.providePlantWarrantyStatusLookupOverload(true),
				UomFk: BasicsSharedLookupOverloadProvider.provideUoMLookupOverload(true)
			},
			labels: { 
				...prefixAllTranslationKeys('resource.equipment.', {
					PlantFk: { key: 'entityPlant' },
					Quantity: { key: 'entityItemQuantity' },
					Hours: { key: 'entityHours' },
					WarrantyStart: { key: 'entityWarrantyStart' },
					WarrantyEnd: { key: 'entityWarrantyEnd' },
					DescriptionInfo: { key: 'entityLongDescription' },
					Remark: { key: 'entityRemark' },
					UserDefinedText01: { key: 'entityUserDefinedText01' },
					UserDefinedText02: { key: 'entityUserDefinedText02' },
					UserDefinedText03: { key: 'entityUserDefinedText03' },
					UserDefinedText04: { key: 'entityUserDefinedText04' },
					UserDefinedText05: { key: 'entityUserDefinedText05' },
					UserDefinedDate01: { key: 'entityUserDefinedDate01' },
					UserDefinedDate02: { key: 'entityUserDefinedDate02' },
					UserDefinedDate03: { key: 'entityUserDefinedDate03' },
					UserDefinedDate04: { key: 'entityUserDefinedDate04' },
					UserDefinedDate05: { key: 'entityUserDefinedDate05' }
				}),
				...prefixAllTranslationKeys('basics.customize.', {
					WarrantyTypeFk: { key: 'plantwarrantytype' },
					WarrantyStatusFk: { key: 'plantwarrantystatus' }
				}),
				...prefixAllTranslationKeys('cloud.common.', {
					UomFk: { key: 'entityUoM' },
					CommentText: { key: 'entityComment' }
				}),
			 }
		};
	}
};