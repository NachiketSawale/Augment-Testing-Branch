/*
 * Copyright(c) RIB Software GmbH
 * ----------------------------------------------------------------------
 * This is auto-generated code by ClientTSEntityInfoGenerator.
 * ----------------------------------------------------------------------
 * This code was generated by RIB Model Generator tool.
 *
 * Changes to this file may cause incorrect behavior and will be lost if
 * the code is regenerated.
 * ----------------------------------------------------------------------
 */

import { ResourceEquipmentPlantAccessoryDataService } from '../../services/data/resource-equipment-plant-accessory-data.service';
import { ResourceEquipmentPlantAccessoryValidationService } from '../../services/validation/resource-equipment-plant-accessory-validation.service';
import { prefixAllTranslationKeys } from '@libs/platform/common';
import { IResourceEquipmentPlantAccessoryEntity } from '@libs/resource/interfaces';
import { IEntityInfo } from '@libs/ui/business-base';
import { ILayoutConfiguration } from '@libs/ui/common';

export const resourceEquipmentPlantAccessoryEntityInfoGenerated = <IEntityInfo<IResourceEquipmentPlantAccessoryEntity>>{
	grid: {
		title: {
			text: 'Compatible Accessories',
			key: 'resource.equipment.plantAccessoryListTitle'
		}
	},
	form: {
		title: {
			text: 'Compatible Accessories Detail',
			key: 'resource.equipment.plantAccessoryDetailTitle'
		},
		containerUuid: 'd5a69c4da56845f2b5420016f4fc0de3'
	},
	dataService: (ctx) => ctx.injector.get(ResourceEquipmentPlantAccessoryDataService),
	validationService: (ctx) => ctx.injector.get(ResourceEquipmentPlantAccessoryValidationService),
	dtoSchemeId: {
		moduleSubModule: 'Resource.Equipment',
		typeName: 'PlantAccessoryDto'
	},
	permissionUuid: 'c8814c5d27b54f60827f48112dc1fc57',
	layoutConfiguration: async (ctx) => {
		return <ILayoutConfiguration<IResourceEquipmentPlantAccessoryEntity>>{
			groups: [
				{
					gid: 'default',
					attributes: [
						'AccessoryTypeFk',
						'Plant2Fk',
						'CommentText',
					]
				},
			],
			overloads: {},
			labels: { 
				...prefixAllTranslationKeys('resource.equipment.', {
					AccessoryTypeFk: { key: 'plantAccessoryType' },
					Plant2Fk: { key: 'plantPlant2Fk' }
				}),
				...prefixAllTranslationKeys('cloud.common.', {
					CommentText: { key: 'entityComment' }
				}),
			 }
		};
	}
};