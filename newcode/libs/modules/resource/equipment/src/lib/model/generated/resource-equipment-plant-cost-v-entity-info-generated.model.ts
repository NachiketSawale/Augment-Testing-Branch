/*
 * Copyright(c) RIB Software GmbH
 * ----------------------------------------------------------------------
 * This is auto-generated code by ClientTSEntityInfoGenerator.
 * ----------------------------------------------------------------------
 * This code was generated by RIB Model Generator tool.
 *
 * Changes to this file may cause incorrect behavior and will be lost if
 * the code is regenerated.
 * ----------------------------------------------------------------------
 */

import { ResourceEquipmentPlantCostVDataService } from '../../services/data/resource-equipment-plant-cost-v-data.service';
import { ResourceEquipmentPlantCostVValidationService } from '../../services/validation/resource-equipment-plant-cost-v-validation.service';
import { prefixAllTranslationKeys } from '@libs/platform/common';
import { IResourceEquipmentPlantCostVEntity } from '@libs/resource/interfaces';
import { IEntityInfo } from '@libs/ui/business-base';
import { ILayoutConfiguration } from '@libs/ui/common';

export const resourceEquipmentPlantCostVEntityInfoGenerated = <IEntityInfo<IResourceEquipmentPlantCostVEntity>>{
	grid: {
		title: {
			text: 'Plant Cost View',
			key: 'resource.equipment.costVGridTitle'
		}
	},
	form: {
		title: {
			text: 'Plant Cost View Detail',
			key: 'resource.equipment.costVDetailTitle'
		},
		containerUuid: '4ed827706c314183bdef73c70c1ac05e'
	},
	dataService: (ctx) => ctx.injector.get(ResourceEquipmentPlantCostVDataService),
	validationService: (ctx) => ctx.injector.get(ResourceEquipmentPlantCostVValidationService),
	dtoSchemeId: {
		moduleSubModule: 'Resource.Equipment',
		typeName: 'PlantCostVDto'
	},
	permissionUuid: 'c827ac51271d40b2af1ad364afe7c10c',
	layoutConfiguration: async (ctx) => {
		return <ILayoutConfiguration<IResourceEquipmentPlantCostVEntity>>{
			groups: [
				{
					gid: 'default',
					attributes: [
						'DisplayInPlant',
						'JobCode',
						'JobDescription',
						'JobUserdefined1',
						'JobValidfrom',
						'JobValidto',
						//'PlantGroupFk',
						'JobTypeDescription',
						'Projectno',
						'ItemheaderDate',
						'ItemheaderCode',
						'ItemheaderDescription',
						'ItemheaderFrom',
						'ItemheaderTo',
						'Currency',
						'ItemPrcStructureCode',
						'ItemPrcStructureDescription',
						'ItemDescription1',
						'ItemDescription2',
						'ItemQuantity',
						'ItemQuantityMultiplier',
						'ItemPriceportion1',
						'ItemPriceportion2',
						'ItemPriceportion3',
						'ItemPriceportion4',
						'ItemPriceportion5',
						'ItemPriceportion6',
						'ItemPriceTotal',
						'ItemTotalCost',
						'ItemUnitInfo',
						'SettlementstatusIsStorno',
						'ContractStatusIsRejected',
						'InvoiceHeaderStatusIsCanceled',
					]
				},
			],
			overloads: {},
			labels: { 
				...prefixAllTranslationKeys('resource.equipment.', {
					DisplayInPlant: { key: 'entityDisplayInPlant' },
					JobCode: { key: 'entityJobCode' },
					JobDescription: { key: 'entityJobDescription' },
					JobUserdefined1: { key: 'entityJobUserdefined1' },
					JobValidfrom: { key: 'entityJobValidfrom' },
					JobValidto: { key: 'entityJobValidto' },
					PlantGroupFk: { key: 'entityResourceEquipmentGroup' },
					JobTypeDescription: { key: 'entityJobTypeDescription' },
					Projectno: { key: 'entityProjectno' },
					ItemheaderDate: { key: 'entityItemheaderDate' },
					ItemheaderCode: { key: 'entityItemheaderCode' },
					ItemheaderDescription: { key: 'entityItemheaderDescription' },
					ItemheaderFrom: { key: 'entityItemheaderFrom' },
					ItemheaderTo: { key: 'entityItemheaderTo' },
					Currency: { key: 'entityCurrency' },
					ItemPrcStructureCode: { key: 'entityItemPrcStructureCode' },
					ItemPrcStructureDescription: { key: 'entityItemPrcStructureDescription' },
					ItemDescription1: { key: 'entityItemDescription1' },
					ItemDescription2: { key: 'entityItemDescription2' },
					ItemQuantity: { key: 'entityItemQuantity' },
					ItemQuantityMultiplier: { key: 'entityItemQuantityMultiplier' },
					ItemPriceportion1: { key: 'entityItemPriceportion1' },
					ItemPriceportion2: { key: 'entityItemPriceportion2' },
					ItemPriceportion3: { key: 'entityItemPriceportion3' },
					ItemPriceportion4: { key: 'entityItemPriceportion4' },
					ItemPriceportion5: { key: 'entityItemPriceportion5' },
					ItemPriceportion6: { key: 'entityItemPriceportion6' },
					ItemPriceTotal: { key: 'entityItemPriceTotal' },
					ItemTotalCost: { key: 'entityItemTotalCost' },
					ItemUnitInfo: { key: 'entityItemUnitInfo' },
					SettlementstatusIsStorno: { key: 'entitySettlementstatusIsStorno' },
					ContractStatusIsRejected: { key: 'entityContractStatusIsRejected' },
					InvoiceHeaderStatusIsCanceled: { key: 'entityInvoiceHeaderStatusIsCanceled' }
				}),
			 }
		};
	}
};