/*
 * Copyright(c) RIB Software GmbH
 * ----------------------------------------------------------------------
 * This is auto-generated code by ClientTSEntityInfoGenerator.
 * ----------------------------------------------------------------------
 * This code was generated by RIB Model Generator tool.
 *
 * Changes to this file may cause incorrect behavior and will be lost if
 * the code is regenerated.
 * ----------------------------------------------------------------------
 */

import { ResourceEquipmentBulkPlantOwnerDataService } from '../../services/data/resource-equipment-bulk-plant-owner-data.service';
import { ResourceEquipmentBulkPlantOwnerValidationService } from '../../services/validation/resource-equipment-bulk-plant-owner-validation.service';
import { BasicsSharedLookupOverloadProvider } from '@libs/basics/shared';
import { prefixAllTranslationKeys } from '@libs/platform/common';
import { IResourceEquipmentBulkPlantOwnerEntity } from '@libs/resource/interfaces';
import { IEntityInfo } from '@libs/ui/business-base';
import { ILayoutConfiguration } from '@libs/ui/common';

export const resourceEquipmentBulkPlantOwnerEntityInfoGenerated = <IEntityInfo<IResourceEquipmentBulkPlantOwnerEntity>>{
	grid: {
		title: {
			text: 'Bulk Plant Ownership',
			key: 'resource.equipment.equipmentBulkPlantOwnerList'
		}
	},
	form: {
		title: {
			text: 'Bulk Plant Ownership Detail',
			key: 'resource.equipment.equipmentBulkPlantOwnerDetail'
		},
		containerUuid: 'f1b17cf6415e4d4e91a1038e27053f1c'
	},
	dataService: (ctx) => ctx.injector.get(ResourceEquipmentBulkPlantOwnerDataService),
	validationService: (ctx) => ctx.injector.get(ResourceEquipmentBulkPlantOwnerValidationService),
	dtoSchemeId: {
		moduleSubModule: 'Resource.Equipment',
		typeName: 'BulkPlantOwnerDto'
	},
	permissionUuid: '5a0fe583fb6d477cb60ac090fd742e9b',
	layoutConfiguration: async (ctx) => {
		return <ILayoutConfiguration<IResourceEquipmentBulkPlantOwnerEntity>>{
			groups: [
				{
					gid: 'default',
					attributes: [
						'CompanyFk',
						//'ProjectFk',
						//'DropPointFk',
						'TotalQuantity',
						'YardQuantity',
						//'ConstructionProjectFk',
						//'ConstructionDropPointFk',
						'ProjectQuantity',
					]
				},
			],
			overloads: {
				CompanyFk: BasicsSharedLookupOverloadProvider.provideCompanyReadOnlyLookupOverload()
			},
			labels: { 
				...prefixAllTranslationKeys('resource.equipment.', {
					CompanyFk: { key: 'entityCompany' },
					ProjectFk: { key: 'entityProject' },
					DropPointFk: { key: 'entityDropPoint' },
					TotalQuantity: { key: 'entityTotalQuantity' },
					YardQuantity: { key: 'entityYardQuantity' },
					ConstructionProjectFk: { key: 'entityConstructionProject' },
					ConstructionDropPointFk: { key: 'entityConstructionDropPoint' },
					ProjectQuantity: { key: 'entityProjectQuantity' }
				}),
			 }
		};
	}
};