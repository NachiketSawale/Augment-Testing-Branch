/*
 * Copyright(c) RIB Software GmbH
 * ----------------------------------------------------------------------
 * This is auto-generated code by ClientTSEntityInfoGenerator.
 * ----------------------------------------------------------------------
 * This code was generated by RIB Model Generator tool.
 *
 * Changes to this file may cause incorrect behavior and will be lost if
 * the code is regenerated.
 * ----------------------------------------------------------------------
 */

import { ResourceEquipmentBusinessPartnerDataService } from '../../services/data/resource-equipment-business-partner-data.service';
import { ResourceEquipmentBusinessPartnerValidationService } from '../../services/validation/resource-equipment-business-partner-validation.service';
import { prefixAllTranslationKeys } from '@libs/platform/common';
import { IResourceEquipmentBusinessPartnerEntity } from '@libs/resource/interfaces';
import { IEntityInfo } from '@libs/ui/business-base';
import { ILayoutConfiguration } from '@libs/ui/common';

export const resourceEquipmentBusinessPartnerEntityInfoGenerated = <IEntityInfo<IResourceEquipmentBusinessPartnerEntity>>{
	grid: {
		title: {
			text: 'Business Partners',
			key: 'resource.equipment.BusinessPartnerListTitle'
		}
	},
	form: {
		title: {
			text: 'Business Partners Detail',
			key: 'resource.equipment.BusinessPartnerDetailTitle'
		},
		containerUuid: '442c8df8e82346ae942d9c50fc495bb7'
	},
	dataService: (ctx) => ctx.injector.get(ResourceEquipmentBusinessPartnerDataService),
	validationService: (ctx) => ctx.injector.get(ResourceEquipmentBusinessPartnerValidationService),
	dtoSchemeId: {
		moduleSubModule: 'Resource.Equipment',
		typeName: 'BusinessPartnerDto'
	},
	permissionUuid: 'c84bcfcbcb3f41eca885db0e9a08f179',
	layoutConfiguration: async (ctx) => {
		return <ILayoutConfiguration<IResourceEquipmentBusinessPartnerEntity>>{
			groups: [
				{
					gid: 'default',
					attributes: [
						'PartnerTypeFk',
						'BusinessPartnerFk',
						'ContactFk',
						'SubsidiaryFk',
						'CommentText',
						'WarrantyDate',
					]
				},
			],
			overloads: {},
			labels: { 
				...prefixAllTranslationKeys('resource.equipment.', {
					PartnerTypeFk: { key: 'entityPartnerTypeFk' },
					ContactFk: { key: 'entityContactFk' },
					WarrantyDate: { key: 'entityWarrantyDate' }
				}),
				...prefixAllTranslationKeys('cloud.common.', {
					BusinessPartnerFk: { key: 'entityBusinessPartner' },
					SubsidiaryFk: { key: 'entitySubsidiary' },
					CommentText: { key: 'entityComment' }
				}),
			 }
		};
	}
};