/*
 * Copyright(c) RIB Software GmbH
 * ----------------------------------------------------------------------
 * This is auto-generated code by ClientTypeScriptDataServiceGenerator.
 * ----------------------------------------------------------------------
 * This code was generated by RIB Model Generator tool.
 *
 * Changes to this file may cause incorrect behavior and will be lost if
 * the code is regenerated.
 * ----------------------------------------------------------------------
 */

import { ResourceEquipmentPlantUpdate } from '../../../model/resource-equipment-plant-update.class';
import { ResourceEquipmentPlantDataService } from '../resource-equipment-plant-data.service';
import { inject } from '@angular/core';
import {
	DataServiceFlatLeaf,
	IDataServiceEndPointOptions,
	IDataServiceOptions,
	IDataServiceRoleOptions,
	ServiceRole
} from '@libs/platform/data-access';
import { IResourceEquipmentPlantAccessoryEntity, IResourceEquipmentPlantEntity } from '@libs/resource/interfaces';

export class ResourceEquipmentPlantAccessoryDataGeneratedService extends DataServiceFlatLeaf<IResourceEquipmentPlantAccessoryEntity,IResourceEquipmentPlantEntity,ResourceEquipmentPlantUpdate> {
	public constructor(){
		const options: IDataServiceOptions<IResourceEquipmentPlantAccessoryEntity> = {
			apiUrl: 'resource/equipment/plantaccessory',
			readInfo: <IDataServiceEndPointOptions>{
				endPoint: 'listbyparent',
				usePost: true
			},
			roleInfo: <IDataServiceRoleOptions<IResourceEquipmentPlantAccessoryEntity>>{
				role: ServiceRole.Leaf,
				itemName: 'PlantAccessory',
				parent: inject(ResourceEquipmentPlantDataService)
			}
		};
		super(options);
	}
	public override isParentFn(parentKey: IResourceEquipmentPlantEntity, entity: IResourceEquipmentPlantAccessoryEntity): boolean {
		return entity.PlantFk === parentKey.Id;
	}
}