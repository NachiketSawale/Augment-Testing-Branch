/*
 * Copyright(c) RIB Software GmbH
 * ----------------------------------------------------------------------
 * This is auto-generated code by ClientTypeScriptValidationServiceGenerator.
 * ----------------------------------------------------------------------
 * This code was generated by RIB Model Generator tool.
 *
 * Changes to this file may cause incorrect behavior and will be lost if
 * the code is regenerated.
 * ----------------------------------------------------------------------
 */

import { ResourceMaintenanceSchemaDataService } from '../../data/resource-maintenance-schema-data.service';
import { inject, ProviderToken } from '@angular/core';
import {
	BaseValidationService,
	IEntityRuntimeDataRegistry,
	IEntitySchema,
	IValidationFunctions,
	PlatformSchemaService,
	ValidationServiceFactory,
	Validator
} from '@libs/platform/data-access';
import { IResourceMaintenanceSchemaEntity } from '@libs/resource/interfaces';
import { Dictionary } from 'lodash';

export class ResourceMaintenanceSchemaValidationGeneratedService extends BaseValidationService<IResourceMaintenanceSchemaEntity> {
	private autoValidators: IValidationFunctions<IResourceMaintenanceSchemaEntity> | null = null;
	protected handwrittenValidators: Dictionary<() => Validator<IResourceMaintenanceSchemaEntity> | Validator<IResourceMaintenanceSchemaEntity>[] | undefined> | null = null;
	protected generatedValidators: IValidationFunctions<IResourceMaintenanceSchemaEntity> | null = null;
	protected resourceMaintenanceSchemaData: ResourceMaintenanceSchemaDataService = inject(ResourceMaintenanceSchemaDataService);
	public constructor(){
		super();
		
		const schemaSvcToken: ProviderToken<PlatformSchemaService<IResourceMaintenanceSchemaEntity>> = PlatformSchemaService<IResourceMaintenanceSchemaEntity>;
		const platformSchemaService = inject(schemaSvcToken);
		
		// eslint-disable-next-line @typescript-eslint/no-this-alias
		const self = this;
		
		platformSchemaService.getSchema({moduleSubModule: 'Resource.Maintenance', typeName: 'MaintenanceSchemaDto'}).then(scheme => this.WriteToValidator(scheme, self));
	}
	private WriteToValidator(scheme : IEntitySchema<IResourceMaintenanceSchemaEntity>, self : ResourceMaintenanceSchemaValidationGeneratedService){
		this.autoValidators = new ValidationServiceFactory<IResourceMaintenanceSchemaEntity>().provideValidationFunctionsFromScheme(scheme, self);
	}
	public generateValidationFunctions(): IValidationFunctions<IResourceMaintenanceSchemaEntity> {
		const validators = {};
		this.generatedValidators = this.autoValidators !== null ? { ...this.autoValidators, ...validators } : validators;
		return { ...this.generatedValidators, ...this.getValidators(this.handwrittenValidators) };
	}
	protected getEntityRuntimeData(): IEntityRuntimeDataRegistry<IResourceMaintenanceSchemaEntity> {
		return this.resourceMaintenanceSchemaData;
	}
}