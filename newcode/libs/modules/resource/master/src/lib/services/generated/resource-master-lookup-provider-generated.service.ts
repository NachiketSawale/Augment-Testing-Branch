/*
 * Copyright(c) RIB Software GmbH
 * ----------------------------------------------------------------------
 * This is auto-generated code by ClientTSLookupHelperGenerator.
 * ----------------------------------------------------------------------
 * This code was generated by RIB Model Generator tool.
 *
 * Changes to this file may cause incorrect behavior and will be lost if
 * the code is regenerated.
 * ----------------------------------------------------------------------
 */

import { ResourceMasterProvidedSkillDocumentLookupService } from '../lookupdata/resource-master-provided-skill-document-lookup.service';
import { ResourceMasterResourceLookupService } from '../lookupdata/resource-master-resource-lookup.service';
import { IResourceMasterProvidedSkillDocumentEntity, IResourceMasterResourceEntity } from '@libs/resource/interfaces';
import { createLookup, FieldType, ICommonLookupOptions, TypedConcreteFieldOverload } from '@libs/ui/common';

export class ResourceMasterLookupProviderGeneratedService {
	public provideResourceLookupOverload<T extends object>(options?: ICommonLookupOptions): TypedConcreteFieldOverload<T> {
		return {
			type: FieldType.Lookup,
			lookupOptions: createLookup<T,IResourceMasterResourceEntity>({
				dataServiceToken: ResourceMasterResourceLookupService,
				showClearButton: !!options?.showClearButton
			})
		};
	}
	public provideResourceReadonlyLookupOverload<T extends object>(): TypedConcreteFieldOverload<T> {
		return {
			type: FieldType.Lookup,
			readonly: true,
			lookupOptions: createLookup<T,IResourceMasterResourceEntity>({
				dataServiceToken: ResourceMasterResourceLookupService,
				showClearButton: false
			})
		};
	}
	public provideProvidedSkillDocumentLookupOverload<T extends object>(options?: ICommonLookupOptions): TypedConcreteFieldOverload<T> {
		return {
			type: FieldType.Lookup,
			lookupOptions: createLookup<T,IResourceMasterProvidedSkillDocumentEntity>({
				dataServiceToken: ResourceMasterProvidedSkillDocumentLookupService,
				showClearButton: !!options?.showClearButton
			})
		};
	}
	public provideProvidedSkillDocumentReadonlyLookupOverload<T extends object>(): TypedConcreteFieldOverload<T> {
		return {
			type: FieldType.Lookup,
			readonly: true,
			lookupOptions: createLookup<T,IResourceMasterProvidedSkillDocumentEntity>({
				dataServiceToken: ResourceMasterProvidedSkillDocumentLookupService,
				showClearButton: false
			})
		};
	}
}